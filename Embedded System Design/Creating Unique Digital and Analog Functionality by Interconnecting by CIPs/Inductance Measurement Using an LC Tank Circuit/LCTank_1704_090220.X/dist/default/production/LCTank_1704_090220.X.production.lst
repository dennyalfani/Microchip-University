

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Sep 04 14:53:41 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1704
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    61                           	dabs	1,0x7E,2
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 12/02/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F1704 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000E                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001C                     	;# 
   123  008C                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  010C                     	;# 
   141  010E                     	;# 
   142  0111                     	;# 
   143  0112                     	;# 
   144  0113                     	;# 
   145  0114                     	;# 
   146  0115                     	;# 
   147  0116                     	;# 
   148  0117                     	;# 
   149  0118                     	;# 
   150  0119                     	;# 
   151  011C                     	;# 
   152  018C                     	;# 
   153  018E                     	;# 
   154  0191                     	;# 
   155  0191                     	;# 
   156  0192                     	;# 
   157  0193                     	;# 
   158  0193                     	;# 
   159  0194                     	;# 
   160  0195                     	;# 
   161  0196                     	;# 
   162  0197                     	;# 
   163  0199                     	;# 
   164  0199                     	;# 
   165  0199                     	;# 
   166  019A                     	;# 
   167  019A                     	;# 
   168  019A                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019C                     	;# 
   175  019C                     	;# 
   176  019C                     	;# 
   177  019D                     	;# 
   178  019D                     	;# 
   179  019D                     	;# 
   180  019E                     	;# 
   181  019E                     	;# 
   182  019E                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  019F                     	;# 
   188  020C                     	;# 
   189  020E                     	;# 
   190  0211                     	;# 
   191  0211                     	;# 
   192  0212                     	;# 
   193  0212                     	;# 
   194  0213                     	;# 
   195  0213                     	;# 
   196  0214                     	;# 
   197  0214                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0216                     	;# 
   203  0216                     	;# 
   204  0217                     	;# 
   205  0217                     	;# 
   206  028C                     	;# 
   207  028E                     	;# 
   208  0291                     	;# 
   209  0291                     	;# 
   210  0292                     	;# 
   211  0293                     	;# 
   212  0293                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029A                     	;# 
   218  029E                     	;# 
   219  030C                     	;# 
   220  030E                     	;# 
   221  038C                     	;# 
   222  038E                     	;# 
   223  0391                     	;# 
   224  0392                     	;# 
   225  0393                     	;# 
   226  0397                     	;# 
   227  0398                     	;# 
   228  0399                     	;# 
   229  0415                     	;# 
   230  0416                     	;# 
   231  0417                     	;# 
   232  041C                     	;# 
   233  041D                     	;# 
   234  041E                     	;# 
   235  0511                     	;# 
   236  0515                     	;# 
   237  0617                     	;# 
   238  0618                     	;# 
   239  0619                     	;# 
   240  0619                     	;# 
   241  061A                     	;# 
   242  061B                     	;# 
   243  061C                     	;# 
   244  061C                     	;# 
   245  0691                     	;# 
   246  0692                     	;# 
   247  0693                     	;# 
   248  0694                     	;# 
   249  0695                     	;# 
   250  0696                     	;# 
   251  0697                     	;# 
   252  0698                     	;# 
   253  0699                     	;# 
   254  069A                     	;# 
   255  069B                     	;# 
   256  069C                     	;# 
   257  069D                     	;# 
   258  069E                     	;# 
   259  069F                     	;# 
   260  0E0F                     	;# 
   261  0E10                     	;# 
   262  0E11                     	;# 
   263  0E12                     	;# 
   264  0E13                     	;# 
   265  0E14                     	;# 
   266  0E15                     	;# 
   267  0E17                     	;# 
   268  0E20                     	;# 
   269  0E21                     	;# 
   270  0E22                     	;# 
   271  0E24                     	;# 
   272  0E25                     	;# 
   273  0E28                     	;# 
   274  0E29                     	;# 
   275  0E2A                     	;# 
   276  0E2B                     	;# 
   277  0E90                     	;# 
   278  0E91                     	;# 
   279  0E92                     	;# 
   280  0E94                     	;# 
   281  0E95                     	;# 
   282  0EA0                     	;# 
   283  0EA1                     	;# 
   284  0EA2                     	;# 
   285  0EA3                     	;# 
   286  0EA4                     	;# 
   287  0EA5                     	;# 
   288  0F0F                     	;# 
   289  0F10                     	;# 
   290  0F11                     	;# 
   291  0F12                     	;# 
   292  0F13                     	;# 
   293  0F14                     	;# 
   294  0F15                     	;# 
   295  0F16                     	;# 
   296  0F17                     	;# 
   297  0F18                     	;# 
   298  0F19                     	;# 
   299  0F1A                     	;# 
   300  0F1B                     	;# 
   301  0F1C                     	;# 
   302  0F1D                     	;# 
   303  0F1E                     	;# 
   304  0F1F                     	;# 
   305  0F20                     	;# 
   306  0F21                     	;# 
   307  0F22                     	;# 
   308  0F23                     	;# 
   309  0F24                     	;# 
   310  0F25                     	;# 
   311  0F26                     	;# 
   312  0F27                     	;# 
   313  0F28                     	;# 
   314  0F29                     	;# 
   315  0F2A                     	;# 
   316  0F2B                     	;# 
   317  0F2C                     	;# 
   318  0F2D                     	;# 
   319  0FE4                     	;# 
   320  0FE5                     	;# 
   321  0FE6                     	;# 
   322  0FE7                     	;# 
   323  0FE8                     	;# 
   324  0FE9                     	;# 
   325  0FEA                     	;# 
   326  0FEB                     	;# 
   327  0FED                     	;# 
   328  0FEE                     	;# 
   329  0FEF                     	;# 
   330  0000                     	;# 
   331  0001                     	;# 
   332  0002                     	;# 
   333  0003                     	;# 
   334  0004                     	;# 
   335  0005                     	;# 
   336  0006                     	;# 
   337  0007                     	;# 
   338  0008                     	;# 
   339  0009                     	;# 
   340  000A                     	;# 
   341  000B                     	;# 
   342  000C                     	;# 
   343  000E                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0016                     	;# 
   350  0017                     	;# 
   351  0018                     	;# 
   352  0019                     	;# 
   353  001A                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  008C                     	;# 
   357  008E                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009B                     	;# 
   369  009C                     	;# 
   370  009D                     	;# 
   371  009E                     	;# 
   372  009F                     	;# 
   373  010C                     	;# 
   374  010E                     	;# 
   375  0111                     	;# 
   376  0112                     	;# 
   377  0113                     	;# 
   378  0114                     	;# 
   379  0115                     	;# 
   380  0116                     	;# 
   381  0117                     	;# 
   382  0118                     	;# 
   383  0119                     	;# 
   384  011C                     	;# 
   385  018C                     	;# 
   386  018E                     	;# 
   387  0191                     	;# 
   388  0191                     	;# 
   389  0192                     	;# 
   390  0193                     	;# 
   391  0193                     	;# 
   392  0194                     	;# 
   393  0195                     	;# 
   394  0196                     	;# 
   395  0197                     	;# 
   396  0199                     	;# 
   397  0199                     	;# 
   398  0199                     	;# 
   399  019A                     	;# 
   400  019A                     	;# 
   401  019A                     	;# 
   402  019B                     	;# 
   403  019B                     	;# 
   404  019B                     	;# 
   405  019B                     	;# 
   406  019B                     	;# 
   407  019C                     	;# 
   408  019C                     	;# 
   409  019C                     	;# 
   410  019D                     	;# 
   411  019D                     	;# 
   412  019D                     	;# 
   413  019E                     	;# 
   414  019E                     	;# 
   415  019E                     	;# 
   416  019F                     	;# 
   417  019F                     	;# 
   418  019F                     	;# 
   419  019F                     	;# 
   420  019F                     	;# 
   421  020C                     	;# 
   422  020E                     	;# 
   423  0211                     	;# 
   424  0211                     	;# 
   425  0212                     	;# 
   426  0212                     	;# 
   427  0213                     	;# 
   428  0213                     	;# 
   429  0214                     	;# 
   430  0214                     	;# 
   431  0215                     	;# 
   432  0215                     	;# 
   433  0215                     	;# 
   434  0215                     	;# 
   435  0216                     	;# 
   436  0216                     	;# 
   437  0217                     	;# 
   438  0217                     	;# 
   439  028C                     	;# 
   440  028E                     	;# 
   441  0291                     	;# 
   442  0291                     	;# 
   443  0292                     	;# 
   444  0293                     	;# 
   445  0293                     	;# 
   446  0298                     	;# 
   447  0298                     	;# 
   448  0299                     	;# 
   449  029A                     	;# 
   450  029A                     	;# 
   451  029E                     	;# 
   452  030C                     	;# 
   453  030E                     	;# 
   454  038C                     	;# 
   455  038E                     	;# 
   456  0391                     	;# 
   457  0392                     	;# 
   458  0393                     	;# 
   459  0397                     	;# 
   460  0398                     	;# 
   461  0399                     	;# 
   462  0415                     	;# 
   463  0416                     	;# 
   464  0417                     	;# 
   465  041C                     	;# 
   466  041D                     	;# 
   467  041E                     	;# 
   468  0511                     	;# 
   469  0515                     	;# 
   470  0617                     	;# 
   471  0618                     	;# 
   472  0619                     	;# 
   473  0619                     	;# 
   474  061A                     	;# 
   475  061B                     	;# 
   476  061C                     	;# 
   477  061C                     	;# 
   478  0691                     	;# 
   479  0692                     	;# 
   480  0693                     	;# 
   481  0694                     	;# 
   482  0695                     	;# 
   483  0696                     	;# 
   484  0697                     	;# 
   485  0698                     	;# 
   486  0699                     	;# 
   487  069A                     	;# 
   488  069B                     	;# 
   489  069C                     	;# 
   490  069D                     	;# 
   491  069E                     	;# 
   492  069F                     	;# 
   493  0E0F                     	;# 
   494  0E10                     	;# 
   495  0E11                     	;# 
   496  0E12                     	;# 
   497  0E13                     	;# 
   498  0E14                     	;# 
   499  0E15                     	;# 
   500  0E17                     	;# 
   501  0E20                     	;# 
   502  0E21                     	;# 
   503  0E22                     	;# 
   504  0E24                     	;# 
   505  0E25                     	;# 
   506  0E28                     	;# 
   507  0E29                     	;# 
   508  0E2A                     	;# 
   509  0E2B                     	;# 
   510  0E90                     	;# 
   511  0E91                     	;# 
   512  0E92                     	;# 
   513  0E94                     	;# 
   514  0E95                     	;# 
   515  0EA0                     	;# 
   516  0EA1                     	;# 
   517  0EA2                     	;# 
   518  0EA3                     	;# 
   519  0EA4                     	;# 
   520  0EA5                     	;# 
   521  0F0F                     	;# 
   522  0F10                     	;# 
   523  0F11                     	;# 
   524  0F12                     	;# 
   525  0F13                     	;# 
   526  0F14                     	;# 
   527  0F15                     	;# 
   528  0F16                     	;# 
   529  0F17                     	;# 
   530  0F18                     	;# 
   531  0F19                     	;# 
   532  0F1A                     	;# 
   533  0F1B                     	;# 
   534  0F1C                     	;# 
   535  0F1D                     	;# 
   536  0F1E                     	;# 
   537  0F1F                     	;# 
   538  0F20                     	;# 
   539  0F21                     	;# 
   540  0F22                     	;# 
   541  0F23                     	;# 
   542  0F24                     	;# 
   543  0F25                     	;# 
   544  0F26                     	;# 
   545  0F27                     	;# 
   546  0F28                     	;# 
   547  0F29                     	;# 
   548  0F2A                     	;# 
   549  0F2B                     	;# 
   550  0F2C                     	;# 
   551  0F2D                     	;# 
   552  0FE4                     	;# 
   553  0FE5                     	;# 
   554  0FE6                     	;# 
   555  0FE7                     	;# 
   556  0FE8                     	;# 
   557  0FE9                     	;# 
   558  0FEA                     	;# 
   559  0FEB                     	;# 
   560  0FED                     	;# 
   561  0FEE                     	;# 
   562  0FEF                     	;# 
   563  0000                     	;# 
   564  0001                     	;# 
   565  0002                     	;# 
   566  0003                     	;# 
   567  0004                     	;# 
   568  0005                     	;# 
   569  0006                     	;# 
   570  0007                     	;# 
   571  0008                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000E                     	;# 
   577  0011                     	;# 
   578  0012                     	;# 
   579  0013                     	;# 
   580  0015                     	;# 
   581  0016                     	;# 
   582  0016                     	;# 
   583  0017                     	;# 
   584  0018                     	;# 
   585  0019                     	;# 
   586  001A                     	;# 
   587  001B                     	;# 
   588  001C                     	;# 
   589  008C                     	;# 
   590  008E                     	;# 
   591  0091                     	;# 
   592  0092                     	;# 
   593  0093                     	;# 
   594  0095                     	;# 
   595  0096                     	;# 
   596  0097                     	;# 
   597  0098                     	;# 
   598  0099                     	;# 
   599  009A                     	;# 
   600  009B                     	;# 
   601  009B                     	;# 
   602  009C                     	;# 
   603  009D                     	;# 
   604  009E                     	;# 
   605  009F                     	;# 
   606  010C                     	;# 
   607  010E                     	;# 
   608  0111                     	;# 
   609  0112                     	;# 
   610  0113                     	;# 
   611  0114                     	;# 
   612  0115                     	;# 
   613  0116                     	;# 
   614  0117                     	;# 
   615  0118                     	;# 
   616  0119                     	;# 
   617  011C                     	;# 
   618  018C                     	;# 
   619  018E                     	;# 
   620  0191                     	;# 
   621  0191                     	;# 
   622  0192                     	;# 
   623  0193                     	;# 
   624  0193                     	;# 
   625  0194                     	;# 
   626  0195                     	;# 
   627  0196                     	;# 
   628  0197                     	;# 
   629  0199                     	;# 
   630  0199                     	;# 
   631  0199                     	;# 
   632  019A                     	;# 
   633  019A                     	;# 
   634  019A                     	;# 
   635  019B                     	;# 
   636  019B                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019C                     	;# 
   641  019C                     	;# 
   642  019C                     	;# 
   643  019D                     	;# 
   644  019D                     	;# 
   645  019D                     	;# 
   646  019E                     	;# 
   647  019E                     	;# 
   648  019E                     	;# 
   649  019F                     	;# 
   650  019F                     	;# 
   651  019F                     	;# 
   652  019F                     	;# 
   653  019F                     	;# 
   654  020C                     	;# 
   655  020E                     	;# 
   656  0211                     	;# 
   657  0211                     	;# 
   658  0212                     	;# 
   659  0212                     	;# 
   660  0213                     	;# 
   661  0213                     	;# 
   662  0214                     	;# 
   663  0214                     	;# 
   664  0215                     	;# 
   665  0215                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0216                     	;# 
   669  0216                     	;# 
   670  0217                     	;# 
   671  0217                     	;# 
   672  028C                     	;# 
   673  028E                     	;# 
   674  0291                     	;# 
   675  0291                     	;# 
   676  0292                     	;# 
   677  0293                     	;# 
   678  0293                     	;# 
   679  0298                     	;# 
   680  0298                     	;# 
   681  0299                     	;# 
   682  029A                     	;# 
   683  029A                     	;# 
   684  029E                     	;# 
   685  030C                     	;# 
   686  030E                     	;# 
   687  038C                     	;# 
   688  038E                     	;# 
   689  0391                     	;# 
   690  0392                     	;# 
   691  0393                     	;# 
   692  0397                     	;# 
   693  0398                     	;# 
   694  0399                     	;# 
   695  0415                     	;# 
   696  0416                     	;# 
   697  0417                     	;# 
   698  041C                     	;# 
   699  041D                     	;# 
   700  041E                     	;# 
   701  0511                     	;# 
   702  0515                     	;# 
   703  0617                     	;# 
   704  0618                     	;# 
   705  0619                     	;# 
   706  0619                     	;# 
   707  061A                     	;# 
   708  061B                     	;# 
   709  061C                     	;# 
   710  061C                     	;# 
   711  0691                     	;# 
   712  0692                     	;# 
   713  0693                     	;# 
   714  0694                     	;# 
   715  0695                     	;# 
   716  0696                     	;# 
   717  0697                     	;# 
   718  0698                     	;# 
   719  0699                     	;# 
   720  069A                     	;# 
   721  069B                     	;# 
   722  069C                     	;# 
   723  069D                     	;# 
   724  069E                     	;# 
   725  069F                     	;# 
   726  0E0F                     	;# 
   727  0E10                     	;# 
   728  0E11                     	;# 
   729  0E12                     	;# 
   730  0E13                     	;# 
   731  0E14                     	;# 
   732  0E15                     	;# 
   733  0E17                     	;# 
   734  0E20                     	;# 
   735  0E21                     	;# 
   736  0E22                     	;# 
   737  0E24                     	;# 
   738  0E25                     	;# 
   739  0E28                     	;# 
   740  0E29                     	;# 
   741  0E2A                     	;# 
   742  0E2B                     	;# 
   743  0E90                     	;# 
   744  0E91                     	;# 
   745  0E92                     	;# 
   746  0E94                     	;# 
   747  0E95                     	;# 
   748  0EA0                     	;# 
   749  0EA1                     	;# 
   750  0EA2                     	;# 
   751  0EA3                     	;# 
   752  0EA4                     	;# 
   753  0EA5                     	;# 
   754  0F0F                     	;# 
   755  0F10                     	;# 
   756  0F11                     	;# 
   757  0F12                     	;# 
   758  0F13                     	;# 
   759  0F14                     	;# 
   760  0F15                     	;# 
   761  0F16                     	;# 
   762  0F17                     	;# 
   763  0F18                     	;# 
   764  0F19                     	;# 
   765  0F1A                     	;# 
   766  0F1B                     	;# 
   767  0F1C                     	;# 
   768  0F1D                     	;# 
   769  0F1E                     	;# 
   770  0F1F                     	;# 
   771  0F20                     	;# 
   772  0F21                     	;# 
   773  0F22                     	;# 
   774  0F23                     	;# 
   775  0F24                     	;# 
   776  0F25                     	;# 
   777  0F26                     	;# 
   778  0F27                     	;# 
   779  0F28                     	;# 
   780  0F29                     	;# 
   781  0F2A                     	;# 
   782  0F2B                     	;# 
   783  0F2C                     	;# 
   784  0F2D                     	;# 
   785  0FE4                     	;# 
   786  0FE5                     	;# 
   787  0FE6                     	;# 
   788  0FE7                     	;# 
   789  0FE8                     	;# 
   790  0FE9                     	;# 
   791  0FEA                     	;# 
   792  0FEB                     	;# 
   793  0FED                     	;# 
   794  0FEE                     	;# 
   795  0FEF                     	;# 
   796  0000                     	;# 
   797  0001                     	;# 
   798  0002                     	;# 
   799  0003                     	;# 
   800  0004                     	;# 
   801  0005                     	;# 
   802  0006                     	;# 
   803  0007                     	;# 
   804  0008                     	;# 
   805  0009                     	;# 
   806  000A                     	;# 
   807  000B                     	;# 
   808  000C                     	;# 
   809  000E                     	;# 
   810  0011                     	;# 
   811  0012                     	;# 
   812  0013                     	;# 
   813  0015                     	;# 
   814  0016                     	;# 
   815  0016                     	;# 
   816  0017                     	;# 
   817  0018                     	;# 
   818  0019                     	;# 
   819  001A                     	;# 
   820  001B                     	;# 
   821  001C                     	;# 
   822  008C                     	;# 
   823  008E                     	;# 
   824  0091                     	;# 
   825  0092                     	;# 
   826  0093                     	;# 
   827  0095                     	;# 
   828  0096                     	;# 
   829  0097                     	;# 
   830  0098                     	;# 
   831  0099                     	;# 
   832  009A                     	;# 
   833  009B                     	;# 
   834  009B                     	;# 
   835  009C                     	;# 
   836  009D                     	;# 
   837  009E                     	;# 
   838  009F                     	;# 
   839  010C                     	;# 
   840  010E                     	;# 
   841  0111                     	;# 
   842  0112                     	;# 
   843  0113                     	;# 
   844  0114                     	;# 
   845  0115                     	;# 
   846  0116                     	;# 
   847  0117                     	;# 
   848  0118                     	;# 
   849  0119                     	;# 
   850  011C                     	;# 
   851  018C                     	;# 
   852  018E                     	;# 
   853  0191                     	;# 
   854  0191                     	;# 
   855  0192                     	;# 
   856  0193                     	;# 
   857  0193                     	;# 
   858  0194                     	;# 
   859  0195                     	;# 
   860  0196                     	;# 
   861  0197                     	;# 
   862  0199                     	;# 
   863  0199                     	;# 
   864  0199                     	;# 
   865  019A                     	;# 
   866  019A                     	;# 
   867  019A                     	;# 
   868  019B                     	;# 
   869  019B                     	;# 
   870  019B                     	;# 
   871  019B                     	;# 
   872  019B                     	;# 
   873  019C                     	;# 
   874  019C                     	;# 
   875  019C                     	;# 
   876  019D                     	;# 
   877  019D                     	;# 
   878  019D                     	;# 
   879  019E                     	;# 
   880  019E                     	;# 
   881  019E                     	;# 
   882  019F                     	;# 
   883  019F                     	;# 
   884  019F                     	;# 
   885  019F                     	;# 
   886  019F                     	;# 
   887  020C                     	;# 
   888  020E                     	;# 
   889  0211                     	;# 
   890  0211                     	;# 
   891  0212                     	;# 
   892  0212                     	;# 
   893  0213                     	;# 
   894  0213                     	;# 
   895  0214                     	;# 
   896  0214                     	;# 
   897  0215                     	;# 
   898  0215                     	;# 
   899  0215                     	;# 
   900  0215                     	;# 
   901  0216                     	;# 
   902  0216                     	;# 
   903  0217                     	;# 
   904  0217                     	;# 
   905  028C                     	;# 
   906  028E                     	;# 
   907  0291                     	;# 
   908  0291                     	;# 
   909  0292                     	;# 
   910  0293                     	;# 
   911  0293                     	;# 
   912  0298                     	;# 
   913  0298                     	;# 
   914  0299                     	;# 
   915  029A                     	;# 
   916  029A                     	;# 
   917  029E                     	;# 
   918  030C                     	;# 
   919  030E                     	;# 
   920  038C                     	;# 
   921  038E                     	;# 
   922  0391                     	;# 
   923  0392                     	;# 
   924  0393                     	;# 
   925  0397                     	;# 
   926  0398                     	;# 
   927  0399                     	;# 
   928  0415                     	;# 
   929  0416                     	;# 
   930  0417                     	;# 
   931  041C                     	;# 
   932  041D                     	;# 
   933  041E                     	;# 
   934  0511                     	;# 
   935  0515                     	;# 
   936  0617                     	;# 
   937  0618                     	;# 
   938  0619                     	;# 
   939  0619                     	;# 
   940  061A                     	;# 
   941  061B                     	;# 
   942  061C                     	;# 
   943  061C                     	;# 
   944  0691                     	;# 
   945  0692                     	;# 
   946  0693                     	;# 
   947  0694                     	;# 
   948  0695                     	;# 
   949  0696                     	;# 
   950  0697                     	;# 
   951  0698                     	;# 
   952  0699                     	;# 
   953  069A                     	;# 
   954  069B                     	;# 
   955  069C                     	;# 
   956  069D                     	;# 
   957  069E                     	;# 
   958  069F                     	;# 
   959  0E0F                     	;# 
   960  0E10                     	;# 
   961  0E11                     	;# 
   962  0E12                     	;# 
   963  0E13                     	;# 
   964  0E14                     	;# 
   965  0E15                     	;# 
   966  0E17                     	;# 
   967  0E20                     	;# 
   968  0E21                     	;# 
   969  0E22                     	;# 
   970  0E24                     	;# 
   971  0E25                     	;# 
   972  0E28                     	;# 
   973  0E29                     	;# 
   974  0E2A                     	;# 
   975  0E2B                     	;# 
   976  0E90                     	;# 
   977  0E91                     	;# 
   978  0E92                     	;# 
   979  0E94                     	;# 
   980  0E95                     	;# 
   981  0EA0                     	;# 
   982  0EA1                     	;# 
   983  0EA2                     	;# 
   984  0EA3                     	;# 
   985  0EA4                     	;# 
   986  0EA5                     	;# 
   987  0F0F                     	;# 
   988  0F10                     	;# 
   989  0F11                     	;# 
   990  0F12                     	;# 
   991  0F13                     	;# 
   992  0F14                     	;# 
   993  0F15                     	;# 
   994  0F16                     	;# 
   995  0F17                     	;# 
   996  0F18                     	;# 
   997  0F19                     	;# 
   998  0F1A                     	;# 
   999  0F1B                     	;# 
  1000  0F1C                     	;# 
  1001  0F1D                     	;# 
  1002  0F1E                     	;# 
  1003  0F1F                     	;# 
  1004  0F20                     	;# 
  1005  0F21                     	;# 
  1006  0F22                     	;# 
  1007  0F23                     	;# 
  1008  0F24                     	;# 
  1009  0F25                     	;# 
  1010  0F26                     	;# 
  1011  0F27                     	;# 
  1012  0F28                     	;# 
  1013  0F29                     	;# 
  1014  0F2A                     	;# 
  1015  0F2B                     	;# 
  1016  0F2C                     	;# 
  1017  0F2D                     	;# 
  1018  0FE4                     	;# 
  1019  0FE5                     	;# 
  1020  0FE6                     	;# 
  1021  0FE7                     	;# 
  1022  0FE8                     	;# 
  1023  0FE9                     	;# 
  1024  0FEA                     	;# 
  1025  0FEB                     	;# 
  1026  0FED                     	;# 
  1027  0FEE                     	;# 
  1028  0FEF                     	;# 
  1029  0000                     	;# 
  1030  0001                     	;# 
  1031  0002                     	;# 
  1032  0003                     	;# 
  1033  0004                     	;# 
  1034  0005                     	;# 
  1035  0006                     	;# 
  1036  0007                     	;# 
  1037  0008                     	;# 
  1038  0009                     	;# 
  1039  000A                     	;# 
  1040  000B                     	;# 
  1041  000C                     	;# 
  1042  000E                     	;# 
  1043  0011                     	;# 
  1044  0012                     	;# 
  1045  0013                     	;# 
  1046  0015                     	;# 
  1047  0016                     	;# 
  1048  0016                     	;# 
  1049  0017                     	;# 
  1050  0018                     	;# 
  1051  0019                     	;# 
  1052  001A                     	;# 
  1053  001B                     	;# 
  1054  001C                     	;# 
  1055  008C                     	;# 
  1056  008E                     	;# 
  1057  0091                     	;# 
  1058  0092                     	;# 
  1059  0093                     	;# 
  1060  0095                     	;# 
  1061  0096                     	;# 
  1062  0097                     	;# 
  1063  0098                     	;# 
  1064  0099                     	;# 
  1065  009A                     	;# 
  1066  009B                     	;# 
  1067  009B                     	;# 
  1068  009C                     	;# 
  1069  009D                     	;# 
  1070  009E                     	;# 
  1071  009F                     	;# 
  1072  010C                     	;# 
  1073  010E                     	;# 
  1074  0111                     	;# 
  1075  0112                     	;# 
  1076  0113                     	;# 
  1077  0114                     	;# 
  1078  0115                     	;# 
  1079  0116                     	;# 
  1080  0117                     	;# 
  1081  0118                     	;# 
  1082  0119                     	;# 
  1083  011C                     	;# 
  1084  018C                     	;# 
  1085  018E                     	;# 
  1086  0191                     	;# 
  1087  0191                     	;# 
  1088  0192                     	;# 
  1089  0193                     	;# 
  1090  0193                     	;# 
  1091  0194                     	;# 
  1092  0195                     	;# 
  1093  0196                     	;# 
  1094  0197                     	;# 
  1095  0199                     	;# 
  1096  0199                     	;# 
  1097  0199                     	;# 
  1098  019A                     	;# 
  1099  019A                     	;# 
  1100  019A                     	;# 
  1101  019B                     	;# 
  1102  019B                     	;# 
  1103  019B                     	;# 
  1104  019B                     	;# 
  1105  019B                     	;# 
  1106  019C                     	;# 
  1107  019C                     	;# 
  1108  019C                     	;# 
  1109  019D                     	;# 
  1110  019D                     	;# 
  1111  019D                     	;# 
  1112  019E                     	;# 
  1113  019E                     	;# 
  1114  019E                     	;# 
  1115  019F                     	;# 
  1116  019F                     	;# 
  1117  019F                     	;# 
  1118  019F                     	;# 
  1119  019F                     	;# 
  1120  020C                     	;# 
  1121  020E                     	;# 
  1122  0211                     	;# 
  1123  0211                     	;# 
  1124  0212                     	;# 
  1125  0212                     	;# 
  1126  0213                     	;# 
  1127  0213                     	;# 
  1128  0214                     	;# 
  1129  0214                     	;# 
  1130  0215                     	;# 
  1131  0215                     	;# 
  1132  0215                     	;# 
  1133  0215                     	;# 
  1134  0216                     	;# 
  1135  0216                     	;# 
  1136  0217                     	;# 
  1137  0217                     	;# 
  1138  028C                     	;# 
  1139  028E                     	;# 
  1140  0291                     	;# 
  1141  0291                     	;# 
  1142  0292                     	;# 
  1143  0293                     	;# 
  1144  0293                     	;# 
  1145  0298                     	;# 
  1146  0298                     	;# 
  1147  0299                     	;# 
  1148  029A                     	;# 
  1149  029A                     	;# 
  1150  029E                     	;# 
  1151  030C                     	;# 
  1152  030E                     	;# 
  1153  038C                     	;# 
  1154  038E                     	;# 
  1155  0391                     	;# 
  1156  0392                     	;# 
  1157  0393                     	;# 
  1158  0397                     	;# 
  1159  0398                     	;# 
  1160  0399                     	;# 
  1161  0415                     	;# 
  1162  0416                     	;# 
  1163  0417                     	;# 
  1164  041C                     	;# 
  1165  041D                     	;# 
  1166  041E                     	;# 
  1167  0511                     	;# 
  1168  0515                     	;# 
  1169  0617                     	;# 
  1170  0618                     	;# 
  1171  0619                     	;# 
  1172  0619                     	;# 
  1173  061A                     	;# 
  1174  061B                     	;# 
  1175  061C                     	;# 
  1176  061C                     	;# 
  1177  0691                     	;# 
  1178  0692                     	;# 
  1179  0693                     	;# 
  1180  0694                     	;# 
  1181  0695                     	;# 
  1182  0696                     	;# 
  1183  0697                     	;# 
  1184  0698                     	;# 
  1185  0699                     	;# 
  1186  069A                     	;# 
  1187  069B                     	;# 
  1188  069C                     	;# 
  1189  069D                     	;# 
  1190  069E                     	;# 
  1191  069F                     	;# 
  1192  0E0F                     	;# 
  1193  0E10                     	;# 
  1194  0E11                     	;# 
  1195  0E12                     	;# 
  1196  0E13                     	;# 
  1197  0E14                     	;# 
  1198  0E15                     	;# 
  1199  0E17                     	;# 
  1200  0E20                     	;# 
  1201  0E21                     	;# 
  1202  0E22                     	;# 
  1203  0E24                     	;# 
  1204  0E25                     	;# 
  1205  0E28                     	;# 
  1206  0E29                     	;# 
  1207  0E2A                     	;# 
  1208  0E2B                     	;# 
  1209  0E90                     	;# 
  1210  0E91                     	;# 
  1211  0E92                     	;# 
  1212  0E94                     	;# 
  1213  0E95                     	;# 
  1214  0EA0                     	;# 
  1215  0EA1                     	;# 
  1216  0EA2                     	;# 
  1217  0EA3                     	;# 
  1218  0EA4                     	;# 
  1219  0EA5                     	;# 
  1220  0F0F                     	;# 
  1221  0F10                     	;# 
  1222  0F11                     	;# 
  1223  0F12                     	;# 
  1224  0F13                     	;# 
  1225  0F14                     	;# 
  1226  0F15                     	;# 
  1227  0F16                     	;# 
  1228  0F17                     	;# 
  1229  0F18                     	;# 
  1230  0F19                     	;# 
  1231  0F1A                     	;# 
  1232  0F1B                     	;# 
  1233  0F1C                     	;# 
  1234  0F1D                     	;# 
  1235  0F1E                     	;# 
  1236  0F1F                     	;# 
  1237  0F20                     	;# 
  1238  0F21                     	;# 
  1239  0F22                     	;# 
  1240  0F23                     	;# 
  1241  0F24                     	;# 
  1242  0F25                     	;# 
  1243  0F26                     	;# 
  1244  0F27                     	;# 
  1245  0F28                     	;# 
  1246  0F29                     	;# 
  1247  0F2A                     	;# 
  1248  0F2B                     	;# 
  1249  0F2C                     	;# 
  1250  0F2D                     	;# 
  1251  0FE4                     	;# 
  1252  0FE5                     	;# 
  1253  0FE6                     	;# 
  1254  0FE7                     	;# 
  1255  0FE8                     	;# 
  1256  0FE9                     	;# 
  1257  0FEA                     	;# 
  1258  0FEB                     	;# 
  1259  0FED                     	;# 
  1260  0FEE                     	;# 
  1261  0FEF                     	;# 
  1262  0000                     	;# 
  1263  0001                     	;# 
  1264  0002                     	;# 
  1265  0003                     	;# 
  1266  0004                     	;# 
  1267  0005                     	;# 
  1268  0006                     	;# 
  1269  0007                     	;# 
  1270  0008                     	;# 
  1271  0009                     	;# 
  1272  000A                     	;# 
  1273  000B                     	;# 
  1274  000C                     	;# 
  1275  000E                     	;# 
  1276  0011                     	;# 
  1277  0012                     	;# 
  1278  0013                     	;# 
  1279  0015                     	;# 
  1280  0016                     	;# 
  1281  0016                     	;# 
  1282  0017                     	;# 
  1283  0018                     	;# 
  1284  0019                     	;# 
  1285  001A                     	;# 
  1286  001B                     	;# 
  1287  001C                     	;# 
  1288  008C                     	;# 
  1289  008E                     	;# 
  1290  0091                     	;# 
  1291  0092                     	;# 
  1292  0093                     	;# 
  1293  0095                     	;# 
  1294  0096                     	;# 
  1295  0097                     	;# 
  1296  0098                     	;# 
  1297  0099                     	;# 
  1298  009A                     	;# 
  1299  009B                     	;# 
  1300  009B                     	;# 
  1301  009C                     	;# 
  1302  009D                     	;# 
  1303  009E                     	;# 
  1304  009F                     	;# 
  1305  010C                     	;# 
  1306  010E                     	;# 
  1307  0111                     	;# 
  1308  0112                     	;# 
  1309  0113                     	;# 
  1310  0114                     	;# 
  1311  0115                     	;# 
  1312  0116                     	;# 
  1313  0117                     	;# 
  1314  0118                     	;# 
  1315  0119                     	;# 
  1316  011C                     	;# 
  1317  018C                     	;# 
  1318  018E                     	;# 
  1319  0191                     	;# 
  1320  0191                     	;# 
  1321  0192                     	;# 
  1322  0193                     	;# 
  1323  0193                     	;# 
  1324  0194                     	;# 
  1325  0195                     	;# 
  1326  0196                     	;# 
  1327  0197                     	;# 
  1328  0199                     	;# 
  1329  0199                     	;# 
  1330  0199                     	;# 
  1331  019A                     	;# 
  1332  019A                     	;# 
  1333  019A                     	;# 
  1334  019B                     	;# 
  1335  019B                     	;# 
  1336  019B                     	;# 
  1337  019B                     	;# 
  1338  019B                     	;# 
  1339  019C                     	;# 
  1340  019C                     	;# 
  1341  019C                     	;# 
  1342  019D                     	;# 
  1343  019D                     	;# 
  1344  019D                     	;# 
  1345  019E                     	;# 
  1346  019E                     	;# 
  1347  019E                     	;# 
  1348  019F                     	;# 
  1349  019F                     	;# 
  1350  019F                     	;# 
  1351  019F                     	;# 
  1352  019F                     	;# 
  1353  020C                     	;# 
  1354  020E                     	;# 
  1355  0211                     	;# 
  1356  0211                     	;# 
  1357  0212                     	;# 
  1358  0212                     	;# 
  1359  0213                     	;# 
  1360  0213                     	;# 
  1361  0214                     	;# 
  1362  0214                     	;# 
  1363  0215                     	;# 
  1364  0215                     	;# 
  1365  0215                     	;# 
  1366  0215                     	;# 
  1367  0216                     	;# 
  1368  0216                     	;# 
  1369  0217                     	;# 
  1370  0217                     	;# 
  1371  028C                     	;# 
  1372  028E                     	;# 
  1373  0291                     	;# 
  1374  0291                     	;# 
  1375  0292                     	;# 
  1376  0293                     	;# 
  1377  0293                     	;# 
  1378  0298                     	;# 
  1379  0298                     	;# 
  1380  0299                     	;# 
  1381  029A                     	;# 
  1382  029A                     	;# 
  1383  029E                     	;# 
  1384  030C                     	;# 
  1385  030E                     	;# 
  1386  038C                     	;# 
  1387  038E                     	;# 
  1388  0391                     	;# 
  1389  0392                     	;# 
  1390  0393                     	;# 
  1391  0397                     	;# 
  1392  0398                     	;# 
  1393  0399                     	;# 
  1394  0415                     	;# 
  1395  0416                     	;# 
  1396  0417                     	;# 
  1397  041C                     	;# 
  1398  041D                     	;# 
  1399  041E                     	;# 
  1400  0511                     	;# 
  1401  0515                     	;# 
  1402  0617                     	;# 
  1403  0618                     	;# 
  1404  0619                     	;# 
  1405  0619                     	;# 
  1406  061A                     	;# 
  1407  061B                     	;# 
  1408  061C                     	;# 
  1409  061C                     	;# 
  1410  0691                     	;# 
  1411  0692                     	;# 
  1412  0693                     	;# 
  1413  0694                     	;# 
  1414  0695                     	;# 
  1415  0696                     	;# 
  1416  0697                     	;# 
  1417  0698                     	;# 
  1418  0699                     	;# 
  1419  069A                     	;# 
  1420  069B                     	;# 
  1421  069C                     	;# 
  1422  069D                     	;# 
  1423  069E                     	;# 
  1424  069F                     	;# 
  1425  0E0F                     	;# 
  1426  0E10                     	;# 
  1427  0E11                     	;# 
  1428  0E12                     	;# 
  1429  0E13                     	;# 
  1430  0E14                     	;# 
  1431  0E15                     	;# 
  1432  0E17                     	;# 
  1433  0E20                     	;# 
  1434  0E21                     	;# 
  1435  0E22                     	;# 
  1436  0E24                     	;# 
  1437  0E25                     	;# 
  1438  0E28                     	;# 
  1439  0E29                     	;# 
  1440  0E2A                     	;# 
  1441  0E2B                     	;# 
  1442  0E90                     	;# 
  1443  0E91                     	;# 
  1444  0E92                     	;# 
  1445  0E94                     	;# 
  1446  0E95                     	;# 
  1447  0EA0                     	;# 
  1448  0EA1                     	;# 
  1449  0EA2                     	;# 
  1450  0EA3                     	;# 
  1451  0EA4                     	;# 
  1452  0EA5                     	;# 
  1453  0F0F                     	;# 
  1454  0F10                     	;# 
  1455  0F11                     	;# 
  1456  0F12                     	;# 
  1457  0F13                     	;# 
  1458  0F14                     	;# 
  1459  0F15                     	;# 
  1460  0F16                     	;# 
  1461  0F17                     	;# 
  1462  0F18                     	;# 
  1463  0F19                     	;# 
  1464  0F1A                     	;# 
  1465  0F1B                     	;# 
  1466  0F1C                     	;# 
  1467  0F1D                     	;# 
  1468  0F1E                     	;# 
  1469  0F1F                     	;# 
  1470  0F20                     	;# 
  1471  0F21                     	;# 
  1472  0F22                     	;# 
  1473  0F23                     	;# 
  1474  0F24                     	;# 
  1475  0F25                     	;# 
  1476  0F26                     	;# 
  1477  0F27                     	;# 
  1478  0F28                     	;# 
  1479  0F29                     	;# 
  1480  0F2A                     	;# 
  1481  0F2B                     	;# 
  1482  0F2C                     	;# 
  1483  0F2D                     	;# 
  1484  0FE4                     	;# 
  1485  0FE5                     	;# 
  1486  0FE6                     	;# 
  1487  0FE7                     	;# 
  1488  0FE8                     	;# 
  1489  0FE9                     	;# 
  1490  0FEA                     	;# 
  1491  0FEB                     	;# 
  1492  0FED                     	;# 
  1493  0FEE                     	;# 
  1494  0FEF                     	;# 
  1495  0000                     	;# 
  1496  0001                     	;# 
  1497  0002                     	;# 
  1498  0003                     	;# 
  1499  0004                     	;# 
  1500  0005                     	;# 
  1501  0006                     	;# 
  1502  0007                     	;# 
  1503  0008                     	;# 
  1504  0009                     	;# 
  1505  000A                     	;# 
  1506  000B                     	;# 
  1507  000C                     	;# 
  1508  000E                     	;# 
  1509  0011                     	;# 
  1510  0012                     	;# 
  1511  0013                     	;# 
  1512  0015                     	;# 
  1513  0016                     	;# 
  1514  0016                     	;# 
  1515  0017                     	;# 
  1516  0018                     	;# 
  1517  0019                     	;# 
  1518  001A                     	;# 
  1519  001B                     	;# 
  1520  001C                     	;# 
  1521  008C                     	;# 
  1522  008E                     	;# 
  1523  0091                     	;# 
  1524  0092                     	;# 
  1525  0093                     	;# 
  1526  0095                     	;# 
  1527  0096                     	;# 
  1528  0097                     	;# 
  1529  0098                     	;# 
  1530  0099                     	;# 
  1531  009A                     	;# 
  1532  009B                     	;# 
  1533  009B                     	;# 
  1534  009C                     	;# 
  1535  009D                     	;# 
  1536  009E                     	;# 
  1537  009F                     	;# 
  1538  010C                     	;# 
  1539  010E                     	;# 
  1540  0111                     	;# 
  1541  0112                     	;# 
  1542  0113                     	;# 
  1543  0114                     	;# 
  1544  0115                     	;# 
  1545  0116                     	;# 
  1546  0117                     	;# 
  1547  0118                     	;# 
  1548  0119                     	;# 
  1549  011C                     	;# 
  1550  018C                     	;# 
  1551  018E                     	;# 
  1552  0191                     	;# 
  1553  0191                     	;# 
  1554  0192                     	;# 
  1555  0193                     	;# 
  1556  0193                     	;# 
  1557  0194                     	;# 
  1558  0195                     	;# 
  1559  0196                     	;# 
  1560  0197                     	;# 
  1561  0199                     	;# 
  1562  0199                     	;# 
  1563  0199                     	;# 
  1564  019A                     	;# 
  1565  019A                     	;# 
  1566  019A                     	;# 
  1567  019B                     	;# 
  1568  019B                     	;# 
  1569  019B                     	;# 
  1570  019B                     	;# 
  1571  019B                     	;# 
  1572  019C                     	;# 
  1573  019C                     	;# 
  1574  019C                     	;# 
  1575  019D                     	;# 
  1576  019D                     	;# 
  1577  019D                     	;# 
  1578  019E                     	;# 
  1579  019E                     	;# 
  1580  019E                     	;# 
  1581  019F                     	;# 
  1582  019F                     	;# 
  1583  019F                     	;# 
  1584  019F                     	;# 
  1585  019F                     	;# 
  1586  020C                     	;# 
  1587  020E                     	;# 
  1588  0211                     	;# 
  1589  0211                     	;# 
  1590  0212                     	;# 
  1591  0212                     	;# 
  1592  0213                     	;# 
  1593  0213                     	;# 
  1594  0214                     	;# 
  1595  0214                     	;# 
  1596  0215                     	;# 
  1597  0215                     	;# 
  1598  0215                     	;# 
  1599  0215                     	;# 
  1600  0216                     	;# 
  1601  0216                     	;# 
  1602  0217                     	;# 
  1603  0217                     	;# 
  1604  028C                     	;# 
  1605  028E                     	;# 
  1606  0291                     	;# 
  1607  0291                     	;# 
  1608  0292                     	;# 
  1609  0293                     	;# 
  1610  0293                     	;# 
  1611  0298                     	;# 
  1612  0298                     	;# 
  1613  0299                     	;# 
  1614  029A                     	;# 
  1615  029A                     	;# 
  1616  029E                     	;# 
  1617  030C                     	;# 
  1618  030E                     	;# 
  1619  038C                     	;# 
  1620  038E                     	;# 
  1621  0391                     	;# 
  1622  0392                     	;# 
  1623  0393                     	;# 
  1624  0397                     	;# 
  1625  0398                     	;# 
  1626  0399                     	;# 
  1627  0415                     	;# 
  1628  0416                     	;# 
  1629  0417                     	;# 
  1630  041C                     	;# 
  1631  041D                     	;# 
  1632  041E                     	;# 
  1633  0511                     	;# 
  1634  0515                     	;# 
  1635  0617                     	;# 
  1636  0618                     	;# 
  1637  0619                     	;# 
  1638  0619                     	;# 
  1639  061A                     	;# 
  1640  061B                     	;# 
  1641  061C                     	;# 
  1642  061C                     	;# 
  1643  0691                     	;# 
  1644  0692                     	;# 
  1645  0693                     	;# 
  1646  0694                     	;# 
  1647  0695                     	;# 
  1648  0696                     	;# 
  1649  0697                     	;# 
  1650  0698                     	;# 
  1651  0699                     	;# 
  1652  069A                     	;# 
  1653  069B                     	;# 
  1654  069C                     	;# 
  1655  069D                     	;# 
  1656  069E                     	;# 
  1657  069F                     	;# 
  1658  0E0F                     	;# 
  1659  0E10                     	;# 
  1660  0E11                     	;# 
  1661  0E12                     	;# 
  1662  0E13                     	;# 
  1663  0E14                     	;# 
  1664  0E15                     	;# 
  1665  0E17                     	;# 
  1666  0E20                     	;# 
  1667  0E21                     	;# 
  1668  0E22                     	;# 
  1669  0E24                     	;# 
  1670  0E25                     	;# 
  1671  0E28                     	;# 
  1672  0E29                     	;# 
  1673  0E2A                     	;# 
  1674  0E2B                     	;# 
  1675  0E90                     	;# 
  1676  0E91                     	;# 
  1677  0E92                     	;# 
  1678  0E94                     	;# 
  1679  0E95                     	;# 
  1680  0EA0                     	;# 
  1681  0EA1                     	;# 
  1682  0EA2                     	;# 
  1683  0EA3                     	;# 
  1684  0EA4                     	;# 
  1685  0EA5                     	;# 
  1686  0F0F                     	;# 
  1687  0F10                     	;# 
  1688  0F11                     	;# 
  1689  0F12                     	;# 
  1690  0F13                     	;# 
  1691  0F14                     	;# 
  1692  0F15                     	;# 
  1693  0F16                     	;# 
  1694  0F17                     	;# 
  1695  0F18                     	;# 
  1696  0F19                     	;# 
  1697  0F1A                     	;# 
  1698  0F1B                     	;# 
  1699  0F1C                     	;# 
  1700  0F1D                     	;# 
  1701  0F1E                     	;# 
  1702  0F1F                     	;# 
  1703  0F20                     	;# 
  1704  0F21                     	;# 
  1705  0F22                     	;# 
  1706  0F23                     	;# 
  1707  0F24                     	;# 
  1708  0F25                     	;# 
  1709  0F26                     	;# 
  1710  0F27                     	;# 
  1711  0F28                     	;# 
  1712  0F29                     	;# 
  1713  0F2A                     	;# 
  1714  0F2B                     	;# 
  1715  0F2C                     	;# 
  1716  0F2D                     	;# 
  1717  0FE4                     	;# 
  1718  0FE5                     	;# 
  1719  0FE6                     	;# 
  1720  0FE7                     	;# 
  1721  0FE8                     	;# 
  1722  0FE9                     	;# 
  1723  0FEA                     	;# 
  1724  0FEB                     	;# 
  1725  0FED                     	;# 
  1726  0FEE                     	;# 
  1727  0FEF                     	;# 
  1728  0000                     	;# 
  1729  0001                     	;# 
  1730  0002                     	;# 
  1731  0003                     	;# 
  1732  0004                     	;# 
  1733  0005                     	;# 
  1734  0006                     	;# 
  1735  0007                     	;# 
  1736  0008                     	;# 
  1737  0009                     	;# 
  1738  000A                     	;# 
  1739  000B                     	;# 
  1740  000C                     	;# 
  1741  000E                     	;# 
  1742  0011                     	;# 
  1743  0012                     	;# 
  1744  0013                     	;# 
  1745  0015                     	;# 
  1746  0016                     	;# 
  1747  0016                     	;# 
  1748  0017                     	;# 
  1749  0018                     	;# 
  1750  0019                     	;# 
  1751  001A                     	;# 
  1752  001B                     	;# 
  1753  001C                     	;# 
  1754  008C                     	;# 
  1755  008E                     	;# 
  1756  0091                     	;# 
  1757  0092                     	;# 
  1758  0093                     	;# 
  1759  0095                     	;# 
  1760  0096                     	;# 
  1761  0097                     	;# 
  1762  0098                     	;# 
  1763  0099                     	;# 
  1764  009A                     	;# 
  1765  009B                     	;# 
  1766  009B                     	;# 
  1767  009C                     	;# 
  1768  009D                     	;# 
  1769  009E                     	;# 
  1770  009F                     	;# 
  1771  010C                     	;# 
  1772  010E                     	;# 
  1773  0111                     	;# 
  1774  0112                     	;# 
  1775  0113                     	;# 
  1776  0114                     	;# 
  1777  0115                     	;# 
  1778  0116                     	;# 
  1779  0117                     	;# 
  1780  0118                     	;# 
  1781  0119                     	;# 
  1782  011C                     	;# 
  1783  018C                     	;# 
  1784  018E                     	;# 
  1785  0191                     	;# 
  1786  0191                     	;# 
  1787  0192                     	;# 
  1788  0193                     	;# 
  1789  0193                     	;# 
  1790  0194                     	;# 
  1791  0195                     	;# 
  1792  0196                     	;# 
  1793  0197                     	;# 
  1794  0199                     	;# 
  1795  0199                     	;# 
  1796  0199                     	;# 
  1797  019A                     	;# 
  1798  019A                     	;# 
  1799  019A                     	;# 
  1800  019B                     	;# 
  1801  019B                     	;# 
  1802  019B                     	;# 
  1803  019B                     	;# 
  1804  019B                     	;# 
  1805  019C                     	;# 
  1806  019C                     	;# 
  1807  019C                     	;# 
  1808  019D                     	;# 
  1809  019D                     	;# 
  1810  019D                     	;# 
  1811  019E                     	;# 
  1812  019E                     	;# 
  1813  019E                     	;# 
  1814  019F                     	;# 
  1815  019F                     	;# 
  1816  019F                     	;# 
  1817  019F                     	;# 
  1818  019F                     	;# 
  1819  020C                     	;# 
  1820  020E                     	;# 
  1821  0211                     	;# 
  1822  0211                     	;# 
  1823  0212                     	;# 
  1824  0212                     	;# 
  1825  0213                     	;# 
  1826  0213                     	;# 
  1827  0214                     	;# 
  1828  0214                     	;# 
  1829  0215                     	;# 
  1830  0215                     	;# 
  1831  0215                     	;# 
  1832  0215                     	;# 
  1833  0216                     	;# 
  1834  0216                     	;# 
  1835  0217                     	;# 
  1836  0217                     	;# 
  1837  028C                     	;# 
  1838  028E                     	;# 
  1839  0291                     	;# 
  1840  0291                     	;# 
  1841  0292                     	;# 
  1842  0293                     	;# 
  1843  0293                     	;# 
  1844  0298                     	;# 
  1845  0298                     	;# 
  1846  0299                     	;# 
  1847  029A                     	;# 
  1848  029A                     	;# 
  1849  029E                     	;# 
  1850  030C                     	;# 
  1851  030E                     	;# 
  1852  038C                     	;# 
  1853  038E                     	;# 
  1854  0391                     	;# 
  1855  0392                     	;# 
  1856  0393                     	;# 
  1857  0397                     	;# 
  1858  0398                     	;# 
  1859  0399                     	;# 
  1860  0415                     	;# 
  1861  0416                     	;# 
  1862  0417                     	;# 
  1863  041C                     	;# 
  1864  041D                     	;# 
  1865  041E                     	;# 
  1866  0511                     	;# 
  1867  0515                     	;# 
  1868  0617                     	;# 
  1869  0618                     	;# 
  1870  0619                     	;# 
  1871  0619                     	;# 
  1872  061A                     	;# 
  1873  061B                     	;# 
  1874  061C                     	;# 
  1875  061C                     	;# 
  1876  0691                     	;# 
  1877  0692                     	;# 
  1878  0693                     	;# 
  1879  0694                     	;# 
  1880  0695                     	;# 
  1881  0696                     	;# 
  1882  0697                     	;# 
  1883  0698                     	;# 
  1884  0699                     	;# 
  1885  069A                     	;# 
  1886  069B                     	;# 
  1887  069C                     	;# 
  1888  069D                     	;# 
  1889  069E                     	;# 
  1890  069F                     	;# 
  1891  0E0F                     	;# 
  1892  0E10                     	;# 
  1893  0E11                     	;# 
  1894  0E12                     	;# 
  1895  0E13                     	;# 
  1896  0E14                     	;# 
  1897  0E15                     	;# 
  1898  0E17                     	;# 
  1899  0E20                     	;# 
  1900  0E21                     	;# 
  1901  0E22                     	;# 
  1902  0E24                     	;# 
  1903  0E25                     	;# 
  1904  0E28                     	;# 
  1905  0E29                     	;# 
  1906  0E2A                     	;# 
  1907  0E2B                     	;# 
  1908  0E90                     	;# 
  1909  0E91                     	;# 
  1910  0E92                     	;# 
  1911  0E94                     	;# 
  1912  0E95                     	;# 
  1913  0EA0                     	;# 
  1914  0EA1                     	;# 
  1915  0EA2                     	;# 
  1916  0EA3                     	;# 
  1917  0EA4                     	;# 
  1918  0EA5                     	;# 
  1919  0F0F                     	;# 
  1920  0F10                     	;# 
  1921  0F11                     	;# 
  1922  0F12                     	;# 
  1923  0F13                     	;# 
  1924  0F14                     	;# 
  1925  0F15                     	;# 
  1926  0F16                     	;# 
  1927  0F17                     	;# 
  1928  0F18                     	;# 
  1929  0F19                     	;# 
  1930  0F1A                     	;# 
  1931  0F1B                     	;# 
  1932  0F1C                     	;# 
  1933  0F1D                     	;# 
  1934  0F1E                     	;# 
  1935  0F1F                     	;# 
  1936  0F20                     	;# 
  1937  0F21                     	;# 
  1938  0F22                     	;# 
  1939  0F23                     	;# 
  1940  0F24                     	;# 
  1941  0F25                     	;# 
  1942  0F26                     	;# 
  1943  0F27                     	;# 
  1944  0F28                     	;# 
  1945  0F29                     	;# 
  1946  0F2A                     	;# 
  1947  0F2B                     	;# 
  1948  0F2C                     	;# 
  1949  0F2D                     	;# 
  1950  0FE4                     	;# 
  1951  0FE5                     	;# 
  1952  0FE6                     	;# 
  1953  0FE7                     	;# 
  1954  0FE8                     	;# 
  1955  0FE9                     	;# 
  1956  0FEA                     	;# 
  1957  0FEB                     	;# 
  1958  0FED                     	;# 
  1959  0FEE                     	;# 
  1960  0FEF                     	;# 
  1961  0000                     	;# 
  1962  0001                     	;# 
  1963  0002                     	;# 
  1964  0003                     	;# 
  1965  0004                     	;# 
  1966  0005                     	;# 
  1967  0006                     	;# 
  1968  0007                     	;# 
  1969  0008                     	;# 
  1970  0009                     	;# 
  1971  000A                     	;# 
  1972  000B                     	;# 
  1973  000C                     	;# 
  1974  000E                     	;# 
  1975  0011                     	;# 
  1976  0012                     	;# 
  1977  0013                     	;# 
  1978  0015                     	;# 
  1979  0016                     	;# 
  1980  0016                     	;# 
  1981  0017                     	;# 
  1982  0018                     	;# 
  1983  0019                     	;# 
  1984  001A                     	;# 
  1985  001B                     	;# 
  1986  001C                     	;# 
  1987  008C                     	;# 
  1988  008E                     	;# 
  1989  0091                     	;# 
  1990  0092                     	;# 
  1991  0093                     	;# 
  1992  0095                     	;# 
  1993  0096                     	;# 
  1994  0097                     	;# 
  1995  0098                     	;# 
  1996  0099                     	;# 
  1997  009A                     	;# 
  1998  009B                     	;# 
  1999  009B                     	;# 
  2000  009C                     	;# 
  2001  009D                     	;# 
  2002  009E                     	;# 
  2003  009F                     	;# 
  2004  010C                     	;# 
  2005  010E                     	;# 
  2006  0111                     	;# 
  2007  0112                     	;# 
  2008  0113                     	;# 
  2009  0114                     	;# 
  2010  0115                     	;# 
  2011  0116                     	;# 
  2012  0117                     	;# 
  2013  0118                     	;# 
  2014  0119                     	;# 
  2015  011C                     	;# 
  2016  018C                     	;# 
  2017  018E                     	;# 
  2018  0191                     	;# 
  2019  0191                     	;# 
  2020  0192                     	;# 
  2021  0193                     	;# 
  2022  0193                     	;# 
  2023  0194                     	;# 
  2024  0195                     	;# 
  2025  0196                     	;# 
  2026  0197                     	;# 
  2027  0199                     	;# 
  2028  0199                     	;# 
  2029  0199                     	;# 
  2030  019A                     	;# 
  2031  019A                     	;# 
  2032  019A                     	;# 
  2033  019B                     	;# 
  2034  019B                     	;# 
  2035  019B                     	;# 
  2036  019B                     	;# 
  2037  019B                     	;# 
  2038  019C                     	;# 
  2039  019C                     	;# 
  2040  019C                     	;# 
  2041  019D                     	;# 
  2042  019D                     	;# 
  2043  019D                     	;# 
  2044  019E                     	;# 
  2045  019E                     	;# 
  2046  019E                     	;# 
  2047  019F                     	;# 
  2048  019F                     	;# 
  2049  019F                     	;# 
  2050  019F                     	;# 
  2051  019F                     	;# 
  2052  020C                     	;# 
  2053  020E                     	;# 
  2054  0211                     	;# 
  2055  0211                     	;# 
  2056  0212                     	;# 
  2057  0212                     	;# 
  2058  0213                     	;# 
  2059  0213                     	;# 
  2060  0214                     	;# 
  2061  0214                     	;# 
  2062  0215                     	;# 
  2063  0215                     	;# 
  2064  0215                     	;# 
  2065  0215                     	;# 
  2066  0216                     	;# 
  2067  0216                     	;# 
  2068  0217                     	;# 
  2069  0217                     	;# 
  2070  028C                     	;# 
  2071  028E                     	;# 
  2072  0291                     	;# 
  2073  0291                     	;# 
  2074  0292                     	;# 
  2075  0293                     	;# 
  2076  0293                     	;# 
  2077  0298                     	;# 
  2078  0298                     	;# 
  2079  0299                     	;# 
  2080  029A                     	;# 
  2081  029A                     	;# 
  2082  029E                     	;# 
  2083  030C                     	;# 
  2084  030E                     	;# 
  2085  038C                     	;# 
  2086  038E                     	;# 
  2087  0391                     	;# 
  2088  0392                     	;# 
  2089  0393                     	;# 
  2090  0397                     	;# 
  2091  0398                     	;# 
  2092  0399                     	;# 
  2093  0415                     	;# 
  2094  0416                     	;# 
  2095  0417                     	;# 
  2096  041C                     	;# 
  2097  041D                     	;# 
  2098  041E                     	;# 
  2099  0511                     	;# 
  2100  0515                     	;# 
  2101  0617                     	;# 
  2102  0618                     	;# 
  2103  0619                     	;# 
  2104  0619                     	;# 
  2105  061A                     	;# 
  2106  061B                     	;# 
  2107  061C                     	;# 
  2108  061C                     	;# 
  2109  0691                     	;# 
  2110  0692                     	;# 
  2111  0693                     	;# 
  2112  0694                     	;# 
  2113  0695                     	;# 
  2114  0696                     	;# 
  2115  0697                     	;# 
  2116  0698                     	;# 
  2117  0699                     	;# 
  2118  069A                     	;# 
  2119  069B                     	;# 
  2120  069C                     	;# 
  2121  069D                     	;# 
  2122  069E                     	;# 
  2123  069F                     	;# 
  2124  0E0F                     	;# 
  2125  0E10                     	;# 
  2126  0E11                     	;# 
  2127  0E12                     	;# 
  2128  0E13                     	;# 
  2129  0E14                     	;# 
  2130  0E15                     	;# 
  2131  0E17                     	;# 
  2132  0E20                     	;# 
  2133  0E21                     	;# 
  2134  0E22                     	;# 
  2135  0E24                     	;# 
  2136  0E25                     	;# 
  2137  0E28                     	;# 
  2138  0E29                     	;# 
  2139  0E2A                     	;# 
  2140  0E2B                     	;# 
  2141  0E90                     	;# 
  2142  0E91                     	;# 
  2143  0E92                     	;# 
  2144  0E94                     	;# 
  2145  0E95                     	;# 
  2146  0EA0                     	;# 
  2147  0EA1                     	;# 
  2148  0EA2                     	;# 
  2149  0EA3                     	;# 
  2150  0EA4                     	;# 
  2151  0EA5                     	;# 
  2152  0F0F                     	;# 
  2153  0F10                     	;# 
  2154  0F11                     	;# 
  2155  0F12                     	;# 
  2156  0F13                     	;# 
  2157  0F14                     	;# 
  2158  0F15                     	;# 
  2159  0F16                     	;# 
  2160  0F17                     	;# 
  2161  0F18                     	;# 
  2162  0F19                     	;# 
  2163  0F1A                     	;# 
  2164  0F1B                     	;# 
  2165  0F1C                     	;# 
  2166  0F1D                     	;# 
  2167  0F1E                     	;# 
  2168  0F1F                     	;# 
  2169  0F20                     	;# 
  2170  0F21                     	;# 
  2171  0F22                     	;# 
  2172  0F23                     	;# 
  2173  0F24                     	;# 
  2174  0F25                     	;# 
  2175  0F26                     	;# 
  2176  0F27                     	;# 
  2177  0F28                     	;# 
  2178  0F29                     	;# 
  2179  0F2A                     	;# 
  2180  0F2B                     	;# 
  2181  0F2C                     	;# 
  2182  0F2D                     	;# 
  2183  0FE4                     	;# 
  2184  0FE5                     	;# 
  2185  0FE6                     	;# 
  2186  0FE7                     	;# 
  2187  0FE8                     	;# 
  2188  0FE9                     	;# 
  2189  0FEA                     	;# 
  2190  0FEB                     	;# 
  2191  0FED                     	;# 
  2192  0FEE                     	;# 
  2193  0FEF                     	;# 
  2194  0000                     	;# 
  2195  0001                     	;# 
  2196  0002                     	;# 
  2197  0003                     	;# 
  2198  0004                     	;# 
  2199  0005                     	;# 
  2200  0006                     	;# 
  2201  0007                     	;# 
  2202  0008                     	;# 
  2203  0009                     	;# 
  2204  000A                     	;# 
  2205  000B                     	;# 
  2206  000C                     	;# 
  2207  000E                     	;# 
  2208  0011                     	;# 
  2209  0012                     	;# 
  2210  0013                     	;# 
  2211  0015                     	;# 
  2212  0016                     	;# 
  2213  0016                     	;# 
  2214  0017                     	;# 
  2215  0018                     	;# 
  2216  0019                     	;# 
  2217  001A                     	;# 
  2218  001B                     	;# 
  2219  001C                     	;# 
  2220  008C                     	;# 
  2221  008E                     	;# 
  2222  0091                     	;# 
  2223  0092                     	;# 
  2224  0093                     	;# 
  2225  0095                     	;# 
  2226  0096                     	;# 
  2227  0097                     	;# 
  2228  0098                     	;# 
  2229  0099                     	;# 
  2230  009A                     	;# 
  2231  009B                     	;# 
  2232  009B                     	;# 
  2233  009C                     	;# 
  2234  009D                     	;# 
  2235  009E                     	;# 
  2236  009F                     	;# 
  2237  010C                     	;# 
  2238  010E                     	;# 
  2239  0111                     	;# 
  2240  0112                     	;# 
  2241  0113                     	;# 
  2242  0114                     	;# 
  2243  0115                     	;# 
  2244  0116                     	;# 
  2245  0117                     	;# 
  2246  0118                     	;# 
  2247  0119                     	;# 
  2248  011C                     	;# 
  2249  018C                     	;# 
  2250  018E                     	;# 
  2251  0191                     	;# 
  2252  0191                     	;# 
  2253  0192                     	;# 
  2254  0193                     	;# 
  2255  0193                     	;# 
  2256  0194                     	;# 
  2257  0195                     	;# 
  2258  0196                     	;# 
  2259  0197                     	;# 
  2260  0199                     	;# 
  2261  0199                     	;# 
  2262  0199                     	;# 
  2263  019A                     	;# 
  2264  019A                     	;# 
  2265  019A                     	;# 
  2266  019B                     	;# 
  2267  019B                     	;# 
  2268  019B                     	;# 
  2269  019B                     	;# 
  2270  019B                     	;# 
  2271  019C                     	;# 
  2272  019C                     	;# 
  2273  019C                     	;# 
  2274  019D                     	;# 
  2275  019D                     	;# 
  2276  019D                     	;# 
  2277  019E                     	;# 
  2278  019E                     	;# 
  2279  019E                     	;# 
  2280  019F                     	;# 
  2281  019F                     	;# 
  2282  019F                     	;# 
  2283  019F                     	;# 
  2284  019F                     	;# 
  2285  020C                     	;# 
  2286  020E                     	;# 
  2287  0211                     	;# 
  2288  0211                     	;# 
  2289  0212                     	;# 
  2290  0212                     	;# 
  2291  0213                     	;# 
  2292  0213                     	;# 
  2293  0214                     	;# 
  2294  0214                     	;# 
  2295  0215                     	;# 
  2296  0215                     	;# 
  2297  0215                     	;# 
  2298  0215                     	;# 
  2299  0216                     	;# 
  2300  0216                     	;# 
  2301  0217                     	;# 
  2302  0217                     	;# 
  2303  028C                     	;# 
  2304  028E                     	;# 
  2305  0291                     	;# 
  2306  0291                     	;# 
  2307  0292                     	;# 
  2308  0293                     	;# 
  2309  0293                     	;# 
  2310  0298                     	;# 
  2311  0298                     	;# 
  2312  0299                     	;# 
  2313  029A                     	;# 
  2314  029A                     	;# 
  2315  029E                     	;# 
  2316  030C                     	;# 
  2317  030E                     	;# 
  2318  038C                     	;# 
  2319  038E                     	;# 
  2320  0391                     	;# 
  2321  0392                     	;# 
  2322  0393                     	;# 
  2323  0397                     	;# 
  2324  0398                     	;# 
  2325  0399                     	;# 
  2326  0415                     	;# 
  2327  0416                     	;# 
  2328  0417                     	;# 
  2329  041C                     	;# 
  2330  041D                     	;# 
  2331  041E                     	;# 
  2332  0511                     	;# 
  2333  0515                     	;# 
  2334  0617                     	;# 
  2335  0618                     	;# 
  2336  0619                     	;# 
  2337  0619                     	;# 
  2338  061A                     	;# 
  2339  061B                     	;# 
  2340  061C                     	;# 
  2341  061C                     	;# 
  2342  0691                     	;# 
  2343  0692                     	;# 
  2344  0693                     	;# 
  2345  0694                     	;# 
  2346  0695                     	;# 
  2347  0696                     	;# 
  2348  0697                     	;# 
  2349  0698                     	;# 
  2350  0699                     	;# 
  2351  069A                     	;# 
  2352  069B                     	;# 
  2353  069C                     	;# 
  2354  069D                     	;# 
  2355  069E                     	;# 
  2356  069F                     	;# 
  2357  0E0F                     	;# 
  2358  0E10                     	;# 
  2359  0E11                     	;# 
  2360  0E12                     	;# 
  2361  0E13                     	;# 
  2362  0E14                     	;# 
  2363  0E15                     	;# 
  2364  0E17                     	;# 
  2365  0E20                     	;# 
  2366  0E21                     	;# 
  2367  0E22                     	;# 
  2368  0E24                     	;# 
  2369  0E25                     	;# 
  2370  0E28                     	;# 
  2371  0E29                     	;# 
  2372  0E2A                     	;# 
  2373  0E2B                     	;# 
  2374  0E90                     	;# 
  2375  0E91                     	;# 
  2376  0E92                     	;# 
  2377  0E94                     	;# 
  2378  0E95                     	;# 
  2379  0EA0                     	;# 
  2380  0EA1                     	;# 
  2381  0EA2                     	;# 
  2382  0EA3                     	;# 
  2383  0EA4                     	;# 
  2384  0EA5                     	;# 
  2385  0F0F                     	;# 
  2386  0F10                     	;# 
  2387  0F11                     	;# 
  2388  0F12                     	;# 
  2389  0F13                     	;# 
  2390  0F14                     	;# 
  2391  0F15                     	;# 
  2392  0F16                     	;# 
  2393  0F17                     	;# 
  2394  0F18                     	;# 
  2395  0F19                     	;# 
  2396  0F1A                     	;# 
  2397  0F1B                     	;# 
  2398  0F1C                     	;# 
  2399  0F1D                     	;# 
  2400  0F1E                     	;# 
  2401  0F1F                     	;# 
  2402  0F20                     	;# 
  2403  0F21                     	;# 
  2404  0F22                     	;# 
  2405  0F23                     	;# 
  2406  0F24                     	;# 
  2407  0F25                     	;# 
  2408  0F26                     	;# 
  2409  0F27                     	;# 
  2410  0F28                     	;# 
  2411  0F29                     	;# 
  2412  0F2A                     	;# 
  2413  0F2B                     	;# 
  2414  0F2C                     	;# 
  2415  0F2D                     	;# 
  2416  0FE4                     	;# 
  2417  0FE5                     	;# 
  2418  0FE6                     	;# 
  2419  0FE7                     	;# 
  2420  0FE8                     	;# 
  2421  0FE9                     	;# 
  2422  0FEA                     	;# 
  2423  0FEB                     	;# 
  2424  0FED                     	;# 
  2425  0FEE                     	;# 
  2426  0FEF                     	;# 
  2427  0000                     	;# 
  2428  0001                     	;# 
  2429  0002                     	;# 
  2430  0003                     	;# 
  2431  0004                     	;# 
  2432  0005                     	;# 
  2433  0006                     	;# 
  2434  0007                     	;# 
  2435  0008                     	;# 
  2436  0009                     	;# 
  2437  000A                     	;# 
  2438  000B                     	;# 
  2439  000C                     	;# 
  2440  000E                     	;# 
  2441  0011                     	;# 
  2442  0012                     	;# 
  2443  0013                     	;# 
  2444  0015                     	;# 
  2445  0016                     	;# 
  2446  0016                     	;# 
  2447  0017                     	;# 
  2448  0018                     	;# 
  2449  0019                     	;# 
  2450  001A                     	;# 
  2451  001B                     	;# 
  2452  001C                     	;# 
  2453  008C                     	;# 
  2454  008E                     	;# 
  2455  0091                     	;# 
  2456  0092                     	;# 
  2457  0093                     	;# 
  2458  0095                     	;# 
  2459  0096                     	;# 
  2460  0097                     	;# 
  2461  0098                     	;# 
  2462  0099                     	;# 
  2463  009A                     	;# 
  2464  009B                     	;# 
  2465  009B                     	;# 
  2466  009C                     	;# 
  2467  009D                     	;# 
  2468  009E                     	;# 
  2469  009F                     	;# 
  2470  010C                     	;# 
  2471  010E                     	;# 
  2472  0111                     	;# 
  2473  0112                     	;# 
  2474  0113                     	;# 
  2475  0114                     	;# 
  2476  0115                     	;# 
  2477  0116                     	;# 
  2478  0117                     	;# 
  2479  0118                     	;# 
  2480  0119                     	;# 
  2481  011C                     	;# 
  2482  018C                     	;# 
  2483  018E                     	;# 
  2484  0191                     	;# 
  2485  0191                     	;# 
  2486  0192                     	;# 
  2487  0193                     	;# 
  2488  0193                     	;# 
  2489  0194                     	;# 
  2490  0195                     	;# 
  2491  0196                     	;# 
  2492  0197                     	;# 
  2493  0199                     	;# 
  2494  0199                     	;# 
  2495  0199                     	;# 
  2496  019A                     	;# 
  2497  019A                     	;# 
  2498  019A                     	;# 
  2499  019B                     	;# 
  2500  019B                     	;# 
  2501  019B                     	;# 
  2502  019B                     	;# 
  2503  019B                     	;# 
  2504  019C                     	;# 
  2505  019C                     	;# 
  2506  019C                     	;# 
  2507  019D                     	;# 
  2508  019D                     	;# 
  2509  019D                     	;# 
  2510  019E                     	;# 
  2511  019E                     	;# 
  2512  019E                     	;# 
  2513  019F                     	;# 
  2514  019F                     	;# 
  2515  019F                     	;# 
  2516  019F                     	;# 
  2517  019F                     	;# 
  2518  020C                     	;# 
  2519  020E                     	;# 
  2520  0211                     	;# 
  2521  0211                     	;# 
  2522  0212                     	;# 
  2523  0212                     	;# 
  2524  0213                     	;# 
  2525  0213                     	;# 
  2526  0214                     	;# 
  2527  0214                     	;# 
  2528  0215                     	;# 
  2529  0215                     	;# 
  2530  0215                     	;# 
  2531  0215                     	;# 
  2532  0216                     	;# 
  2533  0216                     	;# 
  2534  0217                     	;# 
  2535  0217                     	;# 
  2536  028C                     	;# 
  2537  028E                     	;# 
  2538  0291                     	;# 
  2539  0291                     	;# 
  2540  0292                     	;# 
  2541  0293                     	;# 
  2542  0293                     	;# 
  2543  0298                     	;# 
  2544  0298                     	;# 
  2545  0299                     	;# 
  2546  029A                     	;# 
  2547  029A                     	;# 
  2548  029E                     	;# 
  2549  030C                     	;# 
  2550  030E                     	;# 
  2551  038C                     	;# 
  2552  038E                     	;# 
  2553  0391                     	;# 
  2554  0392                     	;# 
  2555  0393                     	;# 
  2556  0397                     	;# 
  2557  0398                     	;# 
  2558  0399                     	;# 
  2559  0415                     	;# 
  2560  0416                     	;# 
  2561  0417                     	;# 
  2562  041C                     	;# 
  2563  041D                     	;# 
  2564  041E                     	;# 
  2565  0511                     	;# 
  2566  0515                     	;# 
  2567  0617                     	;# 
  2568  0618                     	;# 
  2569  0619                     	;# 
  2570  0619                     	;# 
  2571  061A                     	;# 
  2572  061B                     	;# 
  2573  061C                     	;# 
  2574  061C                     	;# 
  2575  0691                     	;# 
  2576  0692                     	;# 
  2577  0693                     	;# 
  2578  0694                     	;# 
  2579  0695                     	;# 
  2580  0696                     	;# 
  2581  0697                     	;# 
  2582  0698                     	;# 
  2583  0699                     	;# 
  2584  069A                     	;# 
  2585  069B                     	;# 
  2586  069C                     	;# 
  2587  069D                     	;# 
  2588  069E                     	;# 
  2589  069F                     	;# 
  2590  0E0F                     	;# 
  2591  0E10                     	;# 
  2592  0E11                     	;# 
  2593  0E12                     	;# 
  2594  0E13                     	;# 
  2595  0E14                     	;# 
  2596  0E15                     	;# 
  2597  0E17                     	;# 
  2598  0E20                     	;# 
  2599  0E21                     	;# 
  2600  0E22                     	;# 
  2601  0E24                     	;# 
  2602  0E25                     	;# 
  2603  0E28                     	;# 
  2604  0E29                     	;# 
  2605  0E2A                     	;# 
  2606  0E2B                     	;# 
  2607  0E90                     	;# 
  2608  0E91                     	;# 
  2609  0E92                     	;# 
  2610  0E94                     	;# 
  2611  0E95                     	;# 
  2612  0EA0                     	;# 
  2613  0EA1                     	;# 
  2614  0EA2                     	;# 
  2615  0EA3                     	;# 
  2616  0EA4                     	;# 
  2617  0EA5                     	;# 
  2618  0F0F                     	;# 
  2619  0F10                     	;# 
  2620  0F11                     	;# 
  2621  0F12                     	;# 
  2622  0F13                     	;# 
  2623  0F14                     	;# 
  2624  0F15                     	;# 
  2625  0F16                     	;# 
  2626  0F17                     	;# 
  2627  0F18                     	;# 
  2628  0F19                     	;# 
  2629  0F1A                     	;# 
  2630  0F1B                     	;# 
  2631  0F1C                     	;# 
  2632  0F1D                     	;# 
  2633  0F1E                     	;# 
  2634  0F1F                     	;# 
  2635  0F20                     	;# 
  2636  0F21                     	;# 
  2637  0F22                     	;# 
  2638  0F23                     	;# 
  2639  0F24                     	;# 
  2640  0F25                     	;# 
  2641  0F26                     	;# 
  2642  0F27                     	;# 
  2643  0F28                     	;# 
  2644  0F29                     	;# 
  2645  0F2A                     	;# 
  2646  0F2B                     	;# 
  2647  0F2C                     	;# 
  2648  0F2D                     	;# 
  2649  0FE4                     	;# 
  2650  0FE5                     	;# 
  2651  0FE6                     	;# 
  2652  0FE7                     	;# 
  2653  0FE8                     	;# 
  2654  0FE9                     	;# 
  2655  0FEA                     	;# 
  2656  0FEB                     	;# 
  2657  0FED                     	;# 
  2658  0FEE                     	;# 
  2659  0FEF                     	;# 
  2660  0000                     	;# 
  2661  0001                     	;# 
  2662  0002                     	;# 
  2663  0003                     	;# 
  2664  0004                     	;# 
  2665  0005                     	;# 
  2666  0006                     	;# 
  2667  0007                     	;# 
  2668  0008                     	;# 
  2669  0009                     	;# 
  2670  000A                     	;# 
  2671  000B                     	;# 
  2672  000C                     	;# 
  2673  000E                     	;# 
  2674  0011                     	;# 
  2675  0012                     	;# 
  2676  0013                     	;# 
  2677  0015                     	;# 
  2678  0016                     	;# 
  2679  0016                     	;# 
  2680  0017                     	;# 
  2681  0018                     	;# 
  2682  0019                     	;# 
  2683  001A                     	;# 
  2684  001B                     	;# 
  2685  001C                     	;# 
  2686  008C                     	;# 
  2687  008E                     	;# 
  2688  0091                     	;# 
  2689  0092                     	;# 
  2690  0093                     	;# 
  2691  0095                     	;# 
  2692  0096                     	;# 
  2693  0097                     	;# 
  2694  0098                     	;# 
  2695  0099                     	;# 
  2696  009A                     	;# 
  2697  009B                     	;# 
  2698  009B                     	;# 
  2699  009C                     	;# 
  2700  009D                     	;# 
  2701  009E                     	;# 
  2702  009F                     	;# 
  2703  010C                     	;# 
  2704  010E                     	;# 
  2705  0111                     	;# 
  2706  0112                     	;# 
  2707  0113                     	;# 
  2708  0114                     	;# 
  2709  0115                     	;# 
  2710  0116                     	;# 
  2711  0117                     	;# 
  2712  0118                     	;# 
  2713  0119                     	;# 
  2714  011C                     	;# 
  2715  018C                     	;# 
  2716  018E                     	;# 
  2717  0191                     	;# 
  2718  0191                     	;# 
  2719  0192                     	;# 
  2720  0193                     	;# 
  2721  0193                     	;# 
  2722  0194                     	;# 
  2723  0195                     	;# 
  2724  0196                     	;# 
  2725  0197                     	;# 
  2726  0199                     	;# 
  2727  0199                     	;# 
  2728  0199                     	;# 
  2729  019A                     	;# 
  2730  019A                     	;# 
  2731  019A                     	;# 
  2732  019B                     	;# 
  2733  019B                     	;# 
  2734  019B                     	;# 
  2735  019B                     	;# 
  2736  019B                     	;# 
  2737  019C                     	;# 
  2738  019C                     	;# 
  2739  019C                     	;# 
  2740  019D                     	;# 
  2741  019D                     	;# 
  2742  019D                     	;# 
  2743  019E                     	;# 
  2744  019E                     	;# 
  2745  019E                     	;# 
  2746  019F                     	;# 
  2747  019F                     	;# 
  2748  019F                     	;# 
  2749  019F                     	;# 
  2750  019F                     	;# 
  2751  020C                     	;# 
  2752  020E                     	;# 
  2753  0211                     	;# 
  2754  0211                     	;# 
  2755  0212                     	;# 
  2756  0212                     	;# 
  2757  0213                     	;# 
  2758  0213                     	;# 
  2759  0214                     	;# 
  2760  0214                     	;# 
  2761  0215                     	;# 
  2762  0215                     	;# 
  2763  0215                     	;# 
  2764  0215                     	;# 
  2765  0216                     	;# 
  2766  0216                     	;# 
  2767  0217                     	;# 
  2768  0217                     	;# 
  2769  028C                     	;# 
  2770  028E                     	;# 
  2771  0291                     	;# 
  2772  0291                     	;# 
  2773  0292                     	;# 
  2774  0293                     	;# 
  2775  0293                     	;# 
  2776  0298                     	;# 
  2777  0298                     	;# 
  2778  0299                     	;# 
  2779  029A                     	;# 
  2780  029A                     	;# 
  2781  029E                     	;# 
  2782  030C                     	;# 
  2783  030E                     	;# 
  2784  038C                     	;# 
  2785  038E                     	;# 
  2786  0391                     	;# 
  2787  0392                     	;# 
  2788  0393                     	;# 
  2789  0397                     	;# 
  2790  0398                     	;# 
  2791  0399                     	;# 
  2792  0415                     	;# 
  2793  0416                     	;# 
  2794  0417                     	;# 
  2795  041C                     	;# 
  2796  041D                     	;# 
  2797  041E                     	;# 
  2798  0511                     	;# 
  2799  0515                     	;# 
  2800  0617                     	;# 
  2801  0618                     	;# 
  2802  0619                     	;# 
  2803  0619                     	;# 
  2804  061A                     	;# 
  2805  061B                     	;# 
  2806  061C                     	;# 
  2807  061C                     	;# 
  2808  0691                     	;# 
  2809  0692                     	;# 
  2810  0693                     	;# 
  2811  0694                     	;# 
  2812  0695                     	;# 
  2813  0696                     	;# 
  2814  0697                     	;# 
  2815  0698                     	;# 
  2816  0699                     	;# 
  2817  069A                     	;# 
  2818  069B                     	;# 
  2819  069C                     	;# 
  2820  069D                     	;# 
  2821  069E                     	;# 
  2822  069F                     	;# 
  2823  0E0F                     	;# 
  2824  0E10                     	;# 
  2825  0E11                     	;# 
  2826  0E12                     	;# 
  2827  0E13                     	;# 
  2828  0E14                     	;# 
  2829  0E15                     	;# 
  2830  0E17                     	;# 
  2831  0E20                     	;# 
  2832  0E21                     	;# 
  2833  0E22                     	;# 
  2834  0E24                     	;# 
  2835  0E25                     	;# 
  2836  0E28                     	;# 
  2837  0E29                     	;# 
  2838  0E2A                     	;# 
  2839  0E2B                     	;# 
  2840  0E90                     	;# 
  2841  0E91                     	;# 
  2842  0E92                     	;# 
  2843  0E94                     	;# 
  2844  0E95                     	;# 
  2845  0EA0                     	;# 
  2846  0EA1                     	;# 
  2847  0EA2                     	;# 
  2848  0EA3                     	;# 
  2849  0EA4                     	;# 
  2850  0EA5                     	;# 
  2851  0F0F                     	;# 
  2852  0F10                     	;# 
  2853  0F11                     	;# 
  2854  0F12                     	;# 
  2855  0F13                     	;# 
  2856  0F14                     	;# 
  2857  0F15                     	;# 
  2858  0F16                     	;# 
  2859  0F17                     	;# 
  2860  0F18                     	;# 
  2861  0F19                     	;# 
  2862  0F1A                     	;# 
  2863  0F1B                     	;# 
  2864  0F1C                     	;# 
  2865  0F1D                     	;# 
  2866  0F1E                     	;# 
  2867  0F1F                     	;# 
  2868  0F20                     	;# 
  2869  0F21                     	;# 
  2870  0F22                     	;# 
  2871  0F23                     	;# 
  2872  0F24                     	;# 
  2873  0F25                     	;# 
  2874  0F26                     	;# 
  2875  0F27                     	;# 
  2876  0F28                     	;# 
  2877  0F29                     	;# 
  2878  0F2A                     	;# 
  2879  0F2B                     	;# 
  2880  0F2C                     	;# 
  2881  0F2D                     	;# 
  2882  0FE4                     	;# 
  2883  0FE5                     	;# 
  2884  0FE6                     	;# 
  2885  0FE7                     	;# 
  2886  0FE8                     	;# 
  2887  0FE9                     	;# 
  2888  0FEA                     	;# 
  2889  0FEB                     	;# 
  2890  0FED                     	;# 
  2891  0FEE                     	;# 
  2892  0FEF                     	;# 
  2893  0000                     	;# 
  2894  0001                     	;# 
  2895  0002                     	;# 
  2896  0003                     	;# 
  2897  0004                     	;# 
  2898  0005                     	;# 
  2899  0006                     	;# 
  2900  0007                     	;# 
  2901  0008                     	;# 
  2902  0009                     	;# 
  2903  000A                     	;# 
  2904  000B                     	;# 
  2905  000C                     	;# 
  2906  000E                     	;# 
  2907  0011                     	;# 
  2908  0012                     	;# 
  2909  0013                     	;# 
  2910  0015                     	;# 
  2911  0016                     	;# 
  2912  0016                     	;# 
  2913  0017                     	;# 
  2914  0018                     	;# 
  2915  0019                     	;# 
  2916  001A                     	;# 
  2917  001B                     	;# 
  2918  001C                     	;# 
  2919  008C                     	;# 
  2920  008E                     	;# 
  2921  0091                     	;# 
  2922  0092                     	;# 
  2923  0093                     	;# 
  2924  0095                     	;# 
  2925  0096                     	;# 
  2926  0097                     	;# 
  2927  0098                     	;# 
  2928  0099                     	;# 
  2929  009A                     	;# 
  2930  009B                     	;# 
  2931  009B                     	;# 
  2932  009C                     	;# 
  2933  009D                     	;# 
  2934  009E                     	;# 
  2935  009F                     	;# 
  2936  010C                     	;# 
  2937  010E                     	;# 
  2938  0111                     	;# 
  2939  0112                     	;# 
  2940  0113                     	;# 
  2941  0114                     	;# 
  2942  0115                     	;# 
  2943  0116                     	;# 
  2944  0117                     	;# 
  2945  0118                     	;# 
  2946  0119                     	;# 
  2947  011C                     	;# 
  2948  018C                     	;# 
  2949  018E                     	;# 
  2950  0191                     	;# 
  2951  0191                     	;# 
  2952  0192                     	;# 
  2953  0193                     	;# 
  2954  0193                     	;# 
  2955  0194                     	;# 
  2956  0195                     	;# 
  2957  0196                     	;# 
  2958  0197                     	;# 
  2959  0199                     	;# 
  2960  0199                     	;# 
  2961  0199                     	;# 
  2962  019A                     	;# 
  2963  019A                     	;# 
  2964  019A                     	;# 
  2965  019B                     	;# 
  2966  019B                     	;# 
  2967  019B                     	;# 
  2968  019B                     	;# 
  2969  019B                     	;# 
  2970  019C                     	;# 
  2971  019C                     	;# 
  2972  019C                     	;# 
  2973  019D                     	;# 
  2974  019D                     	;# 
  2975  019D                     	;# 
  2976  019E                     	;# 
  2977  019E                     	;# 
  2978  019E                     	;# 
  2979  019F                     	;# 
  2980  019F                     	;# 
  2981  019F                     	;# 
  2982  019F                     	;# 
  2983  019F                     	;# 
  2984  020C                     	;# 
  2985  020E                     	;# 
  2986  0211                     	;# 
  2987  0211                     	;# 
  2988  0212                     	;# 
  2989  0212                     	;# 
  2990  0213                     	;# 
  2991  0213                     	;# 
  2992  0214                     	;# 
  2993  0214                     	;# 
  2994  0215                     	;# 
  2995  0215                     	;# 
  2996  0215                     	;# 
  2997  0215                     	;# 
  2998  0216                     	;# 
  2999  0216                     	;# 
  3000  0217                     	;# 
  3001  0217                     	;# 
  3002  028C                     	;# 
  3003  028E                     	;# 
  3004  0291                     	;# 
  3005  0291                     	;# 
  3006  0292                     	;# 
  3007  0293                     	;# 
  3008  0293                     	;# 
  3009  0298                     	;# 
  3010  0298                     	;# 
  3011  0299                     	;# 
  3012  029A                     	;# 
  3013  029A                     	;# 
  3014  029E                     	;# 
  3015  030C                     	;# 
  3016  030E                     	;# 
  3017  038C                     	;# 
  3018  038E                     	;# 
  3019  0391                     	;# 
  3020  0392                     	;# 
  3021  0393                     	;# 
  3022  0397                     	;# 
  3023  0398                     	;# 
  3024  0399                     	;# 
  3025  0415                     	;# 
  3026  0416                     	;# 
  3027  0417                     	;# 
  3028  041C                     	;# 
  3029  041D                     	;# 
  3030  041E                     	;# 
  3031  0511                     	;# 
  3032  0515                     	;# 
  3033  0617                     	;# 
  3034  0618                     	;# 
  3035  0619                     	;# 
  3036  0619                     	;# 
  3037  061A                     	;# 
  3038  061B                     	;# 
  3039  061C                     	;# 
  3040  061C                     	;# 
  3041  0691                     	;# 
  3042  0692                     	;# 
  3043  0693                     	;# 
  3044  0694                     	;# 
  3045  0695                     	;# 
  3046  0696                     	;# 
  3047  0697                     	;# 
  3048  0698                     	;# 
  3049  0699                     	;# 
  3050  069A                     	;# 
  3051  069B                     	;# 
  3052  069C                     	;# 
  3053  069D                     	;# 
  3054  069E                     	;# 
  3055  069F                     	;# 
  3056  0E0F                     	;# 
  3057  0E10                     	;# 
  3058  0E11                     	;# 
  3059  0E12                     	;# 
  3060  0E13                     	;# 
  3061  0E14                     	;# 
  3062  0E15                     	;# 
  3063  0E17                     	;# 
  3064  0E20                     	;# 
  3065  0E21                     	;# 
  3066  0E22                     	;# 
  3067  0E24                     	;# 
  3068  0E25                     	;# 
  3069  0E28                     	;# 
  3070  0E29                     	;# 
  3071  0E2A                     	;# 
  3072  0E2B                     	;# 
  3073  0E90                     	;# 
  3074  0E91                     	;# 
  3075  0E92                     	;# 
  3076  0E94                     	;# 
  3077  0E95                     	;# 
  3078  0EA0                     	;# 
  3079  0EA1                     	;# 
  3080  0EA2                     	;# 
  3081  0EA3                     	;# 
  3082  0EA4                     	;# 
  3083  0EA5                     	;# 
  3084  0F0F                     	;# 
  3085  0F10                     	;# 
  3086  0F11                     	;# 
  3087  0F12                     	;# 
  3088  0F13                     	;# 
  3089  0F14                     	;# 
  3090  0F15                     	;# 
  3091  0F16                     	;# 
  3092  0F17                     	;# 
  3093  0F18                     	;# 
  3094  0F19                     	;# 
  3095  0F1A                     	;# 
  3096  0F1B                     	;# 
  3097  0F1C                     	;# 
  3098  0F1D                     	;# 
  3099  0F1E                     	;# 
  3100  0F1F                     	;# 
  3101  0F20                     	;# 
  3102  0F21                     	;# 
  3103  0F22                     	;# 
  3104  0F23                     	;# 
  3105  0F24                     	;# 
  3106  0F25                     	;# 
  3107  0F26                     	;# 
  3108  0F27                     	;# 
  3109  0F28                     	;# 
  3110  0F29                     	;# 
  3111  0F2A                     	;# 
  3112  0F2B                     	;# 
  3113  0F2C                     	;# 
  3114  0F2D                     	;# 
  3115  0FE4                     	;# 
  3116  0FE5                     	;# 
  3117  0FE6                     	;# 
  3118  0FE7                     	;# 
  3119  0FE8                     	;# 
  3120  0FE9                     	;# 
  3121  0FEA                     	;# 
  3122  0FEB                     	;# 
  3123  0FED                     	;# 
  3124  0FEE                     	;# 
  3125  0FEF                     	;# 
  3126                           
  3127 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3128  0000                     
  3129 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3130  0000                     
  3131 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3132  0000                     
  3133                           	psect	idataBANK2
  3134  0DC7                     __pidataBANK2:
  3135                           
  3136                           ;initializer for stoa@F1131
  3137  0DC7  3428               	retlw	40
  3138  0DC8  346E               	retlw	110
  3139  0DC9  3475               	retlw	117
  3140  0DCA  346C               	retlw	108
  3141  0DCB  346C               	retlw	108
  3142  0DCC  3429               	retlw	41
  3143  0DCD  3400               	retlw	0
  3144                           
  3145                           ;initializer for main@F4566
  3146  0DCE  3403               	retlw	3
  3147  0DCF  3400               	retlw	0
  3148  0DD0  3400               	retlw	0
  3149  0DD1  3400               	retlw	0
  3150  0DD2  3400               	retlw	0
  3151  0DD3  34FC               	retlw	252
  3152                           
  3153                           	psect	nvBANK1
  3154  00EA                     __pnvBANK1:
  3155  00EA                     _freqMin:
  3156  00EA                     	ds	4
  3157                           
  3158                           	psect	nvBANK2
  3159  0152                     __pnvBANK2:
  3160  0152                     _peakMin:
  3161  0152                     	ds	4
  3162  0156                     _CCP1_CallBack:
  3163  0156                     	ds	2
  3164  0158                     _timer1ReloadVal:
  3165  0158                     	ds	2
  3166  015A                     _EUSART_ErrorHandler:
  3167  015A                     	ds	2
  3168  015C                     _EUSART_OverrunErrorHandler:
  3169  015C                     	ds	2
  3170  015E                     _EUSART_FramingErrorHandler:
  3171  015E                     	ds	2
  3172  000C                     _PORTAbits	set	12
  3173  001C                     _T2CONbits	set	28
  3174  001C                     _T2CON	set	28
  3175  001A                     _TMR2	set	26
  3176  001B                     _PR2	set	27
  3177  0019                     _T1GCONbits	set	25
  3178  0018                     _T1CONbits	set	24
  3179  0018                     _T1CON	set	24
  3180  0016                     _TMR1L	set	22
  3181  0017                     _TMR1H	set	23
  3182  0019                     _T1GCON	set	25
  3183  000B                     _INTCONbits	set	11
  3184  0011                     _PIR1bits	set	17
  3185  009D                     _ADCON0bits	set	157
  3186  009D                     _ADCON0	set	157
  3187  009C                     _ADRESH	set	156
  3188  009B                     _ADRESL	set	155
  3189  009F                     _ADCON2	set	159
  3190  009E                     _ADCON1	set	158
  3191  0095                     _OPTION_REGbits	set	149
  3192  008E                     _TRISC	set	142
  3193  008C                     _TRISA	set	140
  3194  0097                     _WDTCON	set	151
  3195  0098                     _OSCTUNE	set	152
  3196  009A                     _OSCSTAT	set	154
  3197  0099                     _OSCCON	set	153
  3198  0091                     _PIE1bits	set	145
  3199  010C                     _LATAbits	set	268
  3200  010E                     _LATC	set	270
  3201  010C                     _LATA	set	268
  3202  0116                     _BORCON	set	278
  3203  0115                     _CMOUTbits	set	277
  3204  0114                     _CM2CON1	set	276
  3205  0113                     _CM2CON0	set	275
  3206  018C                     _ANSELA	set	396
  3207  018E                     _ANSELC	set	398
  3208  019A                     _TX1REG	set	410
  3209  0199                     _RC1REG	set	409
  3210  019D                     _RC1STAbits	set	413
  3211  019E                     _TX1STAbits	set	414
  3212  019C                     _SP1BRGH	set	412
  3213  019B                     _SP1BRGL	set	411
  3214  019E                     _TX1STA	set	414
  3215  019D                     _RC1STA	set	413
  3216  019F                     _BAUD1CON	set	415
  3217  020E                     _WPUC	set	526
  3218  020C                     _WPUA	set	524
  3219  0292                     _CCPR1H	set	658
  3220  0291                     _CCPR1L	set	657
  3221  0293                     _CCP1CON	set	659
  3222  028E                     _ODCONC	set	654
  3223  028C                     _ODCONA	set	652
  3224  030E                     _SLRCONC	set	782
  3225  030C                     _SLRCONA	set	780
  3226  038E                     _INLVLC	set	910
  3227  038C                     _INLVLA	set	908
  3228  0515                     _OPA2CON	set	1301
  3229  0E14                     _CCP1PPS	set	3604
  3230  0E28                     _CLCIN0PPS	set	3624
  3231  0E12                     _T1CKIPPS	set	3602
  3232  0E92                     _RA2PPS	set	3730
  3233  0E91                     _RA1PPS	set	3729
  3234  0E94                     _RA4PPS	set	3732
  3235  0F1A                     _CLC2CONbits	set	3866
  3236  0F1A                     _CLC2CON	set	3866
  3237  0F23                     _CLC2GLS3	set	3875
  3238  0F22                     _CLC2GLS2	set	3874
  3239  0F21                     _CLC2GLS1	set	3873
  3240  0F20                     _CLC2GLS0	set	3872
  3241  0F1F                     _CLC2SEL3	set	3871
  3242  0F1E                     _CLC2SEL2	set	3870
  3243  0F1D                     _CLC2SEL1	set	3869
  3244  0F1C                     _CLC2SEL0	set	3868
  3245  0F1B                     _CLC2POL	set	3867
  3246                           
  3247                           	psect	stringtext1
  3248  07F9                     __pstringtext1:
  3249  07F9                     STR_3:
  3250  07F9  3450               	retlw	80	;'P'
  3251  07FA  3465               	retlw	101	;'e'
  3252  07FB  3461               	retlw	97	;'a'
  3253  07FC  346B               	retlw	107	;'k'
  3254  07FD  3420               	retlw	32	;' '
  3255  07FE  343D               	retlw	61	;'='
  3256  07FF  3420               	retlw	32	;' '
  3257  0800  3425               	retlw	37	;'%'
  3258  0801  3475               	retlw	117	;'u'
  3259  0802  3420               	retlw	32	;' '
  3260  0803  3444               	retlw	68	;'D'
  3261  0804  3469               	retlw	105	;'i'
  3262  0805  3466               	retlw	102	;'f'
  3263  0806  3466               	retlw	102	;'f'
  3264  0807  3420               	retlw	32	;' '
  3265  0808  343D               	retlw	61	;'='
  3266  0809  3420               	retlw	32	;' '
  3267  080A  3425               	retlw	37	;'%'
  3268  080B  346C               	retlw	108	;'l'
  3269  080C  3475               	retlw	117	;'u'
  3270  080D  3420               	retlw	32	;' '
  3271  080E  3425               	retlw	37	;'%'
  3272  080F  346C               	retlw	108	;'l'
  3273  0810  3475               	retlw	117	;'u'
  3274  0811  3425               	retlw	37	;'%'
  3275  0812  3425               	retlw	37	;'%'
  3276  0813  342C               	retlw	44	;','
  3277  0814  3420               	retlw	32	;' '
  3278  0815  344C               	retlw	76	;'L'
  3279  0816  3443               	retlw	67	;'C'
  3280  0817  3420               	retlw	32	;' '
  3281  0818  343D               	retlw	61	;'='
  3282  0819  3420               	retlw	32	;' '
  3283  081A  3425               	retlw	37	;'%'
  3284  081B  3475               	retlw	117	;'u'
  3285  081C  3420               	retlw	32	;' '
  3286  081D  3446               	retlw	70	;'F'
  3287  081E  3472               	retlw	114	;'r'
  3288  081F  3465               	retlw	101	;'e'
  3289  0820  3471               	retlw	113	;'q'
  3290  0821  3420               	retlw	32	;' '
  3291  0822  343D               	retlw	61	;'='
  3292  0823  3420               	retlw	32	;' '
  3293  0824  3425               	retlw	37	;'%'
  3294  0825  346C               	retlw	108	;'l'
  3295  0826  3475               	retlw	117	;'u'
  3296  0827  3420               	retlw	32	;' '
  3297  0828  3448               	retlw	72	;'H'
  3298  0829  347A               	retlw	122	;'z'
  3299  082A  3420               	retlw	32	;' '
  3300  082B  3444               	retlw	68	;'D'
  3301  082C  3469               	retlw	105	;'i'
  3302  082D  3466               	retlw	102	;'f'
  3303  082E  3466               	retlw	102	;'f'
  3304  082F  3420               	retlw	32	;' '
  3305  0830  343D               	retlw	61	;'='
  3306  0831  3420               	retlw	32	;' '
  3307  0832  3425               	retlw	37	;'%'
  3308  0833  346C               	retlw	108	;'l'
  3309  0834  3475               	retlw	117	;'u'
  3310  0835  3420               	retlw	32	;' '
  3311  0836  3425               	retlw	37	;'%'
  3312  0837  346C               	retlw	108	;'l'
  3313  0838  3475               	retlw	117	;'u'
  3314  0839  3425               	retlw	37	;'%'
  3315  083A  3425               	retlw	37	;'%'
  3316  083B  340D               	retlw	13
  3317  083C  340A               	retlw	10
  3318  083D  3400               	retlw	0
  3319                           
  3320                           	psect	stringtext2
  3321  083E                     __pstringtext2:
  3322  083E                     STR_1:
  3323  083E  344C               	retlw	76	;'L'
  3324  083F  3443               	retlw	67	;'C'
  3325  0840  3420               	retlw	32	;' '
  3326  0841  344D               	retlw	77	;'M'
  3327  0842  3465               	retlw	101	;'e'
  3328  0843  3474               	retlw	116	;'t'
  3329  0844  3465               	retlw	101	;'e'
  3330  0845  3472               	retlw	114	;'r'
  3331  0846  3420               	retlw	32	;' '
  3332  0847  3456               	retlw	86	;'V'
  3333  0848  3465               	retlw	101	;'e'
  3334  0849  3472               	retlw	114	;'r'
  3335  084A  3473               	retlw	115	;'s'
  3336  084B  3469               	retlw	105	;'i'
  3337  084C  346F               	retlw	111	;'o'
  3338  084D  346E               	retlw	110	;'n'
  3339  084E  3420               	retlw	32	;' '
  3340  084F  3431               	retlw	49	;'1'
  3341  0850  342E               	retlw	46	;'.'
  3342  0851  3431               	retlw	49	;'1'
  3343  0852  3420               	retlw	32	;' '
  3344  0853  3425               	retlw	37	;'%'
  3345  0854  3473               	retlw	115	;'s'
  3346  0855  340D               	retlw	13
  3347  0856  340A               	retlw	10
  3348  0857  3400               	retlw	0
  3349                           
  3350                           	psect	stringtext3
  3351  0858                     __pstringtext3:
  3352  0858                     STR_2:
  3353  0858  3453               	retlw	83	;'S'
  3354  0859  3465               	retlw	101	;'e'
  3355  085A  3470               	retlw	112	;'p'
  3356  085B  3420               	retlw	32	;' '
  3357  085C  3420               	retlw	32	;' '
  3358  085D  3434               	retlw	52	;'4'
  3359  085E  3420               	retlw	32	;' '
  3360  085F  3432               	retlw	50	;'2'
  3361  0860  3430               	retlw	48	;'0'
  3362  0861  3432               	retlw	50	;'2'
  3363  0862  3430               	retlw	48	;'0'
  3364  0863  3400               	retlw	0
  3365                           
  3366                           	psect	stringtext4
  3367  0864                     __pstringtext4:
  3368  0864                     STR_4:
  3369  0864  346C               	retlw	108	;'l'
  3370  0865  3475               	retlw	117	;'u'
  3371  0866  3400               	retlw	0
  3372                           
  3373                           	psect	stringtext5
  3374  0000                     __pstringtext5:
  3375  0864                     
  3376                           	psect	cinit
  3377  001B                     start_initialization:	
  3378                           ; #config settings
  3379                           
  3380  001B                     __initialization:
  3381                           
  3382                           ; Initialize objects allocated to BANK2
  3383  001B  30C7               	movlw	low __pidataBANK2
  3384  001C  0084               	movwf	4
  3385  001D  308D               	movlw	(high __pidataBANK2)| (0+128)
  3386  001E  0085               	movwf	5
  3387  001F  3060               	movlw	low __pdataBANK2
  3388  0020  0086               	movwf	6
  3389  0021  3001               	movlw	high __pdataBANK2
  3390  0022  0087               	movwf	7
  3391  0023  300D               	movlw	13
  3392  0024  318D  2569  3180   	fcall	init_ram
  3393                           
  3394                           ; Clear objects allocated to COMMON
  3395  0027  01F6               	clrf	__pbssCOMMON& (0+127)
  3396  0028  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  3397  0029  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  3398  002A  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  3399  002B  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  3400                           
  3401                           ; Clear objects allocated to BANK1
  3402  002C  30CE               	movlw	low __pbssBANK1
  3403  002D  0084               	movwf	4
  3404  002E  3000               	movlw	high __pbssBANK1
  3405  002F  0085               	movwf	5
  3406  0030  301C               	movlw	28
  3407  0031  318D  2563  3180   	fcall	clear_ram0
  3408                           
  3409                           ; Clear objects allocated to BANK2
  3410  0034  3020               	movlw	low __pbssBANK2
  3411  0035  0084               	movwf	4
  3412  0036  3001               	movlw	high __pbssBANK2
  3413  0037  0085               	movwf	5
  3414  0038  3032               	movlw	50
  3415  0039  318D  2563  3180   	fcall	clear_ram0
  3416  003C                     end_of_initialization:	
  3417                           ;End of C runtime variable initialization code
  3418                           
  3419  003C                     __end_of__initialization:
  3420  003C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3421  003D  0020               	movlb	0
  3422  003E  3180  2840         	ljmp	_main	;jump to C main() function
  3423                           
  3424                           	psect	bssCOMMON
  3425  0076                     __pbssCOMMON:
  3426  0076                     _prec:
  3427  0076                     	ds	2
  3428  0078                     _flags:
  3429  0078                     	ds	2
  3430  007A                     _eusartRxLastError:
  3431  007A                     	ds	1
  3432                           
  3433                           	psect	bssBANK1
  3434  00CE                     __pbssBANK1:
  3435  00CE                     _LCMeas:
  3436  00CE                     	ds	16
  3437  00DE                     _nout:
  3438  00DE                     	ds	2
  3439  00E0                     _width:
  3440  00E0                     	ds	2
  3441  00E2                     _peakMax:
  3442  00E2                     	ds	4
  3443  00E6                     _freqMax:
  3444  00E6                     	ds	4
  3445                           
  3446                           	psect	bssBANK2
  3447  0120                     __pbssBANK2:
  3448  0120                     _peakPercent:
  3449  0120                     	ds	4
  3450  0124                     _peakDiff:
  3451  0124                     	ds	4
  3452  0128                     _freqPercent:
  3453  0128                     	ds	4
  3454  012C                     _freqDiff:
  3455  012C                     	ds	4
  3456  0130                     _ADC_InterruptHandler:
  3457  0130                     	ds	2
  3458  0132                     _dbuf:
  3459  0132                     	ds	32
  3460                           
  3461                           	psect	dataBANK2
  3462  0160                     __pdataBANK2:
  3463  0160                     stoa@F1131:
  3464  0160                     	ds	7
  3465  0167                     main@F4566:
  3466  0167                     	ds	6
  3467                           
  3468                           	psect	inittext
  3469  0D69                     init_ram:
  3470  0D69  00FE               	movwf	btemp
  3471  0D6A                     initloop:
  3472  0D6A  0012               	moviw fsr0++
  3473  0D6B  001E               	movwi fsr1++
  3474  0D6C  0BFE               	decfsz	btemp,f
  3475  0D6D  2D6A               	goto	initloop
  3476  0D6E  3400               	retlw	0
  3477                           
  3478                           	psect	clrtext
  3479  0D63                     clear_ram0:	
  3480                           ;	Called with FSR0 containing the base address, and
  3481                           ;	WREG with the size to clear
  3482                           
  3483  0D63  0064               	clrwdt	;clear the watchdog before getting into this loop
  3484  0D64                     clrloop0:
  3485  0D64  0180               	clrf	0	;clear RAM location pointed to by FSR
  3486  0D65  3101               	addfsr 0,1
  3487  0D66  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3488  0D67  2D64               	goto	clrloop0	;have we reached the end yet?
  3489  0D68  3400               	retlw	0	;all done for this memory range, return
  3490                           
  3491                           	psect	cstackBANK1
  3492  00A0                     __pcstackBANK1:
  3493  00A0                     ??_vfprintf:
  3494                           
  3495                           ; 1 bytes @ 0x0
  3496  00A0                     	ds	2
  3497  00A2                     vfprintf@fp:
  3498                           
  3499                           ; 1 bytes @ 0x2
  3500  00A2                     	ds	1
  3501  00A3                     vfprintf@cfmt:
  3502                           
  3503                           ; 2 bytes @ 0x3
  3504  00A3                     	ds	2
  3505  00A5                     ?_printf:
  3506  00A5                     printf@fmt:	
  3507                           ; 2 bytes @ 0x5
  3508                           
  3509                           
  3510                           ; 2 bytes @ 0x5
  3511  00A5                     	ds	28
  3512  00C1                     printf@ap:
  3513                           
  3514                           ; 1 bytes @ 0x21
  3515  00C1                     	ds	1
  3516  00C2                     ??_main:
  3517                           
  3518                           ; 1 bytes @ 0x22
  3519  00C2                     	ds	4
  3520  00C6                     main@dataVisualizer:
  3521                           
  3522                           ; 6 bytes @ 0x26
  3523  00C6                     	ds	6
  3524  00CC                     main@i:
  3525                           
  3526                           ; 1 bytes @ 0x2C
  3527  00CC                     	ds	1
  3528  00CD                     main@button:
  3529                           
  3530                           ; 1 bytes @ 0x2D
  3531  00CD                     	ds	1
  3532                           
  3533                           	psect	cstackCOMMON
  3534  0070                     __pcstackCOMMON:
  3535  0070                     ?_CCP1_CaptureISR:
  3536  0070                     ?_PIN_MANAGER_Initialize:	
  3537                           ; 1 bytes @ 0x0
  3538                           
  3539  0070                     ?_OSCILLATOR_Initialize:	
  3540                           ; 1 bytes @ 0x0
  3541                           
  3542  0070                     ?_WDT_Initialize:	
  3543                           ; 1 bytes @ 0x0
  3544                           
  3545  0070                     ?_ADC_Initialize:	
  3546                           ; 1 bytes @ 0x0
  3547                           
  3548  0070                     ?_CCP1_Initialize:	
  3549                           ; 1 bytes @ 0x0
  3550                           
  3551  0070                     ?_CLC2_Initialize:	
  3552                           ; 1 bytes @ 0x0
  3553                           
  3554  0070                     ?_TMR2_Initialize:	
  3555                           ; 1 bytes @ 0x0
  3556                           
  3557  0070                     ?_TMR1_Initialize:	
  3558                           ; 1 bytes @ 0x0
  3559                           
  3560  0070                     ?_CCP1_ISR_CallBack:	
  3561                           ; 1 bytes @ 0x0
  3562                           
  3563  0070                     ?_EUSART_Initialize:	
  3564                           ; 1 bytes @ 0x0
  3565                           
  3566  0070                     ?_EUSART_Write:	
  3567                           ; 1 bytes @ 0x0
  3568                           
  3569  0070                     ?_putch:	
  3570                           ; 1 bytes @ 0x0
  3571                           
  3572  0070                     ?_CMP2_Initialize:	
  3573                           ; 1 bytes @ 0x0
  3574                           
  3575  0070                     ?_INTERRUPT_InterruptManager:	
  3576                           ; 1 bytes @ 0x0
  3577                           
  3578  0070                     ?_OPA2_Initialize:	
  3579                           ; 1 bytes @ 0x0
  3580                           
  3581  0070                     ?_SYSTEM_Initialize:	
  3582                           ; 1 bytes @ 0x0
  3583                           
  3584  0070                     ?_ADC_SelectChannel:	
  3585                           ; 1 bytes @ 0x0
  3586                           
  3587  0070                     ?_main:	
  3588                           ; 1 bytes @ 0x0
  3589                           
  3590  0070                     CCP1_ISR_CallBack@capturedValue:	
  3591                           ; 1 bytes @ 0x0
  3592                           
  3593                           
  3594                           ; 2 bytes @ 0x0
  3595  0070                     	ds	2
  3596  0072                     ??_CCP1_ISR_CallBack:
  3597                           
  3598                           ; 1 bytes @ 0x2
  3599  0072                     	ds	1
  3600  0073                     ??_CCP1_CaptureISR:
  3601                           
  3602                           ; 1 bytes @ 0x3
  3603  0073                     	ds	1
  3604  0074                     CCP1_CaptureISR@module:
  3605                           
  3606                           ; 2 bytes @ 0x4
  3607  0074                     	ds	2
  3608  0076                     ??_INTERRUPT_InterruptManager:
  3609                           
  3610                           	psect	cstackBANK0
  3611  0020                     __pcstackBANK0:	
  3612                           ; 1 bytes @ 0x6
  3613                           
  3614  0020                     ?_EUSART_SetFramingErrorHandler:
  3615  0020                     ?_EUSART_SetOverrunErrorHandler:	
  3616                           ; 1 bytes @ 0x0
  3617                           
  3618  0020                     ?_EUSART_SetErrorHandler:	
  3619                           ; 1 bytes @ 0x0
  3620                           
  3621  0020                     ??_PIN_MANAGER_Initialize:	
  3622                           ; 1 bytes @ 0x0
  3623                           
  3624  0020                     ??_OSCILLATOR_Initialize:	
  3625                           ; 1 bytes @ 0x0
  3626                           
  3627  0020                     ??_WDT_Initialize:	
  3628                           ; 1 bytes @ 0x0
  3629                           
  3630  0020                     ??_ADC_Initialize:	
  3631                           ; 1 bytes @ 0x0
  3632                           
  3633  0020                     ??_CLC2_Initialize:	
  3634                           ; 1 bytes @ 0x0
  3635                           
  3636  0020                     ??_TMR2_Initialize:	
  3637                           ; 1 bytes @ 0x0
  3638                           
  3639  0020                     ??_TMR1_Initialize:	
  3640                           ; 1 bytes @ 0x0
  3641                           
  3642  0020                     ?_CCP1_SetCallBack:	
  3643                           ; 1 bytes @ 0x0
  3644                           
  3645  0020                     ??_EUSART_Write:	
  3646                           ; 1 bytes @ 0x0
  3647                           
  3648  0020                     ??_CMP2_Initialize:	
  3649                           ; 1 bytes @ 0x0
  3650                           
  3651  0020                     ??_OPA2_Initialize:	
  3652                           ; 1 bytes @ 0x0
  3653                           
  3654  0020                     ??_ADC_SelectChannel:	
  3655                           ; 1 bytes @ 0x0
  3656                           
  3657  0020                     ?_strlen:	
  3658                           ; 1 bytes @ 0x0
  3659                           
  3660  0020                     ?_strncmp:	
  3661                           ; 2 bytes @ 0x0
  3662                           
  3663  0020                     ?_ADC_GetConversionResult:	
  3664                           ; 2 bytes @ 0x0
  3665                           
  3666  0020                     ?___lmul:	
  3667                           ; 2 bytes @ 0x0
  3668                           
  3669  0020                     ?___lodiv:	
  3670                           ; 4 bytes @ 0x0
  3671                           
  3672  0020                     ?___lomod:	
  3673                           ; 8 bytes @ 0x0
  3674                           
  3675  0020                     EUSART_Write@txData:	
  3676                           ; 8 bytes @ 0x0
  3677                           
  3678  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3679                           ; 1 bytes @ 0x0
  3680                           
  3681  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3682                           ; 2 bytes @ 0x0
  3683                           
  3684  0020                     EUSART_SetErrorHandler@interruptHandler:	
  3685                           ; 2 bytes @ 0x0
  3686                           
  3687  0020                     CCP1_SetCallBack@customCallBack:	
  3688                           ; 2 bytes @ 0x0
  3689                           
  3690  0020                     strlen@s:	
  3691                           ; 2 bytes @ 0x0
  3692                           
  3693  0020                     strncmp@_l:	
  3694                           ; 2 bytes @ 0x0
  3695                           
  3696  0020                     ___lmul@multiplier:	
  3697                           ; 2 bytes @ 0x0
  3698                           
  3699  0020                     ___lodiv@divisor:	
  3700                           ; 4 bytes @ 0x0
  3701                           
  3702  0020                     ___lomod@divisor:	
  3703                           ; 8 bytes @ 0x0
  3704                           
  3705                           
  3706                           ; 8 bytes @ 0x0
  3707  0020                     	ds	1
  3708  0021                     ??_putch:
  3709  0021                     putch@txData:	
  3710                           ; 1 bytes @ 0x1
  3711                           
  3712  0021                     ADC_SelectChannel@channel:	
  3713                           ; 1 bytes @ 0x1
  3714                           
  3715                           
  3716                           ; 1 bytes @ 0x1
  3717  0021                     	ds	1
  3718  0022                     ??_EUSART_SetFramingErrorHandler:
  3719  0022                     ??_EUSART_SetOverrunErrorHandler:	
  3720                           ; 1 bytes @ 0x2
  3721                           
  3722  0022                     ??_EUSART_SetErrorHandler:	
  3723                           ; 1 bytes @ 0x2
  3724                           
  3725  0022                     ??_CCP1_Initialize:	
  3726                           ; 1 bytes @ 0x2
  3727                           
  3728  0022                     ??_CCP1_SetCallBack:	
  3729                           ; 1 bytes @ 0x2
  3730                           
  3731  0022                     ??_strlen:	
  3732                           ; 1 bytes @ 0x2
  3733                           
  3734  0022                     ??_EUSART_Initialize:	
  3735                           ; 1 bytes @ 0x2
  3736                           
  3737  0022                     ??_SYSTEM_Initialize:	
  3738                           ; 1 bytes @ 0x2
  3739                           
  3740  0022                     ??_ADC_GetConversionResult:	
  3741                           ; 1 bytes @ 0x2
  3742                           
  3743  0022                     ?_fputc:	
  3744                           ; 1 bytes @ 0x2
  3745                           
  3746  0022                     fputc@c:	
  3747                           ; 2 bytes @ 0x2
  3748                           
  3749  0022                     strncmp@_r:	
  3750                           ; 2 bytes @ 0x2
  3751                           
  3752                           
  3753                           ; 2 bytes @ 0x2
  3754  0022                     	ds	1
  3755  0023                     strlen@a:
  3756                           
  3757                           ; 2 bytes @ 0x3
  3758  0023                     	ds	1
  3759  0024                     fputc@fp:
  3760  0024                     strncmp@n:	
  3761                           ; 1 bytes @ 0x4
  3762                           
  3763  0024                     ___lmul@multiplicand:	
  3764                           ; 2 bytes @ 0x4
  3765                           
  3766                           
  3767                           ; 4 bytes @ 0x4
  3768  0024                     	ds	1
  3769  0025                     ??_fputc:
  3770                           
  3771                           ; 1 bytes @ 0x5
  3772  0025                     	ds	1
  3773  0026                     ??_strncmp:
  3774                           
  3775                           ; 1 bytes @ 0x6
  3776  0026                     	ds	1
  3777  0027                     strncmp@l:
  3778                           
  3779                           ; 2 bytes @ 0x7
  3780  0027                     	ds	1
  3781  0028                     ??___lmul:
  3782  0028                     ___lmul@product:	
  3783                           ; 1 bytes @ 0x8
  3784                           
  3785  0028                     ___lodiv@dividend:	
  3786                           ; 4 bytes @ 0x8
  3787                           
  3788  0028                     ___lomod@dividend:	
  3789                           ; 8 bytes @ 0x8
  3790                           
  3791                           
  3792                           ; 8 bytes @ 0x8
  3793  0028                     	ds	1
  3794  0029                     strncmp@r:
  3795                           
  3796                           ; 2 bytes @ 0x9
  3797  0029                     	ds	1
  3798  002A                     ?_fputs:
  3799  002A                     ?_stoa:	
  3800                           ; 2 bytes @ 0xA
  3801                           
  3802  002A                     fputs@fp:	
  3803                           ; 2 bytes @ 0xA
  3804                           
  3805  002A                     stoa@s:	
  3806                           ; 1 bytes @ 0xA
  3807                           
  3808                           
  3809                           ; 2 bytes @ 0xA
  3810  002A                     	ds	1
  3811  002B                     ??_fputs:
  3812                           
  3813                           ; 1 bytes @ 0xB
  3814  002B                     	ds	1
  3815  002C                     ??_stoa:
  3816  002C                     ?___lldiv:	
  3817                           ; 1 bytes @ 0xC
  3818                           
  3819  002C                     ___lldiv@divisor:	
  3820                           ; 4 bytes @ 0xC
  3821                           
  3822                           
  3823                           ; 4 bytes @ 0xC
  3824  002C                     	ds	2
  3825  002E                     fputs@c:
  3826                           
  3827                           ; 1 bytes @ 0xE
  3828  002E                     	ds	1
  3829  002F                     fputs@i:
  3830  002F                     stoa@nuls:	
  3831                           ; 2 bytes @ 0xF
  3832                           
  3833                           
  3834                           ; 7 bytes @ 0xF
  3835  002F                     	ds	1
  3836  0030                     ??___lodiv:
  3837  0030                     ??___lomod:	
  3838                           ; 1 bytes @ 0x10
  3839                           
  3840  0030                     ___lldiv@dividend:	
  3841                           ; 1 bytes @ 0x10
  3842                           
  3843                           
  3844                           ; 4 bytes @ 0x10
  3845  0030                     	ds	1
  3846  0031                     ___lomod@counter:
  3847  0031                     fputs@s:	
  3848                           ; 1 bytes @ 0x11
  3849                           
  3850  0031                     ___lodiv@quotient:	
  3851                           ; 1 bytes @ 0x11
  3852                           
  3853                           
  3854                           ; 8 bytes @ 0x11
  3855  0031                     	ds	1
  3856  0032                     ?_pad:
  3857  0032                     pad@buf:	
  3858                           ; 2 bytes @ 0x12
  3859                           
  3860                           
  3861                           ; 1 bytes @ 0x12
  3862  0032                     	ds	1
  3863  0033                     pad@p:
  3864                           
  3865                           ; 2 bytes @ 0x13
  3866  0033                     	ds	1
  3867  0034                     ??___lldiv:
  3868                           
  3869                           ; 1 bytes @ 0x14
  3870  0034                     	ds	1
  3871  0035                     ??_pad:
  3872  0035                     ___lldiv@quotient:	
  3873                           ; 1 bytes @ 0x15
  3874                           
  3875                           
  3876                           ; 4 bytes @ 0x15
  3877  0035                     	ds	1
  3878  0036                     pad@i:
  3879  0036                     stoa@i:	
  3880                           ; 2 bytes @ 0x16
  3881                           
  3882                           
  3883                           ; 2 bytes @ 0x16
  3884  0036                     	ds	2
  3885  0038                     pad@w:
  3886  0038                     stoa@w:	
  3887                           ; 2 bytes @ 0x18
  3888                           
  3889                           
  3890                           ; 2 bytes @ 0x18
  3891  0038                     	ds	1
  3892  0039                     ___lldiv@counter:
  3893  0039                     ___lodiv@counter:	
  3894                           ; 1 bytes @ 0x19
  3895                           
  3896                           
  3897                           ; 1 bytes @ 0x19
  3898  0039                     	ds	1
  3899  003A                     pad@fp:
  3900  003A                     stoa@cp:	
  3901                           ; 1 bytes @ 0x1A
  3902                           
  3903                           
  3904                           ; 2 bytes @ 0x1A
  3905  003A                     	ds	1
  3906  003B                     ?_utoa:
  3907  003B                     utoa@d:	
  3908                           ; 2 bytes @ 0x1B
  3909                           
  3910                           
  3911                           ; 8 bytes @ 0x1B
  3912  003B                     	ds	1
  3913  003C                     stoa@fp:
  3914                           
  3915                           ; 1 bytes @ 0x1C
  3916  003C                     	ds	1
  3917  003D                     stoa@p:
  3918                           
  3919                           ; 2 bytes @ 0x1D
  3920  003D                     	ds	2
  3921  003F                     stoa@l:
  3922                           
  3923                           ; 2 bytes @ 0x1F
  3924  003F                     	ds	4
  3925  0043                     ??_utoa:
  3926                           
  3927                           ; 1 bytes @ 0x23
  3928  0043                     	ds	1
  3929  0044                     utoa@p:
  3930                           
  3931                           ; 2 bytes @ 0x24
  3932  0044                     	ds	2
  3933  0046                     utoa@w:
  3934                           
  3935                           ; 2 bytes @ 0x26
  3936  0046                     	ds	2
  3937  0048                     utoa@fp:
  3938                           
  3939                           ; 1 bytes @ 0x28
  3940  0048                     	ds	1
  3941  0049                     utoa@n:
  3942                           
  3943                           ; 8 bytes @ 0x29
  3944  0049                     	ds	8
  3945  0051                     utoa@i:
  3946                           
  3947                           ; 2 bytes @ 0x31
  3948  0051                     	ds	2
  3949  0053                     ?_vfpfcnvrt:
  3950  0053                     vfpfcnvrt@fmt:	
  3951                           ; 2 bytes @ 0x33
  3952                           
  3953                           
  3954                           ; 1 bytes @ 0x33
  3955  0053                     	ds	1
  3956  0054                     vfpfcnvrt@ap:
  3957                           
  3958                           ; 1 bytes @ 0x34
  3959  0054                     	ds	1
  3960  0055                     ??_vfpfcnvrt:
  3961                           
  3962                           ; 1 bytes @ 0x35
  3963  0055                     	ds	12
  3964  0061                     vfpfcnvrt@cp:
  3965                           
  3966                           ; 2 bytes @ 0x41
  3967  0061                     	ds	2
  3968  0063                     vfpfcnvrt@llu:
  3969                           
  3970                           ; 8 bytes @ 0x43
  3971  0063                     	ds	8
  3972  006B                     vfpfcnvrt@fp:
  3973                           
  3974                           ; 1 bytes @ 0x4B
  3975  006B                     	ds	1
  3976  006C                     ?_vfprintf:
  3977  006C                     vfprintf@fmt:	
  3978                           ; 2 bytes @ 0x4C
  3979                           
  3980                           
  3981                           ; 2 bytes @ 0x4C
  3982  006C                     	ds	2
  3983  006E                     vfprintf@ap:
  3984                           
  3985                           ; 1 bytes @ 0x4E
  3986  006E                     	ds	1
  3987  006F                     ??_printf:
  3988                           
  3989                           ; 1 bytes @ 0x4F
  3990  006F                     	ds	1
  3991                           
  3992                           	psect	maintext
  3993  0040                     __pmaintext:	
  3994 ;;
  3995 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3996 ;;
  3997 ;; *************** function _main *****************
  3998 ;; Defined at:
  3999 ;;		line 54 in file "main.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;		None
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  dataVisualiz    6   38[BANK1 ] unsigned char [6]
  4004 ;;  button          1   45[BANK1 ] struct buttonS
  4005 ;;  i               1   44[BANK1 ] unsigned char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      void 
  4008 ;; Registers used:
  4009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : B1F/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4015 ;;      Params:         0       0       0       0       0       0       0       0
  4016 ;;      Locals:         0       0       8       0       0       0       0       0
  4017 ;;      Temps:          0       0       4       0       0       0       0       0
  4018 ;;      Totals:         0       0      12       0       0       0       0       0
  4019 ;;Total ram usage:       12 bytes
  4020 ;; Hardware stack levels required when called:   12
  4021 ;; This function calls:
  4022 ;;		_ADC_GetConversionResult
  4023 ;;		_ADC_SelectChannel
  4024 ;;		_EUSART_Write
  4025 ;;		_SYSTEM_Initialize
  4026 ;;		___lldiv
  4027 ;;		___lmul
  4028 ;;		_printf
  4029 ;; This function is called by:
  4030 ;;		Startup code after reset
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           
  4035                           ;psect for function _main
  4036  0040                     _main:
  4037  0040                     l2255:	
  4038                           ;incstack = 0
  4039                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4040                           
  4041                           
  4042                           ;main.c: 56:     SYSTEM_Initialize();
  4043  0040  318E  265E  3180   	fcall	_SYSTEM_Initialize
  4044                           
  4045                           ;main.c: 57:     ADC_SelectChannel(PEAK);
  4046  0043  3006               	movlw	6
  4047  0044  318D  25D4  3180   	fcall	_ADC_SelectChannel
  4048  0047                     l2257:
  4049                           
  4050                           ;main.c: 63:     (INTCONbits.GIE = 1);
  4051  0047  178B               	bsf	11,7	;volatile
  4052  0048                     l2259:
  4053                           
  4054                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  4055  0048  170B               	bsf	11,6	;volatile
  4056  0049                     l2261:
  4057                           
  4058                           ;main.c: 73:     freqMin = 0xFFFFFFFF;
  4059  0049  30FF               	movlw	255
  4060  004A  0021               	movlb	1	; select bank1
  4061  004B  00ED               	movwf	(_freqMin+3)^(0+128)
  4062  004C  30FF               	movlw	255
  4063  004D  00EC               	movwf	(_freqMin+2)^(0+128)
  4064  004E  30FF               	movlw	255
  4065  004F  00EB               	movwf	(_freqMin+1)^(0+128)
  4066  0050  30FF               	movlw	255
  4067  0051  00EA               	movwf	_freqMin^(0+128)
  4068  0052                     l2263:
  4069                           
  4070                           ;main.c: 74:     freqMax = 0;
  4071  0052  3000               	movlw	0
  4072  0053  00E9               	movwf	(_freqMax+3)^(0+128)
  4073  0054  3000               	movlw	0
  4074  0055  00E8               	movwf	(_freqMax+2)^(0+128)
  4075  0056  3000               	movlw	0
  4076  0057  00E7               	movwf	(_freqMax+1)^(0+128)
  4077  0058  3000               	movlw	0
  4078  0059  00E6               	movwf	_freqMax^(0+128)
  4079  005A                     l2265:
  4080                           
  4081                           ;main.c: 75:     peakMin = 0xFFFFFFFF;
  4082  005A  30FF               	movlw	255
  4083  005B  0022               	movlb	2	; select bank2
  4084  005C  00D5               	movwf	(_peakMin+3)^(0+256)
  4085  005D  30FF               	movlw	255
  4086  005E  00D4               	movwf	(_peakMin+2)^(0+256)
  4087  005F  30FF               	movlw	255
  4088  0060  00D3               	movwf	(_peakMin+1)^(0+256)
  4089  0061  30FF               	movlw	255
  4090  0062  00D2               	movwf	_peakMin^(0+256)
  4091  0063                     l2267:
  4092                           
  4093                           ;main.c: 76:     peakMax = 0;
  4094  0063  3000               	movlw	0
  4095  0064  0021               	movlb	1	; select bank1
  4096  0065  00E5               	movwf	(_peakMax+3)^(0+128)
  4097  0066  3000               	movlw	0
  4098  0067  00E4               	movwf	(_peakMax+2)^(0+128)
  4099  0068  3000               	movlw	0
  4100  0069  00E3               	movwf	(_peakMax+1)^(0+128)
  4101  006A  3000               	movlw	0
  4102  006B  00E2               	movwf	_peakMax^(0+128)
  4103  006C                     l2269:
  4104                           
  4105                           ;main.c: 78:     printf("LC Meter Version 1.1 %s\r\n", "Sep  4 2020");
  4106  006C  303E               	movlw	low (STR_1| (0+32768))
  4107  006D  00A5               	movwf	printf@fmt^(0+128)
  4108  006E  3088               	movlw	high (STR_1| (0+32768))
  4109  006F  00A6               	movwf	(printf@fmt^(0+128)+1)
  4110  0070  3058               	movlw	low (STR_2| (0+32768))
  4111  0071  00A7               	movwf	(low ((?_printf| 0+2)))^(0+128)
  4112  0072  3088               	movlw	high (STR_2| (0+32768))
  4113  0073  00A8               	movwf	((low ((?_printf| 0+2)))^(0+128)+1)
  4114  0074  318E  262E  3180   	fcall	_printf
  4115  0077                     l2271:
  4116                           
  4117                           ;main.c: 80:     uint8_t i, dataVisualizer[] = {0x03, 0x00, 0x00, 0x00, 0x00, 0xFC};
  4118  0077  3067               	movlw	low main@F4566
  4119  0078  0086               	movwf	6
  4120  0079  3001               	movlw	high main@F4566
  4121  007A  0087               	movwf	7
  4122  007B  30C6               	movlw	low main@dataVisualizer
  4123  007C  0084               	movwf	4
  4124  007D  3000               	movlw	high main@dataVisualizer
  4125  007E  0085               	movwf	5
  4126  007F  3006               	movlw	6
  4127  0080  0021               	movlb	1	; select bank1
  4128  0081  00C2               	movwf	??_main^(0+128)
  4129  0082                     u1480:
  4130  0082  0016               	moviw fsr1++
  4131  0083  001A               	movwi fsr0++
  4132  0084  0BC2               	decfsz	??_main^(0+128),f
  4133  0085  2882               	goto	u1480
  4134  0086                     l2273:
  4135                           
  4136                           ;main.c: 85:     } button;;main.c: 87:     button.mode = 0;
  4137  0086  10CD               	bcf	main@button^(0+128),1
  4138  0087                     l2275:
  4139                           
  4140                           ;main.c: 88:     button.state = 1;
  4141  0087  144D               	bsf	main@button^(0+128),0
  4142  0088                     l2277:
  4143                           
  4144                           ;main.c: 91:         if (LCMeas.sample == 1) {
  4145  0088  0021               	movlb	1	; select bank1
  4146  0089  1C5B               	btfss	(_LCMeas^(0+128)+13),0
  4147  008A  288C               	goto	u1491
  4148  008B  288D               	goto	u1490
  4149  008C                     u1491:
  4150  008C  2888               	goto	l2277
  4151  008D                     u1490:
  4152  008D                     l433:	
  4153                           ;main.c: 92:             do { LATAbits.LATA5 = 1; } while(0);
  4154                           
  4155  008D  0022               	movlb	2	; select bank2
  4156  008E  168C               	bsf	12,5	;volatile
  4157  008F                     l2279:
  4158                           
  4159                           ;main.c: 93:             if (PORTAbits.RA3 != button.state) {
  4160  008F  0021               	movlb	1	; select bank1
  4161  0090  184D               	btfsc	main@button^(0+128),0
  4162  0091  2893               	goto	u1501
  4163  0092  2895               	goto	u1500
  4164  0093                     u1501:
  4165  0093  3001               	movlw	1
  4166  0094  2896               	goto	u1502
  4167  0095                     u1500:
  4168  0095  3000               	movlw	0
  4169  0096                     u1502:
  4170  0096  00C2               	movwf	??_main^(0+128)
  4171  0097  0020               	movlb	0	; select bank0
  4172  0098  198C               	btfsc	12,3	;volatile
  4173  0099  289B               	goto	u1511
  4174  009A  289D               	goto	u1510
  4175  009B                     u1511:
  4176  009B  3001               	movlw	1
  4177  009C  289E               	goto	u1512
  4178  009D                     u1510:
  4179  009D  3000               	movlw	0
  4180  009E                     u1512:
  4181  009E  0021               	movlb	1	; select bank1
  4182  009F  0642               	xorwf	??_main^(0+128),w
  4183  00A0  1903               	skipnz
  4184  00A1  28A3               	goto	u1521
  4185  00A2  28A4               	goto	u1520
  4186  00A3                     u1521:
  4187  00A3  28BD               	goto	l2287
  4188  00A4                     u1520:
  4189  00A4                     l2281:
  4190                           
  4191                           ;main.c: 94:                 button.state ^= 1;
  4192  00A4  084D               	movf	main@button^(0+128),w
  4193  00A5  3901               	andlw	1
  4194  00A6  00C2               	movwf	??_main^(0+128)
  4195  00A7  3001               	movlw	1
  4196  00A8  06C2               	xorwf	??_main^(0+128),f
  4197  00A9  084D               	movf	main@button^(0+128),w
  4198  00AA  0642               	xorwf	??_main^(0+128),w
  4199  00AB  39FE               	andlw	-2
  4200  00AC  0642               	xorwf	??_main^(0+128),w
  4201  00AD  00CD               	movwf	main@button^(0+128)
  4202  00AE                     l2283:
  4203                           
  4204                           ;main.c: 95:                 if (button.state == 0) {
  4205  00AE  184D               	btfsc	main@button^(0+128),0
  4206  00AF  28B1               	goto	u1531
  4207  00B0  28B2               	goto	u1530
  4208  00B1                     u1531:
  4209  00B1  28BD               	goto	l2287
  4210  00B2                     u1530:
  4211  00B2                     l2285:
  4212                           
  4213                           ;main.c: 96:                     button.mode ^= 1;
  4214  00B2  0C4D               	rrf	main@button^(0+128),w
  4215  00B3  3901               	andlw	1
  4216  00B4  00C2               	movwf	??_main^(0+128)
  4217  00B5  3001               	movlw	1
  4218  00B6  06C2               	xorwf	??_main^(0+128),f
  4219  00B7  0DC2               	rlf	??_main^(0+128),f
  4220  00B8  084D               	movf	main@button^(0+128),w
  4221  00B9  0642               	xorwf	??_main^(0+128),w
  4222  00BA  39FD               	andlw	-3
  4223  00BB  0642               	xorwf	??_main^(0+128),w
  4224  00BC  00CD               	movwf	main@button^(0+128)
  4225  00BD                     l2287:
  4226                           
  4227                           ;main.c: 99:             LCMeas.peakVoltage = ADC_GetConversionResult();
  4228  00BD  318D  2586  3180   	fcall	_ADC_GetConversionResult
  4229  00C0  0020               	movlb	0	; select bank0
  4230  00C1  0821               	movf	?_ADC_GetConversionResult+1,w
  4231  00C2  0021               	movlb	1	; select bank1
  4232  00C3  00DD               	movwf	((_LCMeas+1)^(0+128)+14)
  4233  00C4  0020               	movlb	0	; select bank0
  4234  00C5  0820               	movf	?_ADC_GetConversionResult,w
  4235  00C6  0021               	movlb	1	; select bank1
  4236  00C7  00DC               	movwf	(_LCMeas^(0+128)+14)
  4237  00C8                     l2289:
  4238                           
  4239                           ;main.c: 100:             if (freqMin > LCMeas.frequency) {
  4240  00C8  086D               	movf	(_freqMin+3)^(0+128),w
  4241  00C9  0256               	subwf	((_LCMeas+3)^(0+128)+5),w
  4242  00CA  1D03               	skipz
  4243  00CB  28D6               	goto	u1545
  4244  00CC  086C               	movf	(_freqMin+2)^(0+128),w
  4245  00CD  0255               	subwf	((_LCMeas+2)^(0+128)+5),w
  4246  00CE  1D03               	skipz
  4247  00CF  28D6               	goto	u1545
  4248  00D0  086B               	movf	(_freqMin+1)^(0+128),w
  4249  00D1  0254               	subwf	((_LCMeas+1)^(0+128)+5),w
  4250  00D2  1D03               	skipz
  4251  00D3  28D6               	goto	u1545
  4252  00D4  086A               	movf	_freqMin^(0+128),w
  4253  00D5  0253               	subwf	(_LCMeas^(0+128)+5),w
  4254  00D6                     u1545:
  4255  00D6  1803               	skipnc
  4256  00D7  28D9               	goto	u1541
  4257  00D8  28DA               	goto	u1540
  4258  00D9                     u1541:
  4259  00D9  28E6               	goto	l2293
  4260  00DA                     u1540:
  4261  00DA                     l2291:
  4262                           
  4263                           ;main.c: 101:                 freqMin = LCMeas.frequency;
  4264  00DA  3005               	movlw	5
  4265  00DB  3ECE               	addlw	(low (_LCMeas| 0))& (0+255)
  4266  00DC  0086               	movwf	6
  4267  00DD  0187               	clrf	7
  4268  00DE  3F40               	moviw [0]fsr1
  4269  00DF  00EA               	movwf	_freqMin^(0+128)
  4270  00E0  3F41               	moviw [1]fsr1
  4271  00E1  00EB               	movwf	(_freqMin+1)^(0+128)
  4272  00E2  3F42               	moviw [2]fsr1
  4273  00E3  00EC               	movwf	(_freqMin+2)^(0+128)
  4274  00E4  3F43               	moviw [3]fsr1
  4275  00E5  00ED               	movwf	(_freqMin+3)^(0+128)
  4276  00E6                     l2293:
  4277                           
  4278                           ;main.c: 103:             if (freqMax < LCMeas.frequency) {
  4279  00E6  0856               	movf	((_LCMeas+3)^(0+128)+5),w
  4280  00E7  0269               	subwf	(_freqMax+3)^(0+128),w
  4281  00E8  1D03               	skipz
  4282  00E9  28F4               	goto	u1555
  4283  00EA  0855               	movf	((_LCMeas+2)^(0+128)+5),w
  4284  00EB  0268               	subwf	(_freqMax+2)^(0+128),w
  4285  00EC  1D03               	skipz
  4286  00ED  28F4               	goto	u1555
  4287  00EE  0854               	movf	((_LCMeas+1)^(0+128)+5),w
  4288  00EF  0267               	subwf	(_freqMax+1)^(0+128),w
  4289  00F0  1D03               	skipz
  4290  00F1  28F4               	goto	u1555
  4291  00F2  0853               	movf	(_LCMeas^(0+128)+5),w
  4292  00F3  0266               	subwf	_freqMax^(0+128),w
  4293  00F4                     u1555:
  4294  00F4  1803               	skipnc
  4295  00F5  28F7               	goto	u1551
  4296  00F6  28F8               	goto	u1550
  4297  00F7                     u1551:
  4298  00F7  2904               	goto	l2297
  4299  00F8                     u1550:
  4300  00F8                     l2295:
  4301                           
  4302                           ;main.c: 104:                 freqMax = LCMeas.frequency;
  4303  00F8  3005               	movlw	5
  4304  00F9  3ECE               	addlw	(low (_LCMeas| 0))& (0+255)
  4305  00FA  0086               	movwf	6
  4306  00FB  0187               	clrf	7
  4307  00FC  3F40               	moviw [0]fsr1
  4308  00FD  00E6               	movwf	_freqMax^(0+128)
  4309  00FE  3F41               	moviw [1]fsr1
  4310  00FF  00E7               	movwf	(_freqMax+1)^(0+128)
  4311  0100  3F42               	moviw [2]fsr1
  4312  0101  00E8               	movwf	(_freqMax+2)^(0+128)
  4313  0102  3F43               	moviw [3]fsr1
  4314  0103  00E9               	movwf	(_freqMax+3)^(0+128)
  4315  0104                     l2297:
  4316                           
  4317                           ;main.c: 106:             if (peakMax < LCMeas.peakVoltage) {
  4318  0104  085C               	movf	(_LCMeas^(0+128)+14),w
  4319  0105  00C2               	movwf	??_main^(0+128)
  4320  0106  085D               	movf	((_LCMeas+1)^(0+128)+14),w
  4321  0107  00C3               	movwf	(??_main^(0+128)+1)
  4322  0108  01C4               	clrf	(??_main^(0+128)+2)
  4323  0109  01C5               	clrf	(??_main^(0+128)+3)
  4324  010A  0845               	movf	(??_main+3)^(0+128),w
  4325  010B  0265               	subwf	(_peakMax+3)^(0+128),w
  4326  010C  1D03               	skipz
  4327  010D  2918               	goto	u1565
  4328  010E  0844               	movf	(??_main+2)^(0+128),w
  4329  010F  0264               	subwf	(_peakMax+2)^(0+128),w
  4330  0110  1D03               	skipz
  4331  0111  2918               	goto	u1565
  4332  0112  0843               	movf	(??_main+1)^(0+128),w
  4333  0113  0263               	subwf	(_peakMax+1)^(0+128),w
  4334  0114  1D03               	skipz
  4335  0115  2918               	goto	u1565
  4336  0116  0842               	movf	??_main^(0+128),w
  4337  0117  0262               	subwf	_peakMax^(0+128),w
  4338  0118                     u1565:
  4339  0118  1803               	skipnc
  4340  0119  291B               	goto	u1561
  4341  011A  291C               	goto	u1560
  4342  011B                     u1561:
  4343  011B  2922               	goto	l439
  4344  011C                     u1560:
  4345  011C                     l2299:
  4346                           
  4347                           ;main.c: 107:                 peakMax = LCMeas.peakVoltage;
  4348  011C  085C               	movf	(_LCMeas^(0+128)+14),w
  4349  011D  00E2               	movwf	_peakMax^(0+128)
  4350  011E  085D               	movf	((_LCMeas+1)^(0+128)+14),w
  4351  011F  00E3               	movwf	(_peakMax^(0+128)+1)
  4352  0120  01E4               	clrf	(_peakMax^(0+128)+2)
  4353  0121  01E5               	clrf	(_peakMax^(0+128)+3)
  4354  0122                     l439:	
  4355                           ;main.c: 108:             }
  4356                           
  4357                           
  4358                           ;main.c: 109:             if (peakMin > LCMeas.peakVoltage) {
  4359  0122  085C               	movf	(_LCMeas^(0+128)+14),w
  4360  0123  00C2               	movwf	??_main^(0+128)
  4361  0124  085D               	movf	((_LCMeas+1)^(0+128)+14),w
  4362  0125  00C3               	movwf	(??_main^(0+128)+1)
  4363  0126  01C4               	clrf	(??_main^(0+128)+2)
  4364  0127  01C5               	clrf	(??_main^(0+128)+3)
  4365  0128  0022               	movlb	2	; select bank2
  4366  0129  0855               	movf	(_peakMin+3)^(0+256),w
  4367  012A  0021               	movlb	1	; select bank1
  4368  012B  0245               	subwf	(??_main+3)^(0+128),w
  4369  012C  1D03               	skipz
  4370  012D  293E               	goto	u1575
  4371  012E  0022               	movlb	2	; select bank2
  4372  012F  0854               	movf	(_peakMin+2)^(0+256),w
  4373  0130  0021               	movlb	1	; select bank1
  4374  0131  0244               	subwf	(??_main+2)^(0+128),w
  4375  0132  1D03               	skipz
  4376  0133  293E               	goto	u1575
  4377  0134  0022               	movlb	2	; select bank2
  4378  0135  0853               	movf	(_peakMin+1)^(0+256),w
  4379  0136  0021               	movlb	1	; select bank1
  4380  0137  0243               	subwf	(??_main+1)^(0+128),w
  4381  0138  1D03               	skipz
  4382  0139  293E               	goto	u1575
  4383  013A  0022               	movlb	2	; select bank2
  4384  013B  0852               	movf	_peakMin^(0+256),w
  4385  013C  0021               	movlb	1	; select bank1
  4386  013D  0242               	subwf	??_main^(0+128),w
  4387  013E                     u1575:
  4388  013E  1803               	skipnc
  4389  013F  2941               	goto	u1571
  4390  0140  2942               	goto	u1570
  4391  0141                     u1571:
  4392  0141  294B               	goto	l2303
  4393  0142                     u1570:
  4394  0142                     l2301:
  4395                           
  4396                           ;main.c: 110:                 peakMin = LCMeas.peakVoltage;
  4397  0142  085C               	movf	(_LCMeas^(0+128)+14),w
  4398  0143  0022               	movlb	2	; select bank2
  4399  0144  00D2               	movwf	_peakMin^(0+256)
  4400  0145  0021               	movlb	1	; select bank1
  4401  0146  085D               	movf	((_LCMeas+1)^(0+128)+14),w
  4402  0147  0022               	movlb	2	; select bank2
  4403  0148  00D3               	movwf	(_peakMin^(0+256)+1)
  4404  0149  01D4               	clrf	(_peakMin^(0+256)+2)
  4405  014A  01D5               	clrf	(_peakMin^(0+256)+3)
  4406  014B                     l2303:
  4407                           
  4408                           ;main.c: 112:             if (PORTAbits.RA3 == 0) {
  4409  014B  0020               	movlb	0	; select bank0
  4410  014C  198C               	btfsc	12,3	;volatile
  4411  014D  294F               	goto	u1581
  4412  014E  2950               	goto	u1580
  4413  014F                     u1581:
  4414  014F  2974               	goto	l2307
  4415  0150                     u1580:
  4416  0150                     l2305:
  4417                           
  4418                           ;main.c: 113:                 freqMin = 0xFFFFFFFF;
  4419  0150  30FF               	movlw	255
  4420  0151  0021               	movlb	1	; select bank1
  4421  0152  00ED               	movwf	(_freqMin+3)^(0+128)
  4422  0153  30FF               	movlw	255
  4423  0154  00EC               	movwf	(_freqMin+2)^(0+128)
  4424  0155  30FF               	movlw	255
  4425  0156  00EB               	movwf	(_freqMin+1)^(0+128)
  4426  0157  30FF               	movlw	255
  4427  0158  00EA               	movwf	_freqMin^(0+128)
  4428                           
  4429                           ;main.c: 114:                 freqMax = 0;
  4430  0159  3000               	movlw	0
  4431  015A  00E9               	movwf	(_freqMax+3)^(0+128)
  4432  015B  3000               	movlw	0
  4433  015C  00E8               	movwf	(_freqMax+2)^(0+128)
  4434  015D  3000               	movlw	0
  4435  015E  00E7               	movwf	(_freqMax+1)^(0+128)
  4436  015F  3000               	movlw	0
  4437  0160  00E6               	movwf	_freqMax^(0+128)
  4438                           
  4439                           ;main.c: 115:                 peakMin = 0xFFFFFFFF;
  4440  0161  30FF               	movlw	255
  4441  0162  0022               	movlb	2	; select bank2
  4442  0163  00D5               	movwf	(_peakMin+3)^(0+256)
  4443  0164  30FF               	movlw	255
  4444  0165  00D4               	movwf	(_peakMin+2)^(0+256)
  4445  0166  30FF               	movlw	255
  4446  0167  00D3               	movwf	(_peakMin+1)^(0+256)
  4447  0168  30FF               	movlw	255
  4448  0169  00D2               	movwf	_peakMin^(0+256)
  4449                           
  4450                           ;main.c: 116:                 peakMax = 0;
  4451  016A  3000               	movlw	0
  4452  016B  0021               	movlb	1	; select bank1
  4453  016C  00E5               	movwf	(_peakMax+3)^(0+128)
  4454  016D  3000               	movlw	0
  4455  016E  00E4               	movwf	(_peakMax+2)^(0+128)
  4456  016F  3000               	movlw	0
  4457  0170  00E3               	movwf	(_peakMax+1)^(0+128)
  4458  0171  3000               	movlw	0
  4459  0172  00E2               	movwf	_peakMax^(0+128)
  4460                           
  4461                           ;main.c: 117:             } else {
  4462  0173  2AE6               	goto	l447
  4463  0174                     l2307:
  4464                           
  4465                           ;main.c: 118:                 freqDiff = freqMax - freqMin;
  4466  0174  0021               	movlb	1	; select bank1
  4467  0175  086A               	movf	_freqMin^(0+128),w
  4468  0176  0266               	subwf	_freqMax^(0+128),w
  4469  0177  00C2               	movwf	??_main^(0+128)
  4470  0178  086B               	movf	(_freqMin+1)^(0+128),w
  4471  0179  3B67               	subwfb	(_freqMax+1)^(0+128),w
  4472  017A  00C3               	movwf	(??_main^(0+128)+1)
  4473  017B  086C               	movf	(_freqMin+2)^(0+128),w
  4474  017C  3B68               	subwfb	(_freqMax+2)^(0+128),w
  4475  017D  00C4               	movwf	(??_main^(0+128)+2)
  4476  017E  086D               	movf	(_freqMin+3)^(0+128),w
  4477  017F  3B69               	subwfb	(_freqMax+3)^(0+128),w
  4478  0180  00C5               	movwf	(??_main^(0+128)+3)
  4479  0181  0845               	movf	(??_main+3)^(0+128),w
  4480  0182  0022               	movlb	2	; select bank2
  4481  0183  00AF               	movwf	(_freqDiff+3)^(0+256)
  4482  0184  0021               	movlb	1	; select bank1
  4483  0185  0844               	movf	(??_main+2)^(0+128),w
  4484  0186  0022               	movlb	2	; select bank2
  4485  0187  00AE               	movwf	(_freqDiff+2)^(0+256)
  4486  0188  0021               	movlb	1	; select bank1
  4487  0189  0843               	movf	(??_main+1)^(0+128),w
  4488  018A  0022               	movlb	2	; select bank2
  4489  018B  00AD               	movwf	(_freqDiff+1)^(0+256)
  4490  018C  0021               	movlb	1	; select bank1
  4491  018D  0842               	movf	??_main^(0+128),w
  4492  018E  0022               	movlb	2	; select bank2
  4493  018F  00AC               	movwf	_freqDiff^(0+256)
  4494  0190                     l2309:
  4495                           
  4496                           ;main.c: 119:                 freqPercent = ((100 * (freqMax - freqMin)) / freqMax);
  4497  0190  0021               	movlb	1	; select bank1
  4498  0191  0869               	movf	(_freqMax+3)^(0+128),w
  4499  0192  0020               	movlb	0	; select bank0
  4500  0193  00AF               	movwf	___lldiv@divisor+3
  4501  0194  0021               	movlb	1	; select bank1
  4502  0195  0868               	movf	(_freqMax+2)^(0+128),w
  4503  0196  0020               	movlb	0	; select bank0
  4504  0197  00AE               	movwf	___lldiv@divisor+2
  4505  0198  0021               	movlb	1	; select bank1
  4506  0199  0867               	movf	(_freqMax+1)^(0+128),w
  4507  019A  0020               	movlb	0	; select bank0
  4508  019B  00AD               	movwf	___lldiv@divisor+1
  4509  019C  0021               	movlb	1	; select bank1
  4510  019D  0866               	movf	_freqMax^(0+128),w
  4511  019E  0020               	movlb	0	; select bank0
  4512  019F  00AC               	movwf	___lldiv@divisor
  4513  01A0  0021               	movlb	1	; select bank1
  4514  01A1  086A               	movf	_freqMin^(0+128),w
  4515  01A2  0266               	subwf	_freqMax^(0+128),w
  4516  01A3  00C2               	movwf	??_main^(0+128)
  4517  01A4  086B               	movf	(_freqMin+1)^(0+128),w
  4518  01A5  3B67               	subwfb	(_freqMax+1)^(0+128),w
  4519  01A6  00C3               	movwf	(??_main^(0+128)+1)
  4520  01A7  086C               	movf	(_freqMin+2)^(0+128),w
  4521  01A8  3B68               	subwfb	(_freqMax+2)^(0+128),w
  4522  01A9  00C4               	movwf	(??_main^(0+128)+2)
  4523  01AA  086D               	movf	(_freqMin+3)^(0+128),w
  4524  01AB  3B69               	subwfb	(_freqMax+3)^(0+128),w
  4525  01AC  00C5               	movwf	(??_main^(0+128)+3)
  4526  01AD  0845               	movf	(??_main+3)^(0+128),w
  4527  01AE  0020               	movlb	0	; select bank0
  4528  01AF  00A3               	movwf	___lmul@multiplier+3
  4529  01B0  0021               	movlb	1	; select bank1
  4530  01B1  0844               	movf	(??_main+2)^(0+128),w
  4531  01B2  0020               	movlb	0	; select bank0
  4532  01B3  00A2               	movwf	___lmul@multiplier+2
  4533  01B4  0021               	movlb	1	; select bank1
  4534  01B5  0843               	movf	(??_main+1)^(0+128),w
  4535  01B6  0020               	movlb	0	; select bank0
  4536  01B7  00A1               	movwf	___lmul@multiplier+1
  4537  01B8  0021               	movlb	1	; select bank1
  4538  01B9  0842               	movf	??_main^(0+128),w
  4539  01BA  0020               	movlb	0	; select bank0
  4540  01BB  00A0               	movwf	___lmul@multiplier
  4541  01BC  3000               	movlw	0
  4542  01BD  00A7               	movwf	___lmul@multiplicand+3
  4543  01BE  3000               	movlw	0
  4544  01BF  00A6               	movwf	___lmul@multiplicand+2
  4545  01C0  3000               	movlw	0
  4546  01C1  00A5               	movwf	___lmul@multiplicand+1
  4547  01C2  3064               	movlw	100
  4548  01C3  00A4               	movwf	___lmul@multiplicand
  4549  01C4  318E  26FC  3180   	fcall	___lmul
  4550  01C7  0020               	movlb	0	; select bank0
  4551  01C8  0823               	movf	?___lmul+3,w
  4552  01C9  00B3               	movwf	___lldiv@dividend+3
  4553  01CA  0822               	movf	?___lmul+2,w
  4554  01CB  00B2               	movwf	___lldiv@dividend+2
  4555  01CC  0821               	movf	?___lmul+1,w
  4556  01CD  00B1               	movwf	___lldiv@dividend+1
  4557  01CE  0820               	movf	?___lmul,w
  4558  01CF  00B0               	movwf	___lldiv@dividend
  4559  01D0  3187  2752  3180   	fcall	___lldiv
  4560  01D3  0020               	movlb	0	; select bank0
  4561  01D4  082F               	movf	?___lldiv+3,w
  4562  01D5  0022               	movlb	2	; select bank2
  4563  01D6  00AB               	movwf	(_freqPercent+3)^(0+256)
  4564  01D7  0020               	movlb	0	; select bank0
  4565  01D8  082E               	movf	?___lldiv+2,w
  4566  01D9  0022               	movlb	2	; select bank2
  4567  01DA  00AA               	movwf	(_freqPercent+2)^(0+256)
  4568  01DB  0020               	movlb	0	; select bank0
  4569  01DC  082D               	movf	?___lldiv+1,w
  4570  01DD  0022               	movlb	2	; select bank2
  4571  01DE  00A9               	movwf	(_freqPercent+1)^(0+256)
  4572  01DF  0020               	movlb	0	; select bank0
  4573  01E0  082C               	movf	?___lldiv,w
  4574  01E1  0022               	movlb	2	; select bank2
  4575  01E2  00A8               	movwf	_freqPercent^(0+256)
  4576  01E3                     l2311:
  4577                           
  4578                           ;main.c: 120:                 peakDiff = peakMax - peakMin;
  4579  01E3  0852               	movf	_peakMin^(0+256),w
  4580  01E4  0021               	movlb	1	; select bank1
  4581  01E5  0262               	subwf	_peakMax^(0+128),w
  4582  01E6  00C2               	movwf	??_main^(0+128)
  4583  01E7  0022               	movlb	2	; select bank2
  4584  01E8  0853               	movf	(_peakMin+1)^(0+256),w
  4585  01E9  0021               	movlb	1	; select bank1
  4586  01EA  3B63               	subwfb	(_peakMax+1)^(0+128),w
  4587  01EB  00C3               	movwf	(??_main^(0+128)+1)
  4588  01EC  0022               	movlb	2	; select bank2
  4589  01ED  0854               	movf	(_peakMin+2)^(0+256),w
  4590  01EE  0021               	movlb	1	; select bank1
  4591  01EF  3B64               	subwfb	(_peakMax+2)^(0+128),w
  4592  01F0  00C4               	movwf	(??_main^(0+128)+2)
  4593  01F1  0022               	movlb	2	; select bank2
  4594  01F2  0855               	movf	(_peakMin+3)^(0+256),w
  4595  01F3  0021               	movlb	1	; select bank1
  4596  01F4  3B65               	subwfb	(_peakMax+3)^(0+128),w
  4597  01F5  00C5               	movwf	(??_main^(0+128)+3)
  4598  01F6  0845               	movf	(??_main+3)^(0+128),w
  4599  01F7  0022               	movlb	2	; select bank2
  4600  01F8  00A7               	movwf	(_peakDiff+3)^(0+256)
  4601  01F9  0021               	movlb	1	; select bank1
  4602  01FA  0844               	movf	(??_main+2)^(0+128),w
  4603  01FB  0022               	movlb	2	; select bank2
  4604  01FC  00A6               	movwf	(_peakDiff+2)^(0+256)
  4605  01FD  0021               	movlb	1	; select bank1
  4606  01FE  0843               	movf	(??_main+1)^(0+128),w
  4607  01FF  0022               	movlb	2	; select bank2
  4608  0200  00A5               	movwf	(_peakDiff+1)^(0+256)
  4609  0201  0021               	movlb	1	; select bank1
  4610  0202  0842               	movf	??_main^(0+128),w
  4611  0203  0022               	movlb	2	; select bank2
  4612  0204  00A4               	movwf	_peakDiff^(0+256)
  4613                           
  4614                           ;main.c: 121:                 peakPercent = ((100 * (peakMax - peakMin)) / peakMax);
  4615  0205  0021               	movlb	1	; select bank1
  4616  0206  0865               	movf	(_peakMax+3)^(0+128),w
  4617  0207  0020               	movlb	0	; select bank0
  4618  0208  00AF               	movwf	___lldiv@divisor+3
  4619  0209  0021               	movlb	1	; select bank1
  4620  020A  0864               	movf	(_peakMax+2)^(0+128),w
  4621  020B  0020               	movlb	0	; select bank0
  4622  020C  00AE               	movwf	___lldiv@divisor+2
  4623  020D  0021               	movlb	1	; select bank1
  4624  020E  0863               	movf	(_peakMax+1)^(0+128),w
  4625  020F  0020               	movlb	0	; select bank0
  4626  0210  00AD               	movwf	___lldiv@divisor+1
  4627  0211  0021               	movlb	1	; select bank1
  4628  0212  0862               	movf	_peakMax^(0+128),w
  4629  0213  0020               	movlb	0	; select bank0
  4630  0214  00AC               	movwf	___lldiv@divisor
  4631  0215  0022               	movlb	2	; select bank2
  4632  0216  0852               	movf	_peakMin^(0+256),w
  4633  0217  0021               	movlb	1	; select bank1
  4634  0218  0262               	subwf	_peakMax^(0+128),w
  4635  0219  00C2               	movwf	??_main^(0+128)
  4636  021A  0022               	movlb	2	; select bank2
  4637  021B  0853               	movf	(_peakMin+1)^(0+256),w
  4638  021C  0021               	movlb	1	; select bank1
  4639  021D  3B63               	subwfb	(_peakMax+1)^(0+128),w
  4640  021E  00C3               	movwf	(??_main^(0+128)+1)
  4641  021F  0022               	movlb	2	; select bank2
  4642  0220  0854               	movf	(_peakMin+2)^(0+256),w
  4643  0221  0021               	movlb	1	; select bank1
  4644  0222  3B64               	subwfb	(_peakMax+2)^(0+128),w
  4645  0223  00C4               	movwf	(??_main^(0+128)+2)
  4646  0224  0022               	movlb	2	; select bank2
  4647  0225  0855               	movf	(_peakMin+3)^(0+256),w
  4648  0226  0021               	movlb	1	; select bank1
  4649  0227  3B65               	subwfb	(_peakMax+3)^(0+128),w
  4650  0228  00C5               	movwf	(??_main^(0+128)+3)
  4651  0229  0845               	movf	(??_main+3)^(0+128),w
  4652  022A  0020               	movlb	0	; select bank0
  4653  022B  00A3               	movwf	___lmul@multiplier+3
  4654  022C  0021               	movlb	1	; select bank1
  4655  022D  0844               	movf	(??_main+2)^(0+128),w
  4656  022E  0020               	movlb	0	; select bank0
  4657  022F  00A2               	movwf	___lmul@multiplier+2
  4658  0230  0021               	movlb	1	; select bank1
  4659  0231  0843               	movf	(??_main+1)^(0+128),w
  4660  0232  0020               	movlb	0	; select bank0
  4661  0233  00A1               	movwf	___lmul@multiplier+1
  4662  0234  0021               	movlb	1	; select bank1
  4663  0235  0842               	movf	??_main^(0+128),w
  4664  0236  0020               	movlb	0	; select bank0
  4665  0237  00A0               	movwf	___lmul@multiplier
  4666  0238  3000               	movlw	0
  4667  0239  00A7               	movwf	___lmul@multiplicand+3
  4668  023A  3000               	movlw	0
  4669  023B  00A6               	movwf	___lmul@multiplicand+2
  4670  023C  3000               	movlw	0
  4671  023D  00A5               	movwf	___lmul@multiplicand+1
  4672  023E  3064               	movlw	100
  4673  023F  00A4               	movwf	___lmul@multiplicand
  4674  0240  318E  26FC  3180   	fcall	___lmul
  4675  0243  0020               	movlb	0	; select bank0
  4676  0244  0823               	movf	?___lmul+3,w
  4677  0245  00B3               	movwf	___lldiv@dividend+3
  4678  0246  0822               	movf	?___lmul+2,w
  4679  0247  00B2               	movwf	___lldiv@dividend+2
  4680  0248  0821               	movf	?___lmul+1,w
  4681  0249  00B1               	movwf	___lldiv@dividend+1
  4682  024A  0820               	movf	?___lmul,w
  4683  024B  00B0               	movwf	___lldiv@dividend
  4684  024C  3187  2752  3180   	fcall	___lldiv
  4685  024F  0020               	movlb	0	; select bank0
  4686  0250  082F               	movf	?___lldiv+3,w
  4687  0251  0022               	movlb	2	; select bank2
  4688  0252  00A3               	movwf	(_peakPercent+3)^(0+256)
  4689  0253  0020               	movlb	0	; select bank0
  4690  0254  082E               	movf	?___lldiv+2,w
  4691  0255  0022               	movlb	2	; select bank2
  4692  0256  00A2               	movwf	(_peakPercent+2)^(0+256)
  4693  0257  0020               	movlb	0	; select bank0
  4694  0258  082D               	movf	?___lldiv+1,w
  4695  0259  0022               	movlb	2	; select bank2
  4696  025A  00A1               	movwf	(_peakPercent+1)^(0+256)
  4697  025B  0020               	movlb	0	; select bank0
  4698  025C  082C               	movf	?___lldiv,w
  4699  025D  0022               	movlb	2	; select bank2
  4700  025E  00A0               	movwf	_peakPercent^(0+256)
  4701  025F                     l2313:
  4702                           
  4703                           ;main.c: 122:                 if (button.mode == 0) {
  4704  025F  0021               	movlb	1	; select bank1
  4705  0260  18CD               	btfsc	main@button^(0+128),1
  4706  0261  2A63               	goto	u1591
  4707  0262  2A64               	goto	u1590
  4708  0263                     u1591:
  4709  0263  2AC0               	goto	l2317
  4710  0264                     u1590:
  4711  0264                     l2315:
  4712                           
  4713                           ;main.c: 123:                     printf("Peak = %u Diff = %lu %lu%%, LC = %u Freq = %lu
      +                           Hz Diff = %lu %lu%%\r\n", LCMeas.peakVoltage, peakDiff, peakPercent, LCMeas.cycle, LCMe
      +                          as.frequency, freqDiff, freqPercent);
  4714  0264  30F9               	movlw	low (STR_3| (0+32768))
  4715  0265  00A5               	movwf	printf@fmt^(0+128)
  4716  0266  3087               	movlw	high (STR_3| (0+32768))
  4717  0267  00A6               	movwf	(printf@fmt^(0+128)+1)
  4718  0268  085D               	movf	((_LCMeas+1)^(0+128)+14),w
  4719  0269  00A8               	movwf	((?_printf+1)^(0+128)+2)
  4720  026A  085C               	movf	(_LCMeas^(0+128)+14),w
  4721  026B  00A7               	movwf	(?_printf^(0+128)+2)
  4722  026C  0022               	movlb	2	; select bank2
  4723  026D  0827               	movf	(_peakDiff+3)^(0+256),w
  4724  026E  0021               	movlb	1	; select bank1
  4725  026F  00AC               	movwf	((?_printf+3)^(0+128)+4)
  4726  0270  0022               	movlb	2	; select bank2
  4727  0271  0826               	movf	(_peakDiff+2)^(0+256),w
  4728  0272  0021               	movlb	1	; select bank1
  4729  0273  00AB               	movwf	((?_printf+2)^(0+128)+4)
  4730  0274  0022               	movlb	2	; select bank2
  4731  0275  0825               	movf	(_peakDiff+1)^(0+256),w
  4732  0276  0021               	movlb	1	; select bank1
  4733  0277  00AA               	movwf	((?_printf+1)^(0+128)+4)
  4734  0278  0022               	movlb	2	; select bank2
  4735  0279  0824               	movf	_peakDiff^(0+256),w
  4736  027A  0021               	movlb	1	; select bank1
  4737  027B  00A9               	movwf	(?_printf^(0+128)+4)
  4738  027C  0022               	movlb	2	; select bank2
  4739  027D  0823               	movf	(_peakPercent+3)^(0+256),w
  4740  027E  0021               	movlb	1	; select bank1
  4741  027F  00B0               	movwf	((?_printf+3)^(0+128)+8)
  4742  0280  0022               	movlb	2	; select bank2
  4743  0281  0822               	movf	(_peakPercent+2)^(0+256),w
  4744  0282  0021               	movlb	1	; select bank1
  4745  0283  00AF               	movwf	((?_printf+2)^(0+128)+8)
  4746  0284  0022               	movlb	2	; select bank2
  4747  0285  0821               	movf	(_peakPercent+1)^(0+256),w
  4748  0286  0021               	movlb	1	; select bank1
  4749  0287  00AE               	movwf	((?_printf+1)^(0+128)+8)
  4750  0288  0022               	movlb	2	; select bank2
  4751  0289  0820               	movf	_peakPercent^(0+256),w
  4752  028A  0021               	movlb	1	; select bank1
  4753  028B  00AD               	movwf	(?_printf^(0+128)+8)
  4754  028C  084F               	movf	(_LCMeas+1)^(0+128),w
  4755  028D  00B2               	movwf	((?_printf+1)^(0+128)+12)
  4756  028E  084E               	movf	_LCMeas^(0+128),w
  4757  028F  00B1               	movwf	(?_printf^(0+128)+12)
  4758  0290  3005               	movlw	5
  4759  0291  3ECE               	addlw	(low (_LCMeas| 0))& (0+255)
  4760  0292  0086               	movwf	6
  4761  0293  0187               	clrf	7
  4762  0294  3F40               	moviw [0]fsr1
  4763  0295  00B3               	movwf	(?_printf^(0+128)+14)
  4764  0296  3F41               	moviw [1]fsr1
  4765  0297  00B4               	movwf	((?_printf+1)^(0+128)+14)
  4766  0298  3F42               	moviw [2]fsr1
  4767  0299  00B5               	movwf	((?_printf+2)^(0+128)+14)
  4768  029A  3F43               	moviw [3]fsr1
  4769  029B  00B6               	movwf	((?_printf+3)^(0+128)+14)
  4770  029C  0022               	movlb	2	; select bank2
  4771  029D  082F               	movf	(_freqDiff+3)^(0+256),w
  4772  029E  0021               	movlb	1	; select bank1
  4773  029F  00BA               	movwf	((?_printf+3)^(0+128)+18)
  4774  02A0  0022               	movlb	2	; select bank2
  4775  02A1  082E               	movf	(_freqDiff+2)^(0+256),w
  4776  02A2  0021               	movlb	1	; select bank1
  4777  02A3  00B9               	movwf	((?_printf+2)^(0+128)+18)
  4778  02A4  0022               	movlb	2	; select bank2
  4779  02A5  082D               	movf	(_freqDiff+1)^(0+256),w
  4780  02A6  0021               	movlb	1	; select bank1
  4781  02A7  00B8               	movwf	((?_printf+1)^(0+128)+18)
  4782  02A8  0022               	movlb	2	; select bank2
  4783  02A9  082C               	movf	_freqDiff^(0+256),w
  4784  02AA  0021               	movlb	1	; select bank1
  4785  02AB  00B7               	movwf	(?_printf^(0+128)+18)
  4786  02AC  0022               	movlb	2	; select bank2
  4787  02AD  082B               	movf	(_freqPercent+3)^(0+256),w
  4788  02AE  0021               	movlb	1	; select bank1
  4789  02AF  00BE               	movwf	((?_printf+3)^(0+128)+22)
  4790  02B0  0022               	movlb	2	; select bank2
  4791  02B1  082A               	movf	(_freqPercent+2)^(0+256),w
  4792  02B2  0021               	movlb	1	; select bank1
  4793  02B3  00BD               	movwf	((?_printf+2)^(0+128)+22)
  4794  02B4  0022               	movlb	2	; select bank2
  4795  02B5  0829               	movf	(_freqPercent+1)^(0+256),w
  4796  02B6  0021               	movlb	1	; select bank1
  4797  02B7  00BC               	movwf	((?_printf+1)^(0+128)+22)
  4798  02B8  0022               	movlb	2	; select bank2
  4799  02B9  0828               	movf	_freqPercent^(0+256),w
  4800  02BA  0021               	movlb	1	; select bank1
  4801  02BB  00BB               	movwf	(?_printf^(0+128)+22)
  4802  02BC  318E  262E  3180   	fcall	_printf
  4803                           
  4804                           ;main.c: 124:                 } else {
  4805  02BF  2AE4               	goto	l444
  4806  02C0                     l2317:
  4807                           
  4808                           ;main.c: 125:                     dataVisualizer[1] = LCMeas.peakVoltage;
  4809  02C0  085C               	movf	(_LCMeas^(0+128)+14),w
  4810  02C1  00C2               	movwf	??_main^(0+128)
  4811  02C2  0842               	movf	??_main^(0+128),w
  4812  02C3  00C7               	movwf	(main@dataVisualizer^(0+128)+1)
  4813  02C4                     l2319:
  4814                           
  4815                           ;main.c: 126:                     dataVisualizer[2] = LCMeas.peakVoltage >> 8;
  4816  02C4  085D               	movf	((_LCMeas+1)^(0+128)+14),w
  4817  02C5  00C2               	movwf	??_main^(0+128)
  4818  02C6  0842               	movf	??_main^(0+128),w
  4819  02C7  00C8               	movwf	(main@dataVisualizer^(0+128)+2)
  4820  02C8                     l2321:
  4821                           
  4822                           ;main.c: 127:                     dataVisualizer[3] = LCMeas.cycle;
  4823  02C8  084E               	movf	_LCMeas^(0+128),w
  4824  02C9  00C2               	movwf	??_main^(0+128)
  4825  02CA  0842               	movf	??_main^(0+128),w
  4826  02CB  00C9               	movwf	(main@dataVisualizer^(0+128)+3)
  4827                           
  4828                           ;main.c: 128:                     dataVisualizer[4] = LCMeas.cycle >> 8;
  4829  02CC  084F               	movf	(_LCMeas+1)^(0+128),w
  4830  02CD  00C2               	movwf	??_main^(0+128)
  4831  02CE  0842               	movf	??_main^(0+128),w
  4832  02CF  00CA               	movwf	(main@dataVisualizer^(0+128)+4)
  4833  02D0                     l2323:
  4834                           
  4835                           ;main.c: 129:                     for (i = 0; i < sizeof (dataVisualizer); i++) {
  4836  02D0  01CC               	clrf	main@i^(0+128)
  4837  02D1                     l2327:
  4838                           
  4839                           ;main.c: 130:                         EUSART_Write(dataVisualizer[i]);
  4840  02D1  084C               	movf	main@i^(0+128),w
  4841  02D2  3EC6               	addlw	(low (main@dataVisualizer| 0))& (0+255)
  4842  02D3  0086               	movwf	6
  4843  02D4  0187               	clrf	7
  4844  02D5  0801               	movf	1,w
  4845  02D6  318D  25BD  3180   	fcall	_EUSART_Write
  4846  02D9                     l2329:
  4847                           
  4848                           ;main.c: 131:                     }
  4849  02D9  3001               	movlw	1
  4850  02DA  0021               	movlb	1	; select bank1
  4851  02DB  00C2               	movwf	??_main^(0+128)
  4852  02DC  0842               	movf	??_main^(0+128),w
  4853  02DD  07CC               	addwf	main@i^(0+128),f
  4854  02DE                     l2331:
  4855  02DE  3006               	movlw	6
  4856  02DF  024C               	subwf	main@i^(0+128),w
  4857  02E0  1C03               	skipc
  4858  02E1  2AE3               	goto	u1601
  4859  02E2  2AE4               	goto	u1600
  4860  02E3                     u1601:
  4861  02E3  2AD1               	goto	l2327
  4862  02E4                     u1600:
  4863  02E4                     l444:	
  4864                           ;main.c: 132:                 }
  4865                           
  4866                           
  4867                           ;main.c: 133:                 LCMeas.sample = 0;
  4868  02E4  0021               	movlb	1	; select bank1
  4869  02E5  105B               	bcf	(_LCMeas^(0+128)+13),0
  4870  02E6                     l447:	
  4871                           ;main.c: 135:             do { LATAbits.LATA5 = 0; } while(0);
  4872                           
  4873  02E6  0022               	movlb	2	; select bank2
  4874  02E7  128C               	bcf	12,5	;volatile
  4875  02E8  2888               	goto	l2277
  4876  02E9  3180  2819         	ljmp	start
  4877  02EB                     __end_of_main:
  4878                           
  4879                           	psect	text1
  4880  0E2E                     __ptext1:	
  4881 ;; *************** function _printf *****************
  4882 ;; Defined at:
  4883 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  fmt             2    5[BANK1 ] PTR const unsigned char 
  4886 ;;		 -> STR_3(69), STR_1(26), 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  ret             2    0        int 
  4889 ;;  ap              1   33[BANK1 ] PTR void [1]
  4890 ;;		 -> ?_printf(2), 
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  2    5[BANK1 ] int 
  4893 ;; Registers used:
  4894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4900 ;;      Params:         0       0      26       0       0       0       0       0
  4901 ;;      Locals:         0       0       3       0       0       0       0       0
  4902 ;;      Temps:          0       1       0       0       0       0       0       0
  4903 ;;      Totals:         0       1      29       0       0       0       0       0
  4904 ;;Total ram usage:       30 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; Hardware stack levels required when called:   11
  4907 ;; This function calls:
  4908 ;;		_vfprintf
  4909 ;; This function is called by:
  4910 ;;		_main
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           
  4915                           ;psect for function _printf
  4916  0E2E                     _printf:
  4917  0E2E                     l2201:	
  4918                           ;incstack = 0
  4919                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4920                           
  4921  0E2E  30A7               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4922  0E2F  0020               	movlb	0	; select bank0
  4923  0E30  00EF               	movwf	??_printf
  4924  0E31  086F               	movf	??_printf,w
  4925  0E32  0021               	movlb	1	; select bank1
  4926  0E33  00C1               	movwf	printf@ap^(0+128)
  4927  0E34                     l2203:
  4928  0E34  0826               	movf	(printf@fmt+1)^(0+128),w
  4929  0E35  0020               	movlb	0	; select bank0
  4930  0E36  00ED               	movwf	vfprintf@fmt+1
  4931  0E37  0021               	movlb	1	; select bank1
  4932  0E38  0825               	movf	printf@fmt^(0+128),w
  4933  0E39  0020               	movlb	0	; select bank0
  4934  0E3A  00EC               	movwf	vfprintf@fmt
  4935  0E3B  30C1               	movlw	(low (printf@ap| 0))& (0+255)
  4936  0E3C  00EF               	movwf	??_printf
  4937  0E3D  086F               	movf	??_printf,w
  4938  0E3E  00EE               	movwf	vfprintf@ap
  4939  0E3F  3000               	movlw	0
  4940  0E40  318F  2730  318E   	fcall	_vfprintf
  4941  0E43                     l990:
  4942  0E43  0008               	return
  4943  0E44                     __end_of_printf:
  4944                           
  4945                           	psect	text2
  4946  0F30                     __ptext2:	
  4947 ;; *************** function _vfprintf *****************
  4948 ;; Defined at:
  4949 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  fp              1    wreg     PTR struct _IO_FILE
  4952 ;;		 -> NULL(0), 
  4953 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
  4954 ;;		 -> STR_3(69), STR_1(26), 
  4955 ;;  ap              1   78[BANK0 ] PTR PTR void 
  4956 ;;		 -> printf@ap(1), 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  4959 ;;		 -> NULL(0), 
  4960 ;;  cfmt            2    3[BANK1 ] PTR unsigned char 
  4961 ;;		 -> STR_3(69), STR_1(26), 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  2   76[BANK0 ] int 
  4964 ;; Registers used:
  4965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4971 ;;      Params:         0       3       0       0       0       0       0       0
  4972 ;;      Locals:         0       0       3       0       0       0       0       0
  4973 ;;      Temps:          0       0       2       0       0       0       0       0
  4974 ;;      Totals:         0       3       5       0       0       0       0       0
  4975 ;;Total ram usage:        8 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:   10
  4978 ;; This function calls:
  4979 ;;		_vfpfcnvrt
  4980 ;; This function is called by:
  4981 ;;		_printf
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           
  4986                           ;psect for function _vfprintf
  4987  0F30                     _vfprintf:
  4988                           
  4989                           ;incstack = 0
  4990                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4991                           ;vfprintf@fp stored from wreg
  4992  0F30  0021               	movlb	1	; select bank1
  4993  0F31  00A2               	movwf	vfprintf@fp^(0+128)
  4994  0F32                     l2159:
  4995                           
  4996                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4997  0F32  0020               	movlb	0	; select bank0
  4998  0F33  086D               	movf	vfprintf@fmt+1,w
  4999  0F34  0021               	movlb	1	; select bank1
  5000  0F35  00A4               	movwf	(vfprintf@cfmt+1)^(0+128)
  5001  0F36  0020               	movlb	0	; select bank0
  5002  0F37  086C               	movf	vfprintf@fmt,w
  5003  0F38  0021               	movlb	1	; select bank1
  5004  0F39  00A3               	movwf	vfprintf@cfmt^(0+128)
  5005  0F3A                     l2161:
  5006                           
  5007                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  5008  0F3A  01DE               	clrf	_nout^(0+128)
  5009  0F3B  01DF               	clrf	(_nout+1)^(0+128)
  5010                           
  5011                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  5012  0F3C  2F55               	goto	l2165
  5013  0F3D                     l2163:
  5014                           
  5015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5016  0F3D  30A3               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5017  0F3E  00A0               	movwf	??_vfprintf^(0+128)
  5018  0F3F  0820               	movf	??_vfprintf^(0+128),w
  5019  0F40  0020               	movlb	0	; select bank0
  5020  0F41  00D3               	movwf	vfpfcnvrt@fmt
  5021  0F42  086E               	movf	vfprintf@ap,w
  5022  0F43  0021               	movlb	1	; select bank1
  5023  0F44  00A1               	movwf	(??_vfprintf+1)^(0+128)
  5024  0F45  0821               	movf	(??_vfprintf+1)^(0+128),w
  5025  0F46  0020               	movlb	0	; select bank0
  5026  0F47  00D4               	movwf	vfpfcnvrt@ap
  5027  0F48  0021               	movlb	1	; select bank1
  5028  0F49  0822               	movf	vfprintf@fp^(0+128),w
  5029  0F4A  3182  22EB  318F   	fcall	_vfpfcnvrt
  5030  0F4D  0020               	movlb	0	; select bank0
  5031  0F4E  0853               	movf	?_vfpfcnvrt,w
  5032  0F4F  0021               	movlb	1	; select bank1
  5033  0F50  07DE               	addwf	_nout^(0+128),f
  5034  0F51  0020               	movlb	0	; select bank0
  5035  0F52  0854               	movf	?_vfpfcnvrt+1,w
  5036  0F53  0021               	movlb	1	; select bank1
  5037  0F54  3DDF               	addwfc	(_nout+1)^(0+128),f
  5038  0F55                     l2165:
  5039                           
  5040                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  5041  0F55  0823               	movf	vfprintf@cfmt^(0+128),w
  5042  0F56  0084               	movwf	4
  5043  0F57  0824               	movf	(vfprintf@cfmt+1)^(0+128),w
  5044  0F58  0085               	movwf	5
  5045  0F59  0012               	moviw fsr0++
  5046  0F5A  1D03               	btfss	3,2
  5047  0F5B  2F5D               	goto	u1321
  5048  0F5C  2F5E               	goto	u1320
  5049  0F5D                     u1321:
  5050  0F5D  2F3D               	goto	l2163
  5051  0F5E                     u1320:
  5052  0F5E                     l2167:
  5053                           
  5054                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  5055  0F5E  085F               	movf	(_nout+1)^(0+128),w
  5056  0F5F  0020               	movlb	0	; select bank0
  5057  0F60  00ED               	movwf	?_vfprintf+1
  5058  0F61  0021               	movlb	1	; select bank1
  5059  0F62  085E               	movf	_nout^(0+128),w
  5060  0F63  0020               	movlb	0	; select bank0
  5061  0F64  00EC               	movwf	?_vfprintf
  5062  0F65                     l1074:
  5063  0F65  0008               	return
  5064  0F66                     __end_of_vfprintf:
  5065                           
  5066                           	psect	text3
  5067  02EB                     __ptext3:	
  5068 ;; *************** function _vfpfcnvrt *****************
  5069 ;; Defined at:
  5070 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;  fp              1    wreg     PTR struct _IO_FILE
  5073 ;;		 -> NULL(0), 
  5074 ;;  fmt             1   51[BANK0 ] PTR PTR unsigned char 
  5075 ;;		 -> vfprintf@cfmt(2), 
  5076 ;;  ap              1   52[BANK0 ] PTR PTR void 
  5077 ;;		 -> printf@ap(1), 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  fp              1   75[BANK0 ] PTR struct _IO_FILE
  5080 ;;		 -> NULL(0), 
  5081 ;;  llu             8   67[BANK0 ] unsigned long long 
  5082 ;;  ll              8    0        long long 
  5083 ;;  f               4    0        long long 
  5084 ;;  ct              3    0        unsigned char [3]
  5085 ;;  cp              2   65[BANK0 ] PTR unsigned char 
  5086 ;;		 -> ?_printf(2), STR_2(12), peakMax(4), freqMax(4), 
  5087 ;;  vp              2    0        PTR void 
  5088 ;;  i               2    0        int 
  5089 ;;  done            2    0        int 
  5090 ;;  c               1    0        unsigned char 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  2   51[BANK0 ] int 
  5093 ;; Registers used:
  5094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5100 ;;      Params:         0       2       0       0       0       0       0       0
  5101 ;;      Locals:         0      11       0       0       0       0       0       0
  5102 ;;      Temps:          0      12       0       0       0       0       0       0
  5103 ;;      Totals:         0      25       0       0       0       0       0       0
  5104 ;;Total ram usage:       25 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:    9
  5107 ;; This function calls:
  5108 ;;		_fputc
  5109 ;;		_stoa
  5110 ;;		_strncmp
  5111 ;;		_utoa
  5112 ;; This function is called by:
  5113 ;;		_vfprintf
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           
  5118                           ;psect for function _vfpfcnvrt
  5119  02EB                     _vfpfcnvrt:
  5120                           
  5121                           ;incstack = 0
  5122                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5123                           ;vfpfcnvrt@fp stored from wreg
  5124  02EB  0020               	movlb	0	; select bank0
  5125  02EC  00EB               	movwf	vfpfcnvrt@fp
  5126  02ED                     l1985:
  5127                           
  5128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  5129  02ED  0853               	movf	vfpfcnvrt@fmt,w
  5130  02EE  0086               	movwf	6
  5131  02EF  0187               	clrf	7
  5132  02F0  3F40               	moviw [0]fsr1
  5133  02F1  00D5               	movwf	??_vfpfcnvrt
  5134  02F2  3F41               	moviw [1]fsr1
  5135  02F3  00D6               	movwf	??_vfpfcnvrt+1
  5136  02F4  0855               	movf	??_vfpfcnvrt,w
  5137  02F5  0084               	movwf	4
  5138  02F6  0856               	movf	??_vfpfcnvrt+1,w
  5139  02F7  0085               	movwf	5
  5140  02F8  0012               	moviw fsr0++
  5141  02F9  3A25               	xorlw	37
  5142  02FA  1D03               	btfss	3,2
  5143  02FB  2AFD               	goto	u1251
  5144  02FC  2AFE               	goto	u1250
  5145  02FD                     u1251:
  5146  02FD  2C24               	goto	l2039
  5147  02FE                     u1250:
  5148  02FE                     l1987:
  5149                           
  5150                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  5151  02FE  0853               	movf	vfpfcnvrt@fmt,w
  5152  02FF  0086               	movwf	6
  5153  0300  0187               	clrf	7
  5154  0301  3001               	movlw	1
  5155  0302  0781               	addwf	1,f
  5156  0303  3141               	addfsr 1,1
  5157  0304  1803               	skipnc
  5158  0305  0A81               	incf	1,f
  5159  0306                     l1989:
  5160                           
  5161                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  5162  0306  0021               	movlb	1	; select bank1
  5163  0307  01E0               	clrf	_width^(0+128)
  5164  0308  01E1               	clrf	(_width+1)^(0+128)
  5165  0309  01F8               	clrf	_flags
  5166  030A  01F9               	clrf	_flags+1
  5167  030B                     l1991:
  5168                           
  5169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  5170  030B  30FF               	movlw	255
  5171  030C  00F6               	movwf	_prec
  5172  030D  30FF               	movlw	255
  5173  030E  00F7               	movwf	_prec+1
  5174  030F                     l1993:
  5175                           
  5176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  5177  030F  0020               	movlb	0	; select bank0
  5178  0310  0853               	movf	vfpfcnvrt@fmt,w
  5179  0311  0086               	movwf	6
  5180  0312  0187               	clrf	7
  5181  0313  3F40               	moviw [0]fsr1
  5182  0314  00D5               	movwf	??_vfpfcnvrt
  5183  0315  3F41               	moviw [1]fsr1
  5184  0316  00D6               	movwf	??_vfpfcnvrt+1
  5185  0317  0855               	movf	??_vfpfcnvrt,w
  5186  0318  0084               	movwf	4
  5187  0319  0856               	movf	??_vfpfcnvrt+1,w
  5188  031A  0085               	movwf	5
  5189  031B  0012               	moviw fsr0++
  5190  031C  3A73               	xorlw	115
  5191  031D  1D03               	btfss	3,2
  5192  031E  2B20               	goto	u1261
  5193  031F  2B21               	goto	u1260
  5194  0320                     u1261:
  5195  0320  2B43               	goto	l2003
  5196  0321                     u1260:
  5197  0321                     l1995:
  5198                           
  5199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  5200  0321  0853               	movf	vfpfcnvrt@fmt,w
  5201  0322  0086               	movwf	6
  5202  0323  0187               	clrf	7
  5203  0324  3001               	movlw	1
  5204  0325  0781               	addwf	1,f
  5205  0326  3141               	addfsr 1,1
  5206  0327  1803               	skipnc
  5207  0328  0A81               	incf	1,f
  5208  0329                     l1997:
  5209                           
  5210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5211  0329  0854               	movf	vfpfcnvrt@ap,w
  5212  032A  0086               	movwf	6
  5213  032B  0187               	clrf	7
  5214  032C  0801               	movf	1,w
  5215  032D  0084               	movwf	4
  5216  032E  0185               	clrf	5
  5217  032F  3002               	movlw	2
  5218  0330  0781               	addwf	1,f
  5219  0331  3F00               	moviw [0]fsr0
  5220  0332  00E1               	movwf	vfpfcnvrt@cp
  5221  0333  3F01               	moviw [1]fsr0
  5222  0334  00E2               	movwf	vfpfcnvrt@cp+1
  5223  0335                     l1999:
  5224                           
  5225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  5226  0335  0862               	movf	vfpfcnvrt@cp+1,w
  5227  0336  00AB               	movwf	stoa@s+1
  5228  0337  0861               	movf	vfpfcnvrt@cp,w
  5229  0338  00AA               	movwf	stoa@s
  5230  0339  086B               	movf	vfpfcnvrt@fp,w
  5231  033A  3185  2530  3182   	fcall	_stoa
  5232  033D  0020               	movlb	0	; select bank0
  5233  033E  082B               	movf	?_stoa+1,w
  5234  033F  00D4               	movwf	?_vfpfcnvrt+1
  5235  0340  082A               	movf	?_stoa,w
  5236  0341  00D3               	movwf	?_vfpfcnvrt
  5237  0342  2C47               	goto	l1065
  5238  0343                     l2003:
  5239                           
  5240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  5241  0343  0853               	movf	vfpfcnvrt@fmt,w
  5242  0344  0086               	movwf	6
  5243  0345  0187               	clrf	7
  5244  0346  3F40               	moviw [0]fsr1
  5245  0347  00D5               	movwf	??_vfpfcnvrt
  5246  0348  3F41               	moviw [1]fsr1
  5247  0349  00D6               	movwf	??_vfpfcnvrt+1
  5248  034A  0855               	movf	??_vfpfcnvrt,w
  5249  034B  0084               	movwf	4
  5250  034C  0856               	movf	??_vfpfcnvrt+1,w
  5251  034D  0085               	movwf	5
  5252  034E  0012               	moviw fsr0++
  5253  034F  3A75               	xorlw	117
  5254  0350  1D03               	btfss	3,2
  5255  0351  2B53               	goto	u1271
  5256  0352  2B54               	goto	u1270
  5257  0353                     u1271:
  5258  0353  2B88               	goto	l2013
  5259  0354                     u1270:
  5260  0354                     l2005:
  5261                           
  5262                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  5263  0354  0853               	movf	vfpfcnvrt@fmt,w
  5264  0355  0086               	movwf	6
  5265  0356  0187               	clrf	7
  5266  0357  3001               	movlw	1
  5267  0358  0781               	addwf	1,f
  5268  0359  3141               	addfsr 1,1
  5269  035A  1803               	skipnc
  5270  035B  0A81               	incf	1,f
  5271  035C                     l2007:
  5272                           
  5273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5274  035C  0854               	movf	vfpfcnvrt@ap,w
  5275  035D  0086               	movwf	6
  5276  035E  0187               	clrf	7
  5277  035F  0801               	movf	1,w
  5278  0360  0084               	movwf	4
  5279  0361  0185               	clrf	5
  5280  0362  3002               	movlw	2
  5281  0363  0781               	addwf	1,f
  5282  0364  3F00               	moviw [0]fsr0
  5283  0365  00E3               	movwf	vfpfcnvrt@llu
  5284  0366  3F01               	moviw [1]fsr0
  5285  0367  00E4               	movwf	vfpfcnvrt@llu+1
  5286  0368  01E5               	clrf	vfpfcnvrt@llu+2
  5287  0369  01E6               	clrf	vfpfcnvrt@llu+3
  5288  036A  01E7               	clrf	vfpfcnvrt@llu+4
  5289  036B  01E8               	clrf	vfpfcnvrt@llu+5
  5290  036C  01E9               	clrf	vfpfcnvrt@llu+6
  5291  036D  01EA               	clrf	vfpfcnvrt@llu+7
  5292  036E                     l2009:
  5293                           
  5294                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1187:            
      +                           return utoa(fp, llu);
  5295  036E  0863               	movf	vfpfcnvrt@llu,w
  5296  036F  00BB               	movwf	utoa@d
  5297  0370  0864               	movf	vfpfcnvrt@llu+1,w
  5298  0371  00BC               	movwf	utoa@d+1
  5299  0372  0865               	movf	vfpfcnvrt@llu+2,w
  5300  0373  00BD               	movwf	utoa@d+2
  5301  0374  0866               	movf	vfpfcnvrt@llu+3,w
  5302  0375  00BE               	movwf	utoa@d+3
  5303  0376  0867               	movf	vfpfcnvrt@llu+4,w
  5304  0377  00BF               	movwf	utoa@d+4
  5305  0378  0868               	movf	vfpfcnvrt@llu+5,w
  5306  0379  00C0               	movwf	utoa@d+5
  5307  037A  0869               	movf	vfpfcnvrt@llu+6,w
  5308  037B  00C1               	movwf	utoa@d+6
  5309  037C  086A               	movf	vfpfcnvrt@llu+7,w
  5310  037D  00C2               	movwf	utoa@d+7
  5311  037E  086B               	movf	vfpfcnvrt@fp,w
  5312  037F  3184  2448  3182   	fcall	_utoa
  5313  0382  0020               	movlb	0	; select bank0
  5314  0383  083C               	movf	?_utoa+1,w
  5315  0384  00D4               	movwf	?_vfpfcnvrt+1
  5316  0385  083B               	movf	?_utoa,w
  5317  0386  00D3               	movwf	?_vfpfcnvrt
  5318  0387  2C47               	goto	l1065
  5319  0388                     l2013:
  5320                           
  5321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1192:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  5322  0388  0853               	movf	vfpfcnvrt@fmt,w
  5323  0389  0086               	movwf	6
  5324  038A  0187               	clrf	7
  5325  038B  3F40               	moviw [0]fsr1
  5326  038C  00A0               	movwf	strncmp@_l
  5327  038D  3F41               	moviw [1]fsr1
  5328  038E  00A1               	movwf	strncmp@_l+1
  5329  038F  3064               	movlw	low (STR_4| (0+32768))
  5330  0390  00A2               	movwf	strncmp@_r
  5331  0391  3088               	movlw	high (STR_4| (0+32768))
  5332  0392  00A3               	movwf	strncmp@_r+1
  5333  0393  3002               	movlw	2
  5334  0394  00A4               	movwf	strncmp@n
  5335  0395  3000               	movlw	0
  5336  0396  00A5               	movwf	strncmp@n+1
  5337  0397  3186  26F5  3182   	fcall	_strncmp
  5338  039A  0020               	movlb	0	; select bank0
  5339  039B  0820               	movf	?_strncmp,w
  5340  039C  0421               	iorwf	?_strncmp+1,w
  5341  039D  1D03               	btfss	3,2
  5342  039E  2BA0               	goto	u1281
  5343  039F  2BA1               	goto	u1280
  5344  03A0                     u1281:
  5345  03A0  2BEF               	goto	l2023
  5346  03A1                     u1280:
  5347  03A1                     l2015:
  5348                           
  5349                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1194:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  5350  03A1  0853               	movf	vfpfcnvrt@fmt,w
  5351  03A2  0086               	movwf	6
  5352  03A3  0187               	clrf	7
  5353  03A4  3002               	movlw	2
  5354  03A5  0781               	addwf	1,f
  5355  03A6  3141               	addfsr 1,1
  5356  03A7  1803               	skipnc
  5357  03A8  0A81               	incf	1,f
  5358  03A9                     l2017:
  5359                           
  5360                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1195:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  5361  03A9  0854               	movf	vfpfcnvrt@ap,w
  5362  03AA  0086               	movwf	6
  5363  03AB  0187               	clrf	7
  5364  03AC  0801               	movf	1,w
  5365  03AD  0084               	movwf	4
  5366  03AE  0185               	clrf	5
  5367  03AF  3004               	movlw	4
  5368  03B0  0781               	addwf	1,f
  5369  03B1  3F00               	moviw [0]fsr0
  5370  03B2  00D5               	movwf	??_vfpfcnvrt
  5371  03B3  3F01               	moviw [1]fsr0
  5372  03B4  00D6               	movwf	??_vfpfcnvrt+1
  5373  03B5  3F02               	moviw [2]fsr0
  5374  03B6  00D7               	movwf	??_vfpfcnvrt+2
  5375  03B7  3F03               	moviw [3]fsr0
  5376  03B8  00D8               	movwf	??_vfpfcnvrt+3
  5377  03B9  0855               	movf	??_vfpfcnvrt,w
  5378  03BA  00D9               	movwf	??_vfpfcnvrt+4
  5379  03BB  0856               	movf	??_vfpfcnvrt+1,w
  5380  03BC  00DA               	movwf	??_vfpfcnvrt+5
  5381  03BD  0857               	movf	??_vfpfcnvrt+2,w
  5382  03BE  00DB               	movwf	??_vfpfcnvrt+6
  5383  03BF  0858               	movf	??_vfpfcnvrt+3,w
  5384  03C0  00DC               	movwf	??_vfpfcnvrt+7
  5385  03C1  01DD               	clrf	??_vfpfcnvrt+8
  5386  03C2  01DE               	clrf	??_vfpfcnvrt+9
  5387  03C3  01DF               	clrf	??_vfpfcnvrt+10
  5388  03C4  01E0               	clrf	??_vfpfcnvrt+11
  5389  03C5  0860               	movf	??_vfpfcnvrt+11,w
  5390  03C6  00EA               	movwf	vfpfcnvrt@llu+7
  5391  03C7  085F               	movf	??_vfpfcnvrt+10,w
  5392  03C8  00E9               	movwf	vfpfcnvrt@llu+6
  5393  03C9  085E               	movf	??_vfpfcnvrt+9,w
  5394  03CA  00E8               	movwf	vfpfcnvrt@llu+5
  5395  03CB  085D               	movf	??_vfpfcnvrt+8,w
  5396  03CC  00E7               	movwf	vfpfcnvrt@llu+4
  5397  03CD  085C               	movf	??_vfpfcnvrt+7,w
  5398  03CE  00E6               	movwf	vfpfcnvrt@llu+3
  5399  03CF  085B               	movf	??_vfpfcnvrt+6,w
  5400  03D0  00E5               	movwf	vfpfcnvrt@llu+2
  5401  03D1  085A               	movf	??_vfpfcnvrt+5,w
  5402  03D2  00E4               	movwf	vfpfcnvrt@llu+1
  5403  03D3  0859               	movf	??_vfpfcnvrt+4,w
  5404  03D4  00E3               	movwf	vfpfcnvrt@llu
  5405  03D5                     l2019:
  5406                           
  5407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1197:            
      +                           return utoa(fp, llu);
  5408  03D5  0863               	movf	vfpfcnvrt@llu,w
  5409  03D6  00BB               	movwf	utoa@d
  5410  03D7  0864               	movf	vfpfcnvrt@llu+1,w
  5411  03D8  00BC               	movwf	utoa@d+1
  5412  03D9  0865               	movf	vfpfcnvrt@llu+2,w
  5413  03DA  00BD               	movwf	utoa@d+2
  5414  03DB  0866               	movf	vfpfcnvrt@llu+3,w
  5415  03DC  00BE               	movwf	utoa@d+3
  5416  03DD  0867               	movf	vfpfcnvrt@llu+4,w
  5417  03DE  00BF               	movwf	utoa@d+4
  5418  03DF  0868               	movf	vfpfcnvrt@llu+5,w
  5419  03E0  00C0               	movwf	utoa@d+5
  5420  03E1  0869               	movf	vfpfcnvrt@llu+6,w
  5421  03E2  00C1               	movwf	utoa@d+6
  5422  03E3  086A               	movf	vfpfcnvrt@llu+7,w
  5423  03E4  00C2               	movwf	utoa@d+7
  5424  03E5  086B               	movf	vfpfcnvrt@fp,w
  5425  03E6  3184  2448  3182   	fcall	_utoa
  5426  03E9  0020               	movlb	0	; select bank0
  5427  03EA  083C               	movf	?_utoa+1,w
  5428  03EB  00D4               	movwf	?_vfpfcnvrt+1
  5429  03EC  083B               	movf	?_utoa,w
  5430  03ED  00D3               	movwf	?_vfpfcnvrt
  5431  03EE  2C47               	goto	l1065
  5432  03EF                     l2023:
  5433                           
  5434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  5435  03EF  0853               	movf	vfpfcnvrt@fmt,w
  5436  03F0  0086               	movwf	6
  5437  03F1  0187               	clrf	7
  5438  03F2  3F40               	moviw [0]fsr1
  5439  03F3  00D5               	movwf	??_vfpfcnvrt
  5440  03F4  3F41               	moviw [1]fsr1
  5441  03F5  00D6               	movwf	??_vfpfcnvrt+1
  5442  03F6  0855               	movf	??_vfpfcnvrt,w
  5443  03F7  0084               	movwf	4
  5444  03F8  0856               	movf	??_vfpfcnvrt+1,w
  5445  03F9  0085               	movwf	5
  5446  03FA  0012               	moviw fsr0++
  5447  03FB  3A25               	xorlw	37
  5448  03FC  1D03               	btfss	3,2
  5449  03FD  2BFF               	goto	u1291
  5450  03FE  2C00               	goto	u1290
  5451  03FF                     u1291:
  5452  03FF  2C19               	goto	l2033
  5453  0400                     u1290:
  5454  0400                     l2025:
  5455                           
  5456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  5457  0400  0853               	movf	vfpfcnvrt@fmt,w
  5458  0401  0086               	movwf	6
  5459  0402  0187               	clrf	7
  5460  0403  3001               	movlw	1
  5461  0404  0781               	addwf	1,f
  5462  0405  3141               	addfsr 1,1
  5463  0406  1803               	skipnc
  5464  0407  0A81               	incf	1,f
  5465  0408                     l2027:
  5466                           
  5467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  5468  0408  3025               	movlw	37
  5469  0409  00A2               	movwf	fputc@c
  5470  040A  3000               	movlw	0
  5471  040B  00A3               	movwf	fputc@c+1
  5472  040C  086B               	movf	vfpfcnvrt@fp,w
  5473  040D  00D5               	movwf	??_vfpfcnvrt
  5474  040E  0855               	movf	??_vfpfcnvrt,w
  5475  040F  00A4               	movwf	fputc@fp
  5476  0410  318F  2766  3182   	fcall	_fputc
  5477  0413                     l2029:
  5478                           
  5479                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  5480  0413  3001               	movlw	1
  5481  0414  0020               	movlb	0	; select bank0
  5482  0415  00D3               	movwf	?_vfpfcnvrt
  5483  0416  3000               	movlw	0
  5484  0417  00D4               	movwf	?_vfpfcnvrt+1
  5485  0418  2C47               	goto	l1065
  5486  0419                     l2033:
  5487                           
  5488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  5489  0419  0853               	movf	vfpfcnvrt@fmt,w
  5490  041A  0086               	movwf	6
  5491  041B  0187               	clrf	7
  5492  041C  3001               	movlw	1
  5493  041D  0781               	addwf	1,f
  5494  041E  3141               	addfsr 1,1
  5495  041F  1803               	skipnc
  5496  0420  0A81               	incf	1,f
  5497  0421                     l2035:
  5498                           
  5499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  5500  0421  01D3               	clrf	?_vfpfcnvrt
  5501  0422  01D4               	clrf	?_vfpfcnvrt+1
  5502  0423  2C47               	goto	l1065
  5503  0424                     l2039:
  5504                           
  5505                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  5506  0424  0853               	movf	vfpfcnvrt@fmt,w
  5507  0425  0086               	movwf	6
  5508  0426  0187               	clrf	7
  5509  0427  3F40               	moviw [0]fsr1
  5510  0428  00D5               	movwf	??_vfpfcnvrt
  5511  0429  3F41               	moviw [1]fsr1
  5512  042A  00D6               	movwf	??_vfpfcnvrt+1
  5513  042B  0855               	movf	??_vfpfcnvrt,w
  5514  042C  0084               	movwf	4
  5515  042D  0856               	movf	??_vfpfcnvrt+1,w
  5516  042E  0085               	movwf	5
  5517  042F  0800               	movf	0,w	;code access
  5518  0430  00D7               	movwf	??_vfpfcnvrt+2
  5519  0431  01D8               	clrf	??_vfpfcnvrt+3
  5520  0432  0857               	movf	??_vfpfcnvrt+2,w
  5521  0433  00A2               	movwf	fputc@c
  5522  0434  0858               	movf	??_vfpfcnvrt+3,w
  5523  0435  00A3               	movwf	fputc@c+1
  5524  0436  086B               	movf	vfpfcnvrt@fp,w
  5525  0437  00D9               	movwf	??_vfpfcnvrt+4
  5526  0438  0859               	movf	??_vfpfcnvrt+4,w
  5527  0439  00A4               	movwf	fputc@fp
  5528  043A  318F  2766  3182   	fcall	_fputc
  5529  043D                     l2041:
  5530                           
  5531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5532  043D  0020               	movlb	0	; select bank0
  5533  043E  0853               	movf	vfpfcnvrt@fmt,w
  5534  043F  0086               	movwf	6
  5535  0440  0187               	clrf	7
  5536  0441  3001               	movlw	1
  5537  0442  0781               	addwf	1,f
  5538  0443  3141               	addfsr 1,1
  5539  0444  1803               	skipnc
  5540  0445  0A81               	incf	1,f
  5541  0446  2C13               	goto	l2029
  5542  0447                     l1065:
  5543  0447  0008               	return
  5544  0448                     __end_of_vfpfcnvrt:
  5545                           
  5546                           	psect	text4
  5547  0448                     __ptext4:	
  5548 ;; *************** function _utoa *****************
  5549 ;; Defined at:
  5550 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;  fp              1    wreg     PTR struct _IO_FILE
  5553 ;;		 -> NULL(0), 
  5554 ;;  d               8   27[BANK0 ] unsigned long long 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  fp              1   40[BANK0 ] PTR struct _IO_FILE
  5557 ;;		 -> NULL(0), 
  5558 ;;  n               8   41[BANK0 ] unsigned long long 
  5559 ;;  i               2   49[BANK0 ] int 
  5560 ;;  w               2   38[BANK0 ] int 
  5561 ;;  p               2   36[BANK0 ] int 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  2   27[BANK0 ] int 
  5564 ;; Registers used:
  5565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5571 ;;      Params:         0       8       0       0       0       0       0       0
  5572 ;;      Locals:         0      15       0       0       0       0       0       0
  5573 ;;      Temps:          0       1       0       0       0       0       0       0
  5574 ;;      Totals:         0      24       0       0       0       0       0       0
  5575 ;;Total ram usage:       24 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; Hardware stack levels required when called:    8
  5578 ;; This function calls:
  5579 ;;		___lodiv
  5580 ;;		___lomod
  5581 ;;		_pad
  5582 ;; This function is called by:
  5583 ;;		_vfpfcnvrt
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           
  5588                           ;psect for function _utoa
  5589  0448                     _utoa:
  5590                           
  5591                           ;incstack = 0
  5592                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5593                           ;utoa@fp stored from wreg
  5594  0448  0020               	movlb	0	; select bank0
  5595  0449  00C8               	movwf	utoa@fp
  5596  044A                     l1919:
  5597                           
  5598                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  5599  044A  1BF7               	btfsc	_prec+1,7
  5600  044B  2C4D               	goto	u1131
  5601  044C  2C4E               	goto	u1130
  5602  044D                     u1131:
  5603  044D  2C52               	goto	l1048
  5604  044E                     u1130:
  5605  044E                     l1921:
  5606                           
  5607                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  5608  044E  30FD               	movlw	253
  5609  044F  05F8               	andwf	_flags,f
  5610  0450  30FF               	movlw	255
  5611  0451  05F9               	andwf	_flags+1,f
  5612  0452                     l1048:	
  5613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 601:     }
  5614                           
  5615                           
  5616                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  5617  0452  0877               	movf	_prec+1,w
  5618  0453  3A80               	xorlw	128
  5619  0454  00C3               	movwf	??_utoa
  5620  0455  3080               	movlw	128
  5621  0456  0243               	subwf	??_utoa,w
  5622  0457  1D03               	skipz
  5623  0458  2C5B               	goto	u1145
  5624  0459  3001               	movlw	1
  5625  045A  0276               	subwf	_prec,w
  5626  045B                     u1145:
  5627  045B  1803               	skipnc
  5628  045C  2C5E               	goto	u1141
  5629  045D  2C5F               	goto	u1140
  5630  045E                     u1141:
  5631  045E  2C65               	goto	l1925
  5632  045F                     u1140:
  5633  045F                     l1923:
  5634  045F  3001               	movlw	1
  5635  0460  0020               	movlb	0	; select bank0
  5636  0461  00C4               	movwf	utoa@p
  5637  0462  3000               	movlw	0
  5638  0463  00C5               	movwf	utoa@p+1
  5639  0464  2C6A               	goto	l1052
  5640  0465                     l1925:
  5641  0465  0877               	movf	_prec+1,w
  5642  0466  0020               	movlb	0	; select bank0
  5643  0467  00C5               	movwf	utoa@p+1
  5644  0468  0876               	movf	_prec,w
  5645  0469  00C4               	movwf	utoa@p
  5646  046A                     l1052:
  5647                           
  5648                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  5649  046A  0021               	movlb	1	; select bank1
  5650  046B  0861               	movf	(_width+1)^(0+128),w
  5651  046C  0020               	movlb	0	; select bank0
  5652  046D  00C7               	movwf	utoa@w+1
  5653  046E  0021               	movlb	1	; select bank1
  5654  046F  0860               	movf	_width^(0+128),w
  5655  0470  0020               	movlb	0	; select bank0
  5656  0471  00C6               	movwf	utoa@w
  5657  0472                     l1927:
  5658                           
  5659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  5660  0472  083B               	movf	utoa@d,w
  5661  0473  00C9               	movwf	utoa@n
  5662  0474  083C               	movf	utoa@d+1,w
  5663  0475  00CA               	movwf	utoa@n+1
  5664  0476  083D               	movf	utoa@d+2,w
  5665  0477  00CB               	movwf	utoa@n+2
  5666  0478  083E               	movf	utoa@d+3,w
  5667  0479  00CC               	movwf	utoa@n+3
  5668  047A  083F               	movf	utoa@d+4,w
  5669  047B  00CD               	movwf	utoa@n+4
  5670  047C  0840               	movf	utoa@d+5,w
  5671  047D  00CE               	movwf	utoa@n+5
  5672  047E  0841               	movf	utoa@d+6,w
  5673  047F  00CF               	movwf	utoa@n+6
  5674  0480  0842               	movf	utoa@d+7,w
  5675  0481  00D0               	movwf	utoa@n+7
  5676                           
  5677                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  5678  0482  301F               	movlw	31
  5679  0483  00D1               	movwf	utoa@i
  5680  0484  3000               	movlw	0
  5681  0485  00D2               	movwf	utoa@i+1
  5682  0486                     l1929:
  5683                           
  5684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  5685  0486  0022               	movlb	2	; select bank2
  5686  0487  01D1               	clrf	(_dbuf^(0+256)+31)
  5687                           
  5688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5689  0488  2CEA               	goto	l1941
  5690  0489                     l1931:
  5691                           
  5692                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  5693  0489  30FF               	movlw	255
  5694  048A  0020               	movlb	0	; select bank0
  5695  048B  07D1               	addwf	utoa@i,f
  5696  048C  30FF               	movlw	255
  5697  048D  3DD2               	addwfc	utoa@i+1,f
  5698  048E                     l1933:
  5699                           
  5700                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  5701  048E  300A               	movlw	10
  5702  048F  00A0               	movwf	___lomod@divisor
  5703  0490  01A1               	clrf	___lomod@divisor+1
  5704  0491  01A2               	clrf	___lomod@divisor+2
  5705  0492  01A3               	clrf	___lomod@divisor+3
  5706  0493  01A4               	clrf	___lomod@divisor+4
  5707  0494  01A5               	clrf	___lomod@divisor+5
  5708  0495  01A6               	clrf	___lomod@divisor+6
  5709  0496  01A7               	clrf	___lomod@divisor+7
  5710  0497  0849               	movf	utoa@n,w
  5711  0498  00A8               	movwf	___lomod@dividend
  5712  0499  084A               	movf	utoa@n+1,w
  5713  049A  00A9               	movwf	___lomod@dividend+1
  5714  049B  084B               	movf	utoa@n+2,w
  5715  049C  00AA               	movwf	___lomod@dividend+2
  5716  049D  084C               	movf	utoa@n+3,w
  5717  049E  00AB               	movwf	___lomod@dividend+3
  5718  049F  084D               	movf	utoa@n+4,w
  5719  04A0  00AC               	movwf	___lomod@dividend+4
  5720  04A1  084E               	movf	utoa@n+5,w
  5721  04A2  00AD               	movwf	___lomod@dividend+5
  5722  04A3  084F               	movf	utoa@n+6,w
  5723  04A4  00AE               	movwf	___lomod@dividend+6
  5724  04A5  0850               	movf	utoa@n+7,w
  5725  04A6  00AF               	movwf	___lomod@dividend+7
  5726  04A7  3186  2684  3184   	fcall	___lomod
  5727  04AA  0020               	movlb	0	; select bank0
  5728  04AB  0820               	movf	?___lomod,w
  5729  04AC  3E30               	addlw	48
  5730  04AD  00C3               	movwf	??_utoa
  5731  04AE  0851               	movf	utoa@i,w
  5732  04AF  3E32               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5733  04B0  0086               	movwf	6
  5734  04B1  3001               	movlw	1	; select bank2/3
  5735  04B2  0087               	movwf	7
  5736  04B3  0843               	movf	??_utoa,w
  5737  04B4  0081               	movwf	1
  5738  04B5                     l1935:
  5739                           
  5740                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  5741  04B5  30FF               	movlw	255
  5742  04B6  07C4               	addwf	utoa@p,f
  5743  04B7  30FF               	movlw	255
  5744  04B8  3DC5               	addwfc	utoa@p+1,f
  5745  04B9                     l1937:
  5746                           
  5747                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  5748  04B9  30FF               	movlw	255
  5749  04BA  07C6               	addwf	utoa@w,f
  5750  04BB  30FF               	movlw	255
  5751  04BC  3DC7               	addwfc	utoa@w+1,f
  5752  04BD                     l1939:
  5753                           
  5754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  5755  04BD  300A               	movlw	10
  5756  04BE  00A0               	movwf	___lodiv@divisor
  5757  04BF  01A1               	clrf	___lodiv@divisor+1
  5758  04C0  01A2               	clrf	___lodiv@divisor+2
  5759  04C1  01A3               	clrf	___lodiv@divisor+3
  5760  04C2  01A4               	clrf	___lodiv@divisor+4
  5761  04C3  01A5               	clrf	___lodiv@divisor+5
  5762  04C4  01A6               	clrf	___lodiv@divisor+6
  5763  04C5  01A7               	clrf	___lodiv@divisor+7
  5764  04C6  0849               	movf	utoa@n,w
  5765  04C7  00A8               	movwf	___lodiv@dividend
  5766  04C8  084A               	movf	utoa@n+1,w
  5767  04C9  00A9               	movwf	___lodiv@dividend+1
  5768  04CA  084B               	movf	utoa@n+2,w
  5769  04CB  00AA               	movwf	___lodiv@dividend+2
  5770  04CC  084C               	movf	utoa@n+3,w
  5771  04CD  00AB               	movwf	___lodiv@dividend+3
  5772  04CE  084D               	movf	utoa@n+4,w
  5773  04CF  00AC               	movwf	___lodiv@dividend+4
  5774  04D0  084E               	movf	utoa@n+5,w
  5775  04D1  00AD               	movwf	___lodiv@dividend+5
  5776  04D2  084F               	movf	utoa@n+6,w
  5777  04D3  00AE               	movwf	___lodiv@dividend+6
  5778  04D4  0850               	movf	utoa@n+7,w
  5779  04D5  00AF               	movwf	___lodiv@dividend+7
  5780  04D6  3186  2600  3184   	fcall	___lodiv
  5781  04D9  0020               	movlb	0	; select bank0
  5782  04DA  0820               	movf	?___lodiv,w
  5783  04DB  00C9               	movwf	utoa@n
  5784  04DC  0821               	movf	?___lodiv+1,w
  5785  04DD  00CA               	movwf	utoa@n+1
  5786  04DE  0822               	movf	?___lodiv+2,w
  5787  04DF  00CB               	movwf	utoa@n+2
  5788  04E0  0823               	movf	?___lodiv+3,w
  5789  04E1  00CC               	movwf	utoa@n+3
  5790  04E2  0824               	movf	?___lodiv+4,w
  5791  04E3  00CD               	movwf	utoa@n+4
  5792  04E4  0825               	movf	?___lodiv+5,w
  5793  04E5  00CE               	movwf	utoa@n+5
  5794  04E6  0826               	movf	?___lodiv+6,w
  5795  04E7  00CF               	movwf	utoa@n+6
  5796  04E8  0827               	movf	?___lodiv+7,w
  5797  04E9  00D0               	movwf	utoa@n+7
  5798  04EA                     l1941:
  5799                           
  5800                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5801  04EA  0020               	movlb	0	; select bank0
  5802  04EB  0851               	movf	utoa@i,w
  5803  04EC  0452               	iorwf	utoa@i+1,w
  5804  04ED  1903               	btfsc	3,2
  5805  04EE  2CF0               	goto	u1151
  5806  04EF  2CF1               	goto	u1150
  5807  04F0                     u1151:
  5808  04F0  2D1C               	goto	l1951
  5809  04F1                     u1150:
  5810  04F1                     l1943:
  5811  04F1  0849               	movf	utoa@n,w
  5812  04F2  044A               	iorwf	utoa@n+1,w
  5813  04F3  044B               	iorwf	utoa@n+2,w
  5814  04F4  044C               	iorwf	utoa@n+3,w
  5815  04F5  044D               	iorwf	utoa@n+4,w
  5816  04F6  044E               	iorwf	utoa@n+5,w
  5817  04F7  044F               	iorwf	utoa@n+6,w
  5818  04F8  0450               	iorwf	utoa@n+7,w
  5819  04F9  1D03               	skipz
  5820  04FA  2CFC               	goto	u1161
  5821  04FB  2CFD               	goto	u1160
  5822  04FC                     u1161:
  5823  04FC  2C89               	goto	l1931
  5824  04FD                     u1160:
  5825  04FD                     l1945:
  5826  04FD  0845               	movf	utoa@p+1,w
  5827  04FE  3A80               	xorlw	128
  5828  04FF  00C3               	movwf	??_utoa
  5829  0500  3080               	movlw	128
  5830  0501  0243               	subwf	??_utoa,w
  5831  0502  1D03               	skipz
  5832  0503  2D06               	goto	u1175
  5833  0504  3001               	movlw	1
  5834  0505  0244               	subwf	utoa@p,w
  5835  0506                     u1175:
  5836  0506  1803               	skipnc
  5837  0507  2D09               	goto	u1171
  5838  0508  2D0A               	goto	u1170
  5839  0509                     u1171:
  5840  0509  2C89               	goto	l1931
  5841  050A                     u1170:
  5842  050A                     l1947:
  5843  050A  0020               	movlb	0	; select bank0
  5844  050B  0847               	movf	utoa@w+1,w
  5845  050C  3A80               	xorlw	128
  5846  050D  00C3               	movwf	??_utoa
  5847  050E  3080               	movlw	128
  5848  050F  0243               	subwf	??_utoa,w
  5849  0510  1D03               	skipz
  5850  0511  2D14               	goto	u1185
  5851  0512  3001               	movlw	1
  5852  0513  0246               	subwf	utoa@w,w
  5853  0514                     u1185:
  5854  0514  1C03               	skipc
  5855  0515  2D17               	goto	u1181
  5856  0516  2D18               	goto	u1180
  5857  0517                     u1181:
  5858  0517  2D1C               	goto	l1951
  5859  0518                     u1180:
  5860  0518                     l1949:
  5861  0518  18F8               	btfsc	_flags,1
  5862  0519  2D1B               	goto	u1191
  5863  051A  2D1C               	goto	u1190
  5864  051B                     u1191:
  5865  051B  2C89               	goto	l1931
  5866  051C                     u1190:
  5867  051C                     l1951:
  5868                           
  5869                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  5870  051C  0020               	movlb	0	; select bank0
  5871  051D  0851               	movf	utoa@i,w
  5872  051E  3E32               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5873  051F  00C3               	movwf	??_utoa
  5874  0520  0843               	movf	??_utoa,w
  5875  0521  00B2               	movwf	pad@buf
  5876  0522  0847               	movf	utoa@w+1,w
  5877  0523  00B4               	movwf	pad@p+1
  5878  0524  0846               	movf	utoa@w,w
  5879  0525  00B3               	movwf	pad@p
  5880  0526  0848               	movf	utoa@fp,w
  5881  0527  318F  27A7  3184   	fcall	_pad
  5882  052A  0020               	movlb	0	; select bank0
  5883  052B  0833               	movf	?_pad+1,w
  5884  052C  00BC               	movwf	?_utoa+1
  5885  052D  0832               	movf	?_pad,w
  5886  052E  00BB               	movwf	?_utoa
  5887  052F                     l1060:
  5888  052F  0008               	return
  5889  0530                     __end_of_utoa:
  5890                           
  5891                           	psect	text5
  5892  0FA7                     __ptext5:	
  5893 ;; *************** function _pad *****************
  5894 ;; Defined at:
  5895 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  fp              1    wreg     PTR struct _IO_FILE
  5898 ;;		 -> NULL(0), 
  5899 ;;  buf             1   18[BANK0 ] PTR unsigned char 
  5900 ;;		 -> dbuf(32), 
  5901 ;;  p               2   19[BANK0 ] int 
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;  fp              1   26[BANK0 ] PTR struct _IO_FILE
  5904 ;;		 -> NULL(0), 
  5905 ;;  w               2   24[BANK0 ] int 
  5906 ;;  i               2   22[BANK0 ] int 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  2   18[BANK0 ] int 
  5909 ;; Registers used:
  5910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5916 ;;      Params:         0       3       0       0       0       0       0       0
  5917 ;;      Locals:         0       5       0       0       0       0       0       0
  5918 ;;      Temps:          0       1       0       0       0       0       0       0
  5919 ;;      Totals:         0       9       0       0       0       0       0       0
  5920 ;;Total ram usage:        9 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    7
  5923 ;; This function calls:
  5924 ;;		_fputc
  5925 ;;		_fputs
  5926 ;;		_strlen
  5927 ;; This function is called by:
  5928 ;;		_utoa
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           
  5933                           ;psect for function _pad
  5934  0FA7                     _pad:
  5935                           
  5936                           ;incstack = 0
  5937                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5938                           ;pad@fp stored from wreg
  5939  0FA7  0020               	movlb	0	; select bank0
  5940  0FA8  00BA               	movwf	pad@fp
  5941  0FA9                     l1847:
  5942                           
  5943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5944  0FA9  1C78               	btfss	_flags,0
  5945  0FAA  2FAC               	goto	u1001
  5946  0FAB  2FAD               	goto	u1000
  5947  0FAC                     u1001:
  5948  0FAC  2FB5               	goto	l1851
  5949  0FAD                     u1000:
  5950  0FAD                     l1849:
  5951                           
  5952                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5953  0FAD  083A               	movf	pad@fp,w
  5954  0FAE  00B5               	movwf	??_pad
  5955  0FAF  0835               	movf	??_pad,w
  5956  0FB0  00AA               	movwf	fputs@fp
  5957  0FB1  0832               	movf	pad@buf,w
  5958  0FB2  318E  26A4  318F   	fcall	_fputs
  5959  0FB5                     l1851:
  5960                           
  5961                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5962  0FB5  0020               	movlb	0	; select bank0
  5963  0FB6  1BB4               	btfsc	pad@p+1,7
  5964  0FB7  2FB9               	goto	u1011
  5965  0FB8  2FBA               	goto	u1010
  5966  0FB9                     u1011:
  5967  0FB9  2FBF               	goto	l1855
  5968  0FBA                     u1010:
  5969  0FBA                     l1853:
  5970  0FBA  0834               	movf	pad@p+1,w
  5971  0FBB  00B9               	movwf	pad@w+1
  5972  0FBC  0833               	movf	pad@p,w
  5973  0FBD  00B8               	movwf	pad@w
  5974  0FBE  2FC1               	goto	l1017
  5975  0FBF                     l1855:
  5976  0FBF  01B8               	clrf	pad@w
  5977  0FC0  01B9               	clrf	pad@w+1
  5978  0FC1                     l1017:
  5979                           
  5980                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5981  0FC1  01B6               	clrf	pad@i
  5982  0FC2  01B7               	clrf	pad@i+1
  5983                           
  5984                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5985  0FC3  2FD5               	goto	l1861
  5986  0FC4                     l1857:
  5987                           
  5988                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5989  0FC4  3020               	movlw	32
  5990  0FC5  0020               	movlb	0	; select bank0
  5991  0FC6  00A2               	movwf	fputc@c
  5992  0FC7  3000               	movlw	0
  5993  0FC8  00A3               	movwf	fputc@c+1
  5994  0FC9  083A               	movf	pad@fp,w
  5995  0FCA  00B5               	movwf	??_pad
  5996  0FCB  0835               	movf	??_pad,w
  5997  0FCC  00A4               	movwf	fputc@fp
  5998  0FCD  318F  2766  318F   	fcall	_fputc
  5999  0FD0                     l1859:
  6000                           
  6001                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6002  0FD0  3001               	movlw	1
  6003  0FD1  0020               	movlb	0	; select bank0
  6004  0FD2  07B6               	addwf	pad@i,f
  6005  0FD3  3000               	movlw	0
  6006  0FD4  3DB7               	addwfc	pad@i+1,f
  6007  0FD5                     l1861:
  6008                           
  6009                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6010  0FD5  0837               	movf	pad@i+1,w
  6011  0FD6  3A80               	xorlw	128
  6012  0FD7  00B5               	movwf	??_pad
  6013  0FD8  0839               	movf	pad@w+1,w
  6014  0FD9  3A80               	xorlw	128
  6015  0FDA  0235               	subwf	??_pad,w
  6016  0FDB  1D03               	skipz
  6017  0FDC  2FDF               	goto	u1025
  6018  0FDD  0838               	movf	pad@w,w
  6019  0FDE  0236               	subwf	pad@i,w
  6020  0FDF                     u1025:
  6021  0FDF  1C03               	skipc
  6022  0FE0  2FE2               	goto	u1021
  6023  0FE1  2FE3               	goto	u1020
  6024  0FE2                     u1021:
  6025  0FE2  2FC4               	goto	l1857
  6026  0FE3                     u1020:
  6027  0FE3                     l1020:
  6028                           
  6029                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6030  0FE3  1878               	btfsc	_flags,0
  6031  0FE4  2FE6               	goto	u1031
  6032  0FE5  2FE7               	goto	u1030
  6033  0FE6                     u1031:
  6034  0FE6  2FF0               	goto	l1865
  6035  0FE7                     u1030:
  6036  0FE7                     l1863:
  6037                           
  6038                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6039  0FE7  0020               	movlb	0	; select bank0
  6040  0FE8  083A               	movf	pad@fp,w
  6041  0FE9  00B5               	movwf	??_pad
  6042  0FEA  0835               	movf	??_pad,w
  6043  0FEB  00AA               	movwf	fputs@fp
  6044  0FEC  0832               	movf	pad@buf,w
  6045  0FED  318E  26A4  318F   	fcall	_fputs
  6046  0FF0                     l1865:
  6047                           
  6048                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  6049  0FF0  0020               	movlb	0	; select bank0
  6050  0FF1  0832               	movf	pad@buf,w
  6051  0FF2  00A0               	movwf	strlen@s
  6052  0FF3  3001               	movlw	1
  6053  0FF4  00A1               	movwf	strlen@s+1
  6054  0FF5  318E  2644  318F   	fcall	_strlen
  6055  0FF8  0020               	movlb	0	; select bank0
  6056  0FF9  0838               	movf	pad@w,w
  6057  0FFA  0720               	addwf	?_strlen,w
  6058  0FFB  00B2               	movwf	?_pad
  6059  0FFC  0839               	movf	pad@w+1,w
  6060  0FFD  3D21               	addwfc	?_strlen+1,w
  6061  0FFE  00B3               	movwf	?_pad+1
  6062  0FFF                     l1022:
  6063  0FFF  0008               	return
  6064  1000                     __end_of_pad:
  6065                           
  6066                           	psect	text6
  6067  0EA4                     __ptext6:	
  6068 ;; *************** function _fputs *****************
  6069 ;; Defined at:
  6070 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  s               1    wreg     PTR const unsigned char 
  6073 ;;		 -> dbuf(32), 
  6074 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  6075 ;;		 -> NULL(0), 
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;  s               1   17[BANK0 ] PTR const unsigned char 
  6078 ;;		 -> dbuf(32), 
  6079 ;;  i               2   15[BANK0 ] int 
  6080 ;;  c               1   14[BANK0 ] unsigned char 
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  2   10[BANK0 ] int 
  6083 ;; Registers used:
  6084 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6090 ;;      Params:         0       1       0       0       0       0       0       0
  6091 ;;      Locals:         0       4       0       0       0       0       0       0
  6092 ;;      Temps:          0       3       0       0       0       0       0       0
  6093 ;;      Totals:         0       8       0       0       0       0       0       0
  6094 ;;Total ram usage:        8 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; Hardware stack levels required when called:    6
  6097 ;; This function calls:
  6098 ;;		_fputc
  6099 ;; This function is called by:
  6100 ;;		_pad
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           
  6105                           ;psect for function _fputs
  6106  0EA4                     _fputs:
  6107                           
  6108                           ;incstack = 0
  6109                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6110                           ;fputs@s stored from wreg
  6111  0EA4  0020               	movlb	0	; select bank0
  6112  0EA5  00B1               	movwf	fputs@s
  6113  0EA6                     l1791:
  6114  0EA6  01AF               	clrf	fputs@i
  6115  0EA7  01B0               	clrf	fputs@i+1
  6116  0EA8  2EBC               	goto	l1797
  6117  0EA9                     l1793:
  6118  0EA9  082E               	movf	fputs@c,w
  6119  0EAA  00AB               	movwf	??_fputs
  6120  0EAB  01AC               	clrf	??_fputs+1
  6121  0EAC  082B               	movf	??_fputs,w
  6122  0EAD  00A2               	movwf	fputc@c
  6123  0EAE  082C               	movf	??_fputs+1,w
  6124  0EAF  00A3               	movwf	fputc@c+1
  6125  0EB0  082A               	movf	fputs@fp,w
  6126  0EB1  00AD               	movwf	??_fputs+2
  6127  0EB2  082D               	movf	??_fputs+2,w
  6128  0EB3  00A4               	movwf	fputc@fp
  6129  0EB4  318F  2766  318E   	fcall	_fputc
  6130  0EB7                     l1795:
  6131  0EB7  3001               	movlw	1
  6132  0EB8  0020               	movlb	0	; select bank0
  6133  0EB9  07AF               	addwf	fputs@i,f
  6134  0EBA  3000               	movlw	0
  6135  0EBB  3DB0               	addwfc	fputs@i+1,f
  6136  0EBC                     l1797:
  6137  0EBC  082F               	movf	fputs@i,w
  6138  0EBD  0731               	addwf	fputs@s,w
  6139  0EBE  00AB               	movwf	??_fputs
  6140  0EBF  082B               	movf	??_fputs,w
  6141  0EC0  0086               	movwf	6
  6142  0EC1  3001               	movlw	1	; select bank2/3
  6143  0EC2  0087               	movwf	7
  6144  0EC3  0801               	movf	1,w
  6145  0EC4  00AC               	movwf	??_fputs+1
  6146  0EC5  082C               	movf	??_fputs+1,w
  6147  0EC6  00AE               	movwf	fputs@c
  6148  0EC7  082E               	movf	fputs@c,w
  6149  0EC8  1D03               	btfss	3,2
  6150  0EC9  2ECB               	goto	u891
  6151  0ECA  2ECC               	goto	u890
  6152  0ECB                     u891:
  6153  0ECB  2EA9               	goto	l1793
  6154  0ECC                     u890:
  6155  0ECC                     l1094:
  6156  0ECC  0008               	return
  6157  0ECD                     __end_of_fputs:
  6158                           
  6159                           	psect	text7
  6160  0684                     __ptext7:	
  6161 ;; *************** function ___lomod *****************
  6162 ;; Defined at:
  6163 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  divisor         8    0[BANK0 ] unsigned long long 
  6166 ;;  dividend        8    8[BANK0 ] unsigned long long 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  counter         1   17[BANK0 ] unsigned char 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  8    0[BANK0 ] unsigned long long 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6178 ;;      Params:         0      16       0       0       0       0       0       0
  6179 ;;      Locals:         0       1       0       0       0       0       0       0
  6180 ;;      Temps:          0       1       0       0       0       0       0       0
  6181 ;;      Totals:         0      18       0       0       0       0       0       0
  6182 ;;Total ram usage:       18 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; Hardware stack levels required when called:    3
  6185 ;; This function calls:
  6186 ;;		Nothing
  6187 ;; This function is called by:
  6188 ;;		_utoa
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           
  6193                           ;psect for function ___lomod
  6194  0684                     ___lomod:
  6195  0684                     l1831:	
  6196                           ;incstack = 0
  6197                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  6198                           
  6199  0684  0020               	movlb	0	; select bank0
  6200  0685  0820               	movf	___lomod@divisor,w
  6201  0686  0421               	iorwf	___lomod@divisor+1,w
  6202  0687  0422               	iorwf	___lomod@divisor+2,w
  6203  0688  0423               	iorwf	___lomod@divisor+3,w
  6204  0689  0424               	iorwf	___lomod@divisor+4,w
  6205  068A  0425               	iorwf	___lomod@divisor+5,w
  6206  068B  0426               	iorwf	___lomod@divisor+6,w
  6207  068C  0427               	iorwf	___lomod@divisor+7,w
  6208  068D  1903               	skipnz
  6209  068E  2E90               	goto	u961
  6210  068F  2E91               	goto	u960
  6211  0690                     u961:
  6212  0690  2EE4               	goto	l770
  6213  0691                     u960:
  6214  0691                     l1833:
  6215  0691  01B1               	clrf	___lomod@counter
  6216  0692  0AB1               	incf	___lomod@counter,f
  6217  0693  2EA0               	goto	l1839
  6218  0694                     l1835:
  6219  0694  35A0               	lslf	___lomod@divisor,f
  6220  0695  0DA1               	rlf	___lomod@divisor+1,f
  6221  0696  0DA2               	rlf	___lomod@divisor+2,f
  6222  0697  0DA3               	rlf	___lomod@divisor+3,f
  6223  0698  0DA4               	rlf	___lomod@divisor+4,f
  6224  0699  0DA5               	rlf	___lomod@divisor+5,f
  6225  069A  0DA6               	rlf	___lomod@divisor+6,f
  6226  069B  0DA7               	rlf	___lomod@divisor+7,f
  6227  069C                     l1837:
  6228  069C  3001               	movlw	1
  6229  069D  00B0               	movwf	??___lomod
  6230  069E  0830               	movf	??___lomod,w
  6231  069F  07B1               	addwf	___lomod@counter,f
  6232  06A0                     l1839:
  6233  06A0  1FA7               	btfss	___lomod@divisor+7,7
  6234  06A1  2EA3               	goto	u971
  6235  06A2  2EA4               	goto	u970
  6236  06A3                     u971:
  6237  06A3  2E94               	goto	l1835
  6238  06A4                     u970:
  6239  06A4                     l1841:
  6240  06A4  0827               	movf	___lomod@divisor+7,w
  6241  06A5  022F               	subwf	___lomod@dividend+7,w
  6242  06A6  1D03               	skipz
  6243  06A7  2EC2               	goto	u985
  6244  06A8  0826               	movf	___lomod@divisor+6,w
  6245  06A9  022E               	subwf	___lomod@dividend+6,w
  6246  06AA  1D03               	skipz
  6247  06AB  2EC2               	goto	u985
  6248  06AC  0825               	movf	___lomod@divisor+5,w
  6249  06AD  022D               	subwf	___lomod@dividend+5,w
  6250  06AE  1D03               	skipz
  6251  06AF  2EC2               	goto	u985
  6252  06B0  0824               	movf	___lomod@divisor+4,w
  6253  06B1  022C               	subwf	___lomod@dividend+4,w
  6254  06B2  1D03               	skipz
  6255  06B3  2EC2               	goto	u985
  6256  06B4  0823               	movf	___lomod@divisor+3,w
  6257  06B5  022B               	subwf	___lomod@dividend+3,w
  6258  06B6  1D03               	skipz
  6259  06B7  2EC2               	goto	u985
  6260  06B8  0822               	movf	___lomod@divisor+2,w
  6261  06B9  022A               	subwf	___lomod@dividend+2,w
  6262  06BA  1D03               	skipz
  6263  06BB  2EC2               	goto	u985
  6264  06BC  0821               	movf	___lomod@divisor+1,w
  6265  06BD  0229               	subwf	___lomod@dividend+1,w
  6266  06BE  1D03               	skipz
  6267  06BF  2EC2               	goto	u985
  6268  06C0  0820               	movf	___lomod@divisor,w
  6269  06C1  0228               	subwf	___lomod@dividend,w
  6270  06C2                     u985:
  6271  06C2  1C03               	skipc
  6272  06C3  2EC5               	goto	u981
  6273  06C4  2EC6               	goto	u980
  6274  06C5                     u981:
  6275  06C5  2ED6               	goto	l1845
  6276  06C6                     u980:
  6277  06C6                     l1843:
  6278  06C6  0820               	movf	___lomod@divisor,w
  6279  06C7  02A8               	subwf	___lomod@dividend,f
  6280  06C8  0821               	movf	___lomod@divisor+1,w
  6281  06C9  3BA9               	subwfb	___lomod@dividend+1,f
  6282  06CA  0822               	movf	___lomod@divisor+2,w
  6283  06CB  3BAA               	subwfb	___lomod@dividend+2,f
  6284  06CC  0823               	movf	___lomod@divisor+3,w
  6285  06CD  3BAB               	subwfb	___lomod@dividend+3,f
  6286  06CE  0824               	movf	___lomod@divisor+4,w
  6287  06CF  3BAC               	subwfb	___lomod@dividend+4,f
  6288  06D0  0825               	movf	___lomod@divisor+5,w
  6289  06D1  3BAD               	subwfb	___lomod@dividend+5,f
  6290  06D2  0826               	movf	___lomod@divisor+6,w
  6291  06D3  3BAE               	subwfb	___lomod@dividend+6,f
  6292  06D4  0827               	movf	___lomod@divisor+7,w
  6293  06D5  3BAF               	subwfb	___lomod@dividend+7,f
  6294  06D6                     l1845:
  6295  06D6  36A7               	lsrf	___lomod@divisor+7,f
  6296  06D7  0CA6               	rrf	___lomod@divisor+6,f
  6297  06D8  0CA5               	rrf	___lomod@divisor+5,f
  6298  06D9  0CA4               	rrf	___lomod@divisor+4,f
  6299  06DA  0CA3               	rrf	___lomod@divisor+3,f
  6300  06DB  0CA2               	rrf	___lomod@divisor+2,f
  6301  06DC  0CA1               	rrf	___lomod@divisor+1,f
  6302  06DD  0CA0               	rrf	___lomod@divisor,f
  6303  06DE  3001               	movlw	1
  6304  06DF  02B1               	subwf	___lomod@counter,f
  6305  06E0  1D03               	btfss	3,2
  6306  06E1  2EE3               	goto	u991
  6307  06E2  2EE4               	goto	u990
  6308  06E3                     u991:
  6309  06E3  2EA4               	goto	l1841
  6310  06E4                     u990:
  6311  06E4                     l770:
  6312  06E4  0828               	movf	___lomod@dividend,w
  6313  06E5  00A0               	movwf	?___lomod
  6314  06E6  0829               	movf	___lomod@dividend+1,w
  6315  06E7  00A1               	movwf	?___lomod+1
  6316  06E8  082A               	movf	___lomod@dividend+2,w
  6317  06E9  00A2               	movwf	?___lomod+2
  6318  06EA  082B               	movf	___lomod@dividend+3,w
  6319  06EB  00A3               	movwf	?___lomod+3
  6320  06EC  082C               	movf	___lomod@dividend+4,w
  6321  06ED  00A4               	movwf	?___lomod+4
  6322  06EE  082D               	movf	___lomod@dividend+5,w
  6323  06EF  00A5               	movwf	?___lomod+5
  6324  06F0  082E               	movf	___lomod@dividend+6,w
  6325  06F1  00A6               	movwf	?___lomod+6
  6326  06F2  082F               	movf	___lomod@dividend+7,w
  6327  06F3  00A7               	movwf	?___lomod+7
  6328  06F4                     l777:
  6329  06F4  0008               	return
  6330  06F5                     __end_of___lomod:
  6331                           
  6332                           	psect	text8
  6333  0600                     __ptext8:	
  6334 ;; *************** function ___lodiv *****************
  6335 ;; Defined at:
  6336 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  divisor         8    0[BANK0 ] unsigned long long 
  6339 ;;  dividend        8    8[BANK0 ] unsigned long long 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  quotient        8   17[BANK0 ] unsigned long long 
  6342 ;;  counter         1   25[BANK0 ] unsigned char 
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  8    0[BANK0 ] unsigned long long 
  6345 ;; Registers used:
  6346 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6352 ;;      Params:         0      16       0       0       0       0       0       0
  6353 ;;      Locals:         0       9       0       0       0       0       0       0
  6354 ;;      Temps:          0       1       0       0       0       0       0       0
  6355 ;;      Totals:         0      26       0       0       0       0       0       0
  6356 ;;Total ram usage:       26 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; Hardware stack levels required when called:    3
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_utoa
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           
  6367                           ;psect for function ___lodiv
  6368  0600                     ___lodiv:
  6369  0600                     l1809:	
  6370                           ;incstack = 0
  6371                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6372                           
  6373  0600  3031               	movlw	low ___lodiv@quotient
  6374  0601  0086               	movwf	6
  6375  0602  3000               	movlw	high ___lodiv@quotient
  6376  0603  0087               	movwf	7
  6377  0604  3008               	movlw	8
  6378  0605  0020               	movlb	0	; select bank0
  6379  0606  00B0               	movwf	??___lodiv
  6380  0607  3000               	movlw	0
  6381  0608                     u910:
  6382  0608  001E               	movwi fsr1++
  6383  0609  0BB0               	decfsz	??___lodiv,f
  6384  060A  2E08               	goto	u910
  6385  060B                     l1811:
  6386  060B  0820               	movf	___lodiv@divisor,w
  6387  060C  0421               	iorwf	___lodiv@divisor+1,w
  6388  060D  0422               	iorwf	___lodiv@divisor+2,w
  6389  060E  0423               	iorwf	___lodiv@divisor+3,w
  6390  060F  0424               	iorwf	___lodiv@divisor+4,w
  6391  0610  0425               	iorwf	___lodiv@divisor+5,w
  6392  0611  0426               	iorwf	___lodiv@divisor+6,w
  6393  0612  0427               	iorwf	___lodiv@divisor+7,w
  6394  0613  1903               	skipnz
  6395  0614  2E16               	goto	u921
  6396  0615  2E17               	goto	u920
  6397  0616                     u921:
  6398  0616  2E73               	goto	l760
  6399  0617                     u920:
  6400  0617                     l1813:
  6401  0617  01B9               	clrf	___lodiv@counter
  6402  0618  0AB9               	incf	___lodiv@counter,f
  6403  0619  2E26               	goto	l1819
  6404  061A                     l1815:
  6405  061A  35A0               	lslf	___lodiv@divisor,f
  6406  061B  0DA1               	rlf	___lodiv@divisor+1,f
  6407  061C  0DA2               	rlf	___lodiv@divisor+2,f
  6408  061D  0DA3               	rlf	___lodiv@divisor+3,f
  6409  061E  0DA4               	rlf	___lodiv@divisor+4,f
  6410  061F  0DA5               	rlf	___lodiv@divisor+5,f
  6411  0620  0DA6               	rlf	___lodiv@divisor+6,f
  6412  0621  0DA7               	rlf	___lodiv@divisor+7,f
  6413  0622                     l1817:
  6414  0622  3001               	movlw	1
  6415  0623  00B0               	movwf	??___lodiv
  6416  0624  0830               	movf	??___lodiv,w
  6417  0625  07B9               	addwf	___lodiv@counter,f
  6418  0626                     l1819:
  6419  0626  1FA7               	btfss	___lodiv@divisor+7,7
  6420  0627  2E29               	goto	u931
  6421  0628  2E2A               	goto	u930
  6422  0629                     u931:
  6423  0629  2E1A               	goto	l1815
  6424  062A                     u930:
  6425  062A                     l1821:
  6426  062A  35B1               	lslf	___lodiv@quotient,f
  6427  062B  0DB2               	rlf	___lodiv@quotient+1,f
  6428  062C  0DB3               	rlf	___lodiv@quotient+2,f
  6429  062D  0DB4               	rlf	___lodiv@quotient+3,f
  6430  062E  0DB5               	rlf	___lodiv@quotient+4,f
  6431  062F  0DB6               	rlf	___lodiv@quotient+5,f
  6432  0630  0DB7               	rlf	___lodiv@quotient+6,f
  6433  0631  0DB8               	rlf	___lodiv@quotient+7,f
  6434  0632                     l1823:
  6435  0632  0827               	movf	___lodiv@divisor+7,w
  6436  0633  022F               	subwf	___lodiv@dividend+7,w
  6437  0634  1D03               	skipz
  6438  0635  2E50               	goto	u945
  6439  0636  0826               	movf	___lodiv@divisor+6,w
  6440  0637  022E               	subwf	___lodiv@dividend+6,w
  6441  0638  1D03               	skipz
  6442  0639  2E50               	goto	u945
  6443  063A  0825               	movf	___lodiv@divisor+5,w
  6444  063B  022D               	subwf	___lodiv@dividend+5,w
  6445  063C  1D03               	skipz
  6446  063D  2E50               	goto	u945
  6447  063E  0824               	movf	___lodiv@divisor+4,w
  6448  063F  022C               	subwf	___lodiv@dividend+4,w
  6449  0640  1D03               	skipz
  6450  0641  2E50               	goto	u945
  6451  0642  0823               	movf	___lodiv@divisor+3,w
  6452  0643  022B               	subwf	___lodiv@dividend+3,w
  6453  0644  1D03               	skipz
  6454  0645  2E50               	goto	u945
  6455  0646  0822               	movf	___lodiv@divisor+2,w
  6456  0647  022A               	subwf	___lodiv@dividend+2,w
  6457  0648  1D03               	skipz
  6458  0649  2E50               	goto	u945
  6459  064A  0821               	movf	___lodiv@divisor+1,w
  6460  064B  0229               	subwf	___lodiv@dividend+1,w
  6461  064C  1D03               	skipz
  6462  064D  2E50               	goto	u945
  6463  064E  0820               	movf	___lodiv@divisor,w
  6464  064F  0228               	subwf	___lodiv@dividend,w
  6465  0650                     u945:
  6466  0650  1C03               	skipc
  6467  0651  2E53               	goto	u941
  6468  0652  2E54               	goto	u940
  6469  0653                     u941:
  6470  0653  2E65               	goto	l1829
  6471  0654                     u940:
  6472  0654                     l1825:
  6473  0654  0820               	movf	___lodiv@divisor,w
  6474  0655  02A8               	subwf	___lodiv@dividend,f
  6475  0656  0821               	movf	___lodiv@divisor+1,w
  6476  0657  3BA9               	subwfb	___lodiv@dividend+1,f
  6477  0658  0822               	movf	___lodiv@divisor+2,w
  6478  0659  3BAA               	subwfb	___lodiv@dividend+2,f
  6479  065A  0823               	movf	___lodiv@divisor+3,w
  6480  065B  3BAB               	subwfb	___lodiv@dividend+3,f
  6481  065C  0824               	movf	___lodiv@divisor+4,w
  6482  065D  3BAC               	subwfb	___lodiv@dividend+4,f
  6483  065E  0825               	movf	___lodiv@divisor+5,w
  6484  065F  3BAD               	subwfb	___lodiv@dividend+5,f
  6485  0660  0826               	movf	___lodiv@divisor+6,w
  6486  0661  3BAE               	subwfb	___lodiv@dividend+6,f
  6487  0662  0827               	movf	___lodiv@divisor+7,w
  6488  0663  3BAF               	subwfb	___lodiv@dividend+7,f
  6489  0664                     l1827:
  6490  0664  1431               	bsf	___lodiv@quotient,0
  6491  0665                     l1829:
  6492  0665  36A7               	lsrf	___lodiv@divisor+7,f
  6493  0666  0CA6               	rrf	___lodiv@divisor+6,f
  6494  0667  0CA5               	rrf	___lodiv@divisor+5,f
  6495  0668  0CA4               	rrf	___lodiv@divisor+4,f
  6496  0669  0CA3               	rrf	___lodiv@divisor+3,f
  6497  066A  0CA2               	rrf	___lodiv@divisor+2,f
  6498  066B  0CA1               	rrf	___lodiv@divisor+1,f
  6499  066C  0CA0               	rrf	___lodiv@divisor,f
  6500  066D  3001               	movlw	1
  6501  066E  02B9               	subwf	___lodiv@counter,f
  6502  066F  1D03               	btfss	3,2
  6503  0670  2E72               	goto	u951
  6504  0671  2E73               	goto	u950
  6505  0672                     u951:
  6506  0672  2E2A               	goto	l1821
  6507  0673                     u950:
  6508  0673                     l760:
  6509  0673  0831               	movf	___lodiv@quotient,w
  6510  0674  00A0               	movwf	?___lodiv
  6511  0675  0832               	movf	___lodiv@quotient+1,w
  6512  0676  00A1               	movwf	?___lodiv+1
  6513  0677  0833               	movf	___lodiv@quotient+2,w
  6514  0678  00A2               	movwf	?___lodiv+2
  6515  0679  0834               	movf	___lodiv@quotient+3,w
  6516  067A  00A3               	movwf	?___lodiv+3
  6517  067B  0835               	movf	___lodiv@quotient+4,w
  6518  067C  00A4               	movwf	?___lodiv+4
  6519  067D  0836               	movf	___lodiv@quotient+5,w
  6520  067E  00A5               	movwf	?___lodiv+5
  6521  067F  0837               	movf	___lodiv@quotient+6,w
  6522  0680  00A6               	movwf	?___lodiv+6
  6523  0681  0838               	movf	___lodiv@quotient+7,w
  6524  0682  00A7               	movwf	?___lodiv+7
  6525  0683                     l767:
  6526  0683  0008               	return
  6527  0684                     __end_of___lodiv:
  6528                           
  6529                           	psect	text9
  6530  06F5                     __ptext9:	
  6531 ;; *************** function _strncmp *****************
  6532 ;; Defined at:
  6533 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  6536 ;;		 -> STR_3(69), STR_1(26), 
  6537 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  6538 ;;		 -> STR_6(3), 
  6539 ;;  n               2    4[BANK0 ] unsigned int 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  6542 ;;		 -> STR_6(3), 
  6543 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  6544 ;;		 -> STR_3(69), STR_1(26), 
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  2    0[BANK0 ] int 
  6547 ;; Registers used:
  6548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6554 ;;      Params:         0       6       0       0       0       0       0       0
  6555 ;;      Locals:         0       4       0       0       0       0       0       0
  6556 ;;      Temps:          0       1       0       0       0       0       0       0
  6557 ;;      Totals:         0      11       0       0       0       0       0       0
  6558 ;;Total ram usage:       11 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; Hardware stack levels required when called:    3
  6561 ;; This function calls:
  6562 ;;		Nothing
  6563 ;; This function is called by:
  6564 ;;		_vfpfcnvrt
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           
  6569                           ;psect for function _strncmp
  6570  06F5                     _strncmp:
  6571  06F5                     l1955:	
  6572                           ;incstack = 0
  6573                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  6574                           
  6575  06F5  0020               	movlb	0	; select bank0
  6576  06F6  0821               	movf	strncmp@_l+1,w
  6577  06F7  00A8               	movwf	strncmp@l+1
  6578  06F8  0820               	movf	strncmp@_l,w
  6579  06F9  00A7               	movwf	strncmp@l
  6580  06FA  0823               	movf	strncmp@_r+1,w
  6581  06FB  00AA               	movwf	strncmp@r+1
  6582  06FC  0822               	movf	strncmp@_r,w
  6583  06FD  00A9               	movwf	strncmp@r
  6584  06FE                     l1957:
  6585  06FE  3001               	movlw	1
  6586  06FF  02A4               	subwf	strncmp@n,f
  6587  0700  3000               	movlw	0
  6588  0701  3BA5               	subwfb	strncmp@n+1,f
  6589  0702  0A24               	incf	strncmp@n,w
  6590  0703  1D03               	skipz
  6591  0704  2F09               	goto	u1201
  6592  0705  0A25               	incf	strncmp@n+1,w
  6593  0706  1D03               	btfss	3,2
  6594  0707  2F09               	goto	u1201
  6595  0708  2F0A               	goto	u1200
  6596  0709                     u1201:
  6597  0709  2F19               	goto	l1965
  6598  070A                     u1200:
  6599  070A                     l1959:
  6600  070A  01A0               	clrf	?_strncmp
  6601  070B  01A1               	clrf	?_strncmp+1
  6602  070C  2F51               	goto	l1104
  6603  070D                     l1963:
  6604  070D  3001               	movlw	1
  6605  070E  07A7               	addwf	strncmp@l,f
  6606  070F  3000               	movlw	0
  6607  0710  3DA8               	addwfc	strncmp@l+1,f
  6608  0711  3001               	movlw	1
  6609  0712  07A9               	addwf	strncmp@r,f
  6610  0713  3000               	movlw	0
  6611  0714  3DAA               	addwfc	strncmp@r+1,f
  6612  0715  3001               	movlw	1
  6613  0716  02A4               	subwf	strncmp@n,f
  6614  0717  3000               	movlw	0
  6615  0718  3BA5               	subwfb	strncmp@n+1,f
  6616  0719                     l1965:
  6617  0719  0827               	movf	strncmp@l,w
  6618  071A  0084               	movwf	4
  6619  071B  0828               	movf	strncmp@l+1,w
  6620  071C  0085               	movwf	5
  6621  071D  0012               	moviw fsr0++
  6622  071E  1903               	btfsc	3,2
  6623  071F  2F21               	goto	u1211
  6624  0720  2F22               	goto	u1210
  6625  0721                     u1211:
  6626  0721  2F41               	goto	l1973
  6627  0722                     u1210:
  6628  0722                     l1967:
  6629  0722  0829               	movf	strncmp@r,w
  6630  0723  0084               	movwf	4
  6631  0724  082A               	movf	strncmp@r+1,w
  6632  0725  0085               	movwf	5
  6633  0726  0012               	moviw fsr0++
  6634  0727  1903               	btfsc	3,2
  6635  0728  2F2A               	goto	u1221
  6636  0729  2F2B               	goto	u1220
  6637  072A                     u1221:
  6638  072A  2F41               	goto	l1973
  6639  072B                     u1220:
  6640  072B                     l1969:
  6641  072B  0824               	movf	strncmp@n,w
  6642  072C  0425               	iorwf	strncmp@n+1,w
  6643  072D  1903               	btfsc	3,2
  6644  072E  2F30               	goto	u1231
  6645  072F  2F31               	goto	u1230
  6646  0730                     u1231:
  6647  0730  2F41               	goto	l1973
  6648  0731                     u1230:
  6649  0731                     l1971:
  6650  0731  0829               	movf	strncmp@r,w
  6651  0732  0084               	movwf	4
  6652  0733  082A               	movf	strncmp@r+1,w
  6653  0734  0085               	movwf	5
  6654  0735  0800               	movf	0,w	;code access
  6655  0736  00A6               	movwf	??_strncmp
  6656  0737  0827               	movf	strncmp@l,w
  6657  0738  0084               	movwf	4
  6658  0739  0828               	movf	strncmp@l+1,w
  6659  073A  0085               	movwf	5
  6660  073B  0800               	movf	0,w	;code access
  6661  073C  0626               	xorwf	??_strncmp,w
  6662  073D  1903               	skipnz
  6663  073E  2F40               	goto	u1241
  6664  073F  2F41               	goto	u1240
  6665  0740                     u1241:
  6666  0740  2F0D               	goto	l1963
  6667  0741                     u1240:
  6668  0741                     l1973:
  6669  0741  0827               	movf	strncmp@l,w
  6670  0742  0084               	movwf	4
  6671  0743  0828               	movf	strncmp@l+1,w
  6672  0744  0085               	movwf	5
  6673  0745  0800               	movf	0,w	;code access
  6674  0746  00A6               	movwf	??_strncmp
  6675  0747  0829               	movf	strncmp@r,w
  6676  0748  0084               	movwf	4
  6677  0749  082A               	movf	strncmp@r+1,w
  6678  074A  0085               	movwf	5
  6679  074B  0800               	movf	0,w	;code access
  6680  074C  0226               	subwf	??_strncmp,w
  6681  074D  00A0               	movwf	?_strncmp
  6682  074E  01A1               	clrf	?_strncmp+1
  6683  074F  1C03               	skipc
  6684  0750  03A1               	decf	?_strncmp+1,f
  6685  0751                     l1104:
  6686  0751  0008               	return
  6687  0752                     __end_of_strncmp:
  6688                           
  6689                           	psect	text10
  6690  0530                     __ptext10:	
  6691 ;; *************** function _stoa *****************
  6692 ;; Defined at:
  6693 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  fp              1    wreg     PTR struct _IO_FILE
  6696 ;;		 -> NULL(0), 
  6697 ;;  s               2   10[BANK0 ] PTR unsigned char 
  6698 ;;		 -> ?_printf(2), STR_2(12), peakMax(4), freqMax(4), 
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;  fp              1   28[BANK0 ] PTR struct _IO_FILE
  6701 ;;		 -> NULL(0), 
  6702 ;;  nuls            7   15[BANK0 ] unsigned char [7]
  6703 ;;  l               2   31[BANK0 ] int 
  6704 ;;  p               2   29[BANK0 ] int 
  6705 ;;  cp              2   26[BANK0 ] PTR unsigned char 
  6706 ;;		 -> stoa@nuls(7), ?_printf(2), STR_2(12), peakMax(4), 
  6707 ;;		 -> freqMax(4), 
  6708 ;;  w               2   24[BANK0 ] int 
  6709 ;;  i               2   22[BANK0 ] int 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  2   10[BANK0 ] int 
  6712 ;; Registers used:
  6713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6719 ;;      Params:         0       2       0       0       0       0       0       0
  6720 ;;      Locals:         0      18       0       0       0       0       0       0
  6721 ;;      Temps:          0       3       0       0       0       0       0       0
  6722 ;;      Totals:         0      23       0       0       0       0       0       0
  6723 ;;Total ram usage:       23 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:    6
  6726 ;; This function calls:
  6727 ;;		_fputc
  6728 ;;		_strlen
  6729 ;; This function is called by:
  6730 ;;		_vfpfcnvrt
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           
  6735                           ;psect for function _stoa
  6736  0530                     _stoa:
  6737                           
  6738                           ;incstack = 0
  6739                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6740                           ;stoa@fp stored from wreg
  6741  0530  0020               	movlb	0	; select bank0
  6742  0531  00BC               	movwf	stoa@fp
  6743  0532                     l1869:
  6744                           
  6745                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  6746  0532  3060               	movlw	low stoa@F1131
  6747  0533  0086               	movwf	6
  6748  0534  3001               	movlw	high stoa@F1131
  6749  0535  0087               	movwf	7
  6750  0536  302F               	movlw	low stoa@nuls
  6751  0537  0084               	movwf	4
  6752  0538  3000               	movlw	high stoa@nuls
  6753  0539  0085               	movwf	5
  6754  053A  3007               	movlw	7
  6755  053B  00AC               	movwf	??_stoa
  6756  053C                     u1040:
  6757  053C  0016               	moviw fsr1++
  6758  053D  001A               	movwi fsr0++
  6759  053E  0BAC               	decfsz	??_stoa,f
  6760  053F  2D3C               	goto	u1040
  6761  0540                     l1871:
  6762                           
  6763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  6764  0540  082B               	movf	stoa@s+1,w
  6765  0541  00BB               	movwf	stoa@cp+1
  6766  0542  082A               	movf	stoa@s,w
  6767  0543  00BA               	movwf	stoa@cp
  6768  0544                     l1873:
  6769                           
  6770                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  6771  0544  083A               	movf	stoa@cp,w
  6772  0545  043B               	iorwf	stoa@cp+1,w
  6773  0546  1D03               	btfss	3,2
  6774  0547  2D49               	goto	u1051
  6775  0548  2D4A               	goto	u1050
  6776  0549                     u1051:
  6777  0549  2D4E               	goto	l1877
  6778  054A                     u1050:
  6779  054A                     l1875:
  6780                           
  6781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  6782  054A  302F               	movlw	low stoa@nuls
  6783  054B  00BA               	movwf	stoa@cp
  6784  054C  3000               	movlw	high stoa@nuls
  6785  054D  00BB               	movwf	stoa@cp+1
  6786  054E                     l1877:
  6787                           
  6788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  6789  054E  083B               	movf	stoa@cp+1,w
  6790  054F  00A1               	movwf	strlen@s+1
  6791  0550  083A               	movf	stoa@cp,w
  6792  0551  00A0               	movwf	strlen@s
  6793  0552  318E  2644  3185   	fcall	_strlen
  6794  0555  0020               	movlb	0	; select bank0
  6795  0556  0821               	movf	?_strlen+1,w
  6796  0557  00C0               	movwf	stoa@l+1
  6797  0558  0820               	movf	?_strlen,w
  6798  0559  00BF               	movwf	stoa@l
  6799  055A                     l1879:
  6800                           
  6801                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  6802  055A  0877               	movf	_prec+1,w
  6803  055B  00BE               	movwf	stoa@p+1
  6804  055C  0876               	movf	_prec,w
  6805  055D  00BD               	movwf	stoa@p
  6806  055E                     l1881:
  6807                           
  6808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  6809  055E  1BBE               	btfsc	stoa@p+1,7
  6810  055F  2D61               	goto	u1061
  6811  0560  2D62               	goto	u1060
  6812  0561                     u1061:
  6813  0561  2D76               	goto	l1031
  6814  0562                     u1060:
  6815  0562                     l1883:
  6816  0562  083E               	movf	stoa@p+1,w
  6817  0563  3A80               	xorlw	128
  6818  0564  00AC               	movwf	??_stoa
  6819  0565  0840               	movf	stoa@l+1,w
  6820  0566  3A80               	xorlw	128
  6821  0567  022C               	subwf	??_stoa,w
  6822  0568  1D03               	skipz
  6823  0569  2D6C               	goto	u1075
  6824  056A  083F               	movf	stoa@l,w
  6825  056B  023D               	subwf	stoa@p,w
  6826  056C                     u1075:
  6827  056C  1C03               	skipc
  6828  056D  2D6F               	goto	u1071
  6829  056E  2D70               	goto	u1070
  6830  056F                     u1071:
  6831  056F  2D71               	goto	l1885
  6832  0570                     u1070:
  6833  0570  2D76               	goto	l1031
  6834  0571                     l1885:
  6835  0571  0020               	movlb	0	; select bank0
  6836  0572  083E               	movf	stoa@p+1,w
  6837  0573  00C0               	movwf	stoa@l+1
  6838  0574  083D               	movf	stoa@p,w
  6839  0575  00BF               	movwf	stoa@l
  6840  0576                     l1031:
  6841                           
  6842                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  6843  0576  0020               	movlb	0	; select bank0
  6844  0577  0840               	movf	stoa@l+1,w
  6845  0578  00BE               	movwf	stoa@p+1
  6846  0579  083F               	movf	stoa@l,w
  6847  057A  00BD               	movwf	stoa@p
  6848                           
  6849                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  6850  057B  0021               	movlb	1	; select bank1
  6851  057C  0861               	movf	(_width+1)^(0+128),w
  6852  057D  0020               	movlb	0	; select bank0
  6853  057E  00B9               	movwf	stoa@w+1
  6854  057F  0021               	movlb	1	; select bank1
  6855  0580  0860               	movf	_width^(0+128),w
  6856  0581  0020               	movlb	0	; select bank0
  6857  0582  00B8               	movwf	stoa@w
  6858  0583                     l1887:
  6859                           
  6860                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  6861  0583  1878               	btfsc	_flags,0
  6862  0584  2D86               	goto	u1081
  6863  0585  2D87               	goto	u1080
  6864  0586                     u1081:
  6865  0586  2DA7               	goto	l1897
  6866  0587                     u1080:
  6867  0587  2D99               	goto	l1895
  6868  0588                     l1891:
  6869                           
  6870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  6871  0588  3020               	movlw	32
  6872  0589  0020               	movlb	0	; select bank0
  6873  058A  00A2               	movwf	fputc@c
  6874  058B  3000               	movlw	0
  6875  058C  00A3               	movwf	fputc@c+1
  6876  058D  083C               	movf	stoa@fp,w
  6877  058E  00AC               	movwf	??_stoa
  6878  058F  082C               	movf	??_stoa,w
  6879  0590  00A4               	movwf	fputc@fp
  6880  0591  318F  2766  3185   	fcall	_fputc
  6881  0594                     l1893:
  6882                           
  6883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  6884  0594  3001               	movlw	1
  6885  0595  0020               	movlb	0	; select bank0
  6886  0596  07BF               	addwf	stoa@l,f
  6887  0597  3000               	movlw	0
  6888  0598  3DC0               	addwfc	stoa@l+1,f
  6889  0599                     l1895:
  6890                           
  6891                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  6892  0599  0840               	movf	stoa@l+1,w
  6893  059A  3A80               	xorlw	128
  6894  059B  00AC               	movwf	??_stoa
  6895  059C  0839               	movf	stoa@w+1,w
  6896  059D  3A80               	xorlw	128
  6897  059E  022C               	subwf	??_stoa,w
  6898  059F  1D03               	skipz
  6899  05A0  2DA3               	goto	u1095
  6900  05A1  0838               	movf	stoa@w,w
  6901  05A2  023F               	subwf	stoa@l,w
  6902  05A3                     u1095:
  6903  05A3  1C03               	skipc
  6904  05A4  2DA6               	goto	u1091
  6905  05A5  2DA7               	goto	u1090
  6906  05A6                     u1091:
  6907  05A6  2D88               	goto	l1891
  6908  05A7                     u1090:
  6909  05A7                     l1897:
  6910                           
  6911                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  6912  05A7  0020               	movlb	0	; select bank0
  6913  05A8  01B6               	clrf	stoa@i
  6914  05A9  01B7               	clrf	stoa@i+1
  6915                           
  6916                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  6917  05AA  2DC7               	goto	l1905
  6918  05AB                     l1899:
  6919                           
  6920                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  6921  05AB  0020               	movlb	0	; select bank0
  6922  05AC  083A               	movf	stoa@cp,w
  6923  05AD  0084               	movwf	4
  6924  05AE  083B               	movf	stoa@cp+1,w
  6925  05AF  0085               	movwf	5
  6926  05B0  0800               	movf	0,w	;code access
  6927  05B1  00AC               	movwf	??_stoa
  6928  05B2  01AD               	clrf	??_stoa+1
  6929  05B3  082C               	movf	??_stoa,w
  6930  05B4  00A2               	movwf	fputc@c
  6931  05B5  082D               	movf	??_stoa+1,w
  6932  05B6  00A3               	movwf	fputc@c+1
  6933  05B7  083C               	movf	stoa@fp,w
  6934  05B8  00AE               	movwf	??_stoa+2
  6935  05B9  082E               	movf	??_stoa+2,w
  6936  05BA  00A4               	movwf	fputc@fp
  6937  05BB  318F  2766  3185   	fcall	_fputc
  6938  05BE                     l1901:
  6939                           
  6940                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  6941  05BE  3001               	movlw	1
  6942  05BF  0020               	movlb	0	; select bank0
  6943  05C0  07BA               	addwf	stoa@cp,f
  6944  05C1  3000               	movlw	0
  6945  05C2  3DBB               	addwfc	stoa@cp+1,f
  6946  05C3                     l1903:
  6947                           
  6948                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  6949  05C3  3001               	movlw	1
  6950  05C4  07B6               	addwf	stoa@i,f
  6951  05C5  3000               	movlw	0
  6952  05C6  3DB7               	addwfc	stoa@i+1,f
  6953  05C7                     l1905:
  6954                           
  6955                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  6956  05C7  0837               	movf	stoa@i+1,w
  6957  05C8  3A80               	xorlw	128
  6958  05C9  00AC               	movwf	??_stoa
  6959  05CA  083E               	movf	stoa@p+1,w
  6960  05CB  3A80               	xorlw	128
  6961  05CC  022C               	subwf	??_stoa,w
  6962  05CD  1D03               	skipz
  6963  05CE  2DD1               	goto	u1105
  6964  05CF  083D               	movf	stoa@p,w
  6965  05D0  0236               	subwf	stoa@i,w
  6966  05D1                     u1105:
  6967  05D1  1C03               	skipc
  6968  05D2  2DD4               	goto	u1101
  6969  05D3  2DD5               	goto	u1100
  6970  05D4                     u1101:
  6971  05D4  2DAB               	goto	l1899
  6972  05D5                     u1100:
  6973  05D5                     l1040:
  6974                           
  6975                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  6976  05D5  1C78               	btfss	_flags,0
  6977  05D6  2DD8               	goto	u1111
  6978  05D7  2DD9               	goto	u1110
  6979  05D8                     u1111:
  6980  05D8  2DFA               	goto	l1915
  6981  05D9                     u1110:
  6982  05D9  2DEB               	goto	l1913
  6983  05DA                     l1909:
  6984                           
  6985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  6986  05DA  3020               	movlw	32
  6987  05DB  0020               	movlb	0	; select bank0
  6988  05DC  00A2               	movwf	fputc@c
  6989  05DD  3000               	movlw	0
  6990  05DE  00A3               	movwf	fputc@c+1
  6991  05DF  083C               	movf	stoa@fp,w
  6992  05E0  00AC               	movwf	??_stoa
  6993  05E1  082C               	movf	??_stoa,w
  6994  05E2  00A4               	movwf	fputc@fp
  6995  05E3  318F  2766  3185   	fcall	_fputc
  6996  05E6                     l1911:
  6997                           
  6998                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  6999  05E6  3001               	movlw	1
  7000  05E7  0020               	movlb	0	; select bank0
  7001  05E8  07BF               	addwf	stoa@l,f
  7002  05E9  3000               	movlw	0
  7003  05EA  3DC0               	addwfc	stoa@l+1,f
  7004  05EB                     l1913:
  7005                           
  7006                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  7007  05EB  0020               	movlb	0	; select bank0
  7008  05EC  0840               	movf	stoa@l+1,w
  7009  05ED  3A80               	xorlw	128
  7010  05EE  00AC               	movwf	??_stoa
  7011  05EF  0839               	movf	stoa@w+1,w
  7012  05F0  3A80               	xorlw	128
  7013  05F1  022C               	subwf	??_stoa,w
  7014  05F2  1D03               	skipz
  7015  05F3  2DF6               	goto	u1125
  7016  05F4  0838               	movf	stoa@w,w
  7017  05F5  023F               	subwf	stoa@l,w
  7018  05F6                     u1125:
  7019  05F6  1C03               	skipc
  7020  05F7  2DF9               	goto	u1121
  7021  05F8  2DFA               	goto	u1120
  7022  05F9                     u1121:
  7023  05F9  2DDA               	goto	l1909
  7024  05FA                     u1120:
  7025  05FA                     l1915:
  7026                           
  7027                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  7028  05FA  0020               	movlb	0	; select bank0
  7029  05FB  0840               	movf	stoa@l+1,w
  7030  05FC  00AB               	movwf	?_stoa+1
  7031  05FD  083F               	movf	stoa@l,w
  7032  05FE  00AA               	movwf	?_stoa
  7033  05FF                     l1045:
  7034  05FF  0008               	return
  7035  0600                     __end_of_stoa:
  7036                           
  7037                           	psect	text11
  7038  0E44                     __ptext11:	
  7039 ;; *************** function _strlen *****************
  7040 ;; Defined at:
  7041 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  7044 ;;		 -> dbuf(32), stoa@nuls(7), ?_printf(2), STR_2(12), 
  7045 ;;		 -> peakMax(4), freqMax(4), 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  a               2    3[BANK0 ] PTR const unsigned char 
  7048 ;;		 -> dbuf(32), stoa@nuls(7), ?_printf(2), STR_2(12), 
  7049 ;;		 -> peakMax(4), freqMax(4), 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  2    0[BANK0 ] unsigned int 
  7052 ;; Registers used:
  7053 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7059 ;;      Params:         0       2       0       0       0       0       0       0
  7060 ;;      Locals:         0       2       0       0       0       0       0       0
  7061 ;;      Temps:          0       1       0       0       0       0       0       0
  7062 ;;      Totals:         0       5       0       0       0       0       0       0
  7063 ;;Total ram usage:        5 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    3
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_pad
  7070 ;;		_stoa
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           
  7075                           ;psect for function _strlen
  7076  0E44                     _strlen:
  7077  0E44                     l1799:	
  7078                           ;incstack = 0
  7079                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  7080                           
  7081  0E44  0020               	movlb	0	; select bank0
  7082  0E45  0821               	movf	strlen@s+1,w
  7083  0E46  00A4               	movwf	strlen@a+1
  7084  0E47  0820               	movf	strlen@s,w
  7085  0E48  00A3               	movwf	strlen@a
  7086  0E49  2E4E               	goto	l1803
  7087  0E4A                     l1801:
  7088  0E4A  3001               	movlw	1
  7089  0E4B  07A0               	addwf	strlen@s,f
  7090  0E4C  3000               	movlw	0
  7091  0E4D  3DA1               	addwfc	strlen@s+1,f
  7092  0E4E                     l1803:
  7093  0E4E  0820               	movf	strlen@s,w
  7094  0E4F  0084               	movwf	4
  7095  0E50  0821               	movf	strlen@s+1,w
  7096  0E51  0085               	movwf	5
  7097  0E52  0012               	moviw fsr0++
  7098  0E53  1D03               	btfss	3,2
  7099  0E54  2E56               	goto	u901
  7100  0E55  2E57               	goto	u900
  7101  0E56                     u901:
  7102  0E56  2E4A               	goto	l1801
  7103  0E57                     u900:
  7104  0E57                     l1805:
  7105  0E57  0823               	movf	strlen@a,w
  7106  0E58  0220               	subwf	strlen@s,w
  7107  0E59  00A0               	movwf	?_strlen
  7108  0E5A  0824               	movf	strlen@a+1,w
  7109  0E5B  3B21               	subwfb	strlen@s+1,w
  7110  0E5C  00A1               	movwf	?_strlen+1
  7111  0E5D                     l1100:
  7112  0E5D  0008               	return
  7113  0E5E                     __end_of_strlen:
  7114                           
  7115                           	psect	text12
  7116  0F66                     __ptext12:	
  7117 ;; *************** function _fputc *****************
  7118 ;; Defined at:
  7119 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  c               2    2[BANK0 ] int 
  7122 ;;  fp              1    4[BANK0 ] PTR struct _IO_FILE
  7123 ;;		 -> NULL(0), 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;		None
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  2    2[BANK0 ] int 
  7128 ;; Registers used:
  7129 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7135 ;;      Params:         0       3       0       0       0       0       0       0
  7136 ;;      Locals:         0       0       0       0       0       0       0       0
  7137 ;;      Temps:          0       5       0       0       0       0       0       0
  7138 ;;      Totals:         0       8       0       0       0       0       0       0
  7139 ;;Total ram usage:        8 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:    5
  7142 ;; This function calls:
  7143 ;;		_putch
  7144 ;; This function is called by:
  7145 ;;		_pad
  7146 ;;		_stoa
  7147 ;;		_vfpfcnvrt
  7148 ;;		_fputs
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           
  7153                           ;psect for function _fputc
  7154  0F66                     _fputc:
  7155  0F66                     l1777:	
  7156                           ;incstack = 0
  7157                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7158                           
  7159  0F66  0020               	movlb	0	; select bank0
  7160  0F67  0824               	movf	fputc@fp,w
  7161  0F68  1903               	btfsc	3,2
  7162  0F69  2F6B               	goto	u851
  7163  0F6A  2F6C               	goto	u850
  7164  0F6B                     u851:
  7165  0F6B  2F71               	goto	l1781
  7166  0F6C                     u850:
  7167  0F6C                     l1779:
  7168  0F6C  0824               	movf	fputc@fp,w
  7169  0F6D  1D03               	btfss	3,2
  7170  0F6E  2F70               	goto	u861
  7171  0F6F  2F71               	goto	u860
  7172  0F70                     u861:
  7173  0F70  2F76               	goto	l1783
  7174  0F71                     u860:
  7175  0F71                     l1781:
  7176  0F71  0822               	movf	fputc@c,w
  7177  0F72  318D  256F  318F   	fcall	_putch
  7178  0F75  2FA6               	goto	l1086
  7179  0F76                     l1783:
  7180  0F76  0824               	movf	fputc@fp,w
  7181  0F77  3E03               	addlw	3
  7182  0F78  0086               	movwf	6
  7183  0F79  0187               	clrf	7
  7184  0F7A  0016               	moviw fsr1++
  7185  0F7B  0401               	iorwf	1,w
  7186  0F7C  1903               	btfsc	3,2
  7187  0F7D  2F7F               	goto	u871
  7188  0F7E  2F80               	goto	u870
  7189  0F7F                     u871:
  7190  0F7F  2F9D               	goto	l1787
  7191  0F80                     u870:
  7192  0F80                     l1785:
  7193  0F80  0824               	movf	fputc@fp,w
  7194  0F81  3E03               	addlw	3
  7195  0F82  0086               	movwf	6
  7196  0F83  0187               	clrf	7
  7197  0F84  3F40               	moviw [0]fsr1
  7198  0F85  00A5               	movwf	??_fputc
  7199  0F86  3F41               	moviw [1]fsr1
  7200  0F87  00A6               	movwf	??_fputc+1
  7201  0F88  0A24               	incf	fputc@fp,w
  7202  0F89  0086               	movwf	6
  7203  0F8A  0187               	clrf	7
  7204  0F8B  3F40               	moviw [0]fsr1
  7205  0F8C  00A7               	movwf	??_fputc+2
  7206  0F8D  3F41               	moviw [1]fsr1
  7207  0F8E  00A8               	movwf	??_fputc+3
  7208  0F8F  0828               	movf	??_fputc+3,w
  7209  0F90  3A80               	xorlw	128
  7210  0F91  00A9               	movwf	??_fputc+4
  7211  0F92  0826               	movf	??_fputc+1,w
  7212  0F93  3A80               	xorlw	128
  7213  0F94  0229               	subwf	??_fputc+4,w
  7214  0F95  1D03               	skipz
  7215  0F96  2F99               	goto	u885
  7216  0F97  0825               	movf	??_fputc,w
  7217  0F98  0227               	subwf	??_fputc+2,w
  7218  0F99                     u885:
  7219  0F99  1803               	skipnc
  7220  0F9A  2F9C               	goto	u881
  7221  0F9B  2F9D               	goto	u880
  7222  0F9C                     u881:
  7223  0F9C  2FA6               	goto	l1086
  7224  0F9D                     u880:
  7225  0F9D                     l1787:
  7226  0F9D  0020               	movlb	0	; select bank0
  7227  0F9E  0A24               	incf	fputc@fp,w
  7228  0F9F  0086               	movwf	6
  7229  0FA0  0187               	clrf	7
  7230  0FA1  3001               	movlw	1
  7231  0FA2  0781               	addwf	1,f
  7232  0FA3  3141               	addfsr 1,1
  7233  0FA4  1803               	skipnc
  7234  0FA5  0A81               	incf	1,f
  7235  0FA6                     l1086:
  7236  0FA6  0008               	return
  7237  0FA7                     __end_of_fputc:
  7238                           
  7239                           	psect	text13
  7240  0D6F                     __ptext13:	
  7241 ;; *************** function _putch *****************
  7242 ;; Defined at:
  7243 ;;		line 146 in file "mcc_generated_files/eusart.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;  txData          1    wreg     unsigned char 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  txData          1    1[BANK0 ] unsigned char 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  1    wreg      void 
  7250 ;; Registers used:
  7251 ;;		wreg, status,2, status,0, pclath, cstack
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7257 ;;      Params:         0       0       0       0       0       0       0       0
  7258 ;;      Locals:         0       1       0       0       0       0       0       0
  7259 ;;      Temps:          0       0       0       0       0       0       0       0
  7260 ;;      Totals:         0       1       0       0       0       0       0       0
  7261 ;;Total ram usage:        1 bytes
  7262 ;; Hardware stack levels used:    1
  7263 ;; Hardware stack levels required when called:    4
  7264 ;; This function calls:
  7265 ;;		_EUSART_Write
  7266 ;; This function is called by:
  7267 ;;		_fputc
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           
  7271                           
  7272                           ;psect for function _putch
  7273  0D6F                     _putch:
  7274                           
  7275                           ;incstack = 0
  7276                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  7277                           ;putch@txData stored from wreg
  7278  0D6F  0020               	movlb	0	; select bank0
  7279  0D70  00A1               	movwf	putch@txData
  7280  0D71                     l1775:
  7281                           
  7282                           ;mcc_generated_files/eusart.c: 146: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 147: {;mcc_generated_files/eusart.c: 148:     EUSART_Write(txData);
  7283  0D71  0821               	movf	putch@txData,w
  7284  0D72  318D  25BD  318D   	fcall	_EUSART_Write
  7285  0D75                     l76:
  7286  0D75  0008               	return
  7287  0D76                     __end_of_putch:
  7288                           
  7289                           	psect	text14
  7290  0DBD                     __ptext14:	
  7291 ;; *************** function _EUSART_Write *****************
  7292 ;; Defined at:
  7293 ;;		line 132 in file "mcc_generated_files/eusart.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;  txData          1    wreg     unsigned char 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;  txData          1    0[BANK0 ] unsigned char 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      void 
  7300 ;; Registers used:
  7301 ;;		wreg
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7307 ;;      Params:         0       0       0       0       0       0       0       0
  7308 ;;      Locals:         0       1       0       0       0       0       0       0
  7309 ;;      Temps:          0       0       0       0       0       0       0       0
  7310 ;;      Totals:         0       1       0       0       0       0       0       0
  7311 ;;Total ram usage:        1 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    3
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_putch
  7318 ;;		_main
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           
  7323                           ;psect for function _EUSART_Write
  7324  0DBD                     _EUSART_Write:
  7325                           
  7326                           ;incstack = 0
  7327                           ; Regs used in _EUSART_Write: [wreg]
  7328                           ;EUSART_Write@txData stored from wreg
  7329  0DBD  0020               	movlb	0	; select bank0
  7330  0DBE  00A0               	movwf	EUSART_Write@txData
  7331  0DBF                     l1771:
  7332  0DBF                     l67:	
  7333                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  7334                           
  7335                           
  7336                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  7337  0DBF  1E11               	btfss	17,4	;volatile
  7338  0DC0  2DC2               	goto	u841
  7339  0DC1  2DC3               	goto	u840
  7340  0DC2                     u841:
  7341  0DC2  2DBF               	goto	l67
  7342  0DC3                     u840:
  7343  0DC3                     l1773:
  7344                           
  7345                           ;mcc_generated_files/eusart.c: 138:     TX1REG = txData;
  7346  0DC3  0820               	movf	EUSART_Write@txData,w
  7347  0DC4  0023               	movlb	3	; select bank3
  7348  0DC5  009A               	movwf	26	;volatile
  7349  0DC6                     l70:
  7350  0DC6  0008               	return
  7351  0DC7                     __end_of_EUSART_Write:
  7352                           
  7353                           	psect	text15
  7354  0EFC                     __ptext15:	
  7355 ;; *************** function ___lmul *****************
  7356 ;; Defined at:
  7357 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;  multiplier      4    0[BANK0 ] unsigned long 
  7360 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  7361 ;; Auto vars:     Size  Location     Type
  7362 ;;  product         4    8[BANK0 ] unsigned long 
  7363 ;; Return value:  Size  Location     Type
  7364 ;;                  4    0[BANK0 ] unsigned long 
  7365 ;; Registers used:
  7366 ;;		wreg, status,2, status,0
  7367 ;; Tracked objects:
  7368 ;;		On entry : 0/0
  7369 ;;		On exit  : 0/0
  7370 ;;		Unchanged: 0/0
  7371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7372 ;;      Params:         0       8       0       0       0       0       0       0
  7373 ;;      Locals:         0       4       0       0       0       0       0       0
  7374 ;;      Temps:          0       0       0       0       0       0       0       0
  7375 ;;      Totals:         0      12       0       0       0       0       0       0
  7376 ;;Total ram usage:       12 bytes
  7377 ;; Hardware stack levels used:    1
  7378 ;; Hardware stack levels required when called:    3
  7379 ;; This function calls:
  7380 ;;		Nothing
  7381 ;; This function is called by:
  7382 ;;		_main
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386                           
  7387                           ;psect for function ___lmul
  7388  0EFC                     ___lmul:
  7389  0EFC                     l2207:	
  7390                           ;incstack = 0
  7391                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7392                           
  7393  0EFC  3000               	movlw	0
  7394  0EFD  0020               	movlb	0	; select bank0
  7395  0EFE  00AB               	movwf	___lmul@product+3
  7396  0EFF  3000               	movlw	0
  7397  0F00  00AA               	movwf	___lmul@product+2
  7398  0F01  3000               	movlw	0
  7399  0F02  00A9               	movwf	___lmul@product+1
  7400  0F03  3000               	movlw	0
  7401  0F04  00A8               	movwf	___lmul@product
  7402  0F05                     l2209:
  7403  0F05  1C20               	btfss	___lmul@multiplier,0
  7404  0F06  2F08               	goto	u1341
  7405  0F07  2F09               	goto	u1340
  7406  0F08                     u1341:
  7407  0F08  2F11               	goto	l2213
  7408  0F09                     u1340:
  7409  0F09                     l2211:
  7410  0F09  0824               	movf	___lmul@multiplicand,w
  7411  0F0A  07A8               	addwf	___lmul@product,f
  7412  0F0B  0825               	movf	___lmul@multiplicand+1,w
  7413  0F0C  3DA9               	addwfc	___lmul@product+1,f
  7414  0F0D  0826               	movf	___lmul@multiplicand+2,w
  7415  0F0E  3DAA               	addwfc	___lmul@product+2,f
  7416  0F0F  0827               	movf	___lmul@multiplicand+3,w
  7417  0F10  3DAB               	addwfc	___lmul@product+3,f
  7418  0F11                     l2213:
  7419  0F11  3001               	movlw	1
  7420  0F12                     u1355:
  7421  0F12  35A4               	lslf	___lmul@multiplicand,f
  7422  0F13  0DA5               	rlf	___lmul@multiplicand+1,f
  7423  0F14  0DA6               	rlf	___lmul@multiplicand+2,f
  7424  0F15  0DA7               	rlf	___lmul@multiplicand+3,f
  7425  0F16  0B89               	decfsz	9,f
  7426  0F17  2F12               	goto	u1355
  7427  0F18                     l2215:
  7428  0F18  3001               	movlw	1
  7429  0F19                     u1365:
  7430  0F19  36A3               	lsrf	___lmul@multiplier+3,f
  7431  0F1A  0CA2               	rrf	___lmul@multiplier+2,f
  7432  0F1B  0CA1               	rrf	___lmul@multiplier+1,f
  7433  0F1C  0CA0               	rrf	___lmul@multiplier,f
  7434  0F1D  0B89               	decfsz	9,f
  7435  0F1E  2F19               	goto	u1365
  7436  0F1F  0823               	movf	___lmul@multiplier+3,w
  7437  0F20  0422               	iorwf	___lmul@multiplier+2,w
  7438  0F21  0421               	iorwf	___lmul@multiplier+1,w
  7439  0F22  0420               	iorwf	___lmul@multiplier,w
  7440  0F23  1D03               	skipz
  7441  0F24  2F26               	goto	u1371
  7442  0F25  2F27               	goto	u1370
  7443  0F26                     u1371:
  7444  0F26  2F05               	goto	l2209
  7445  0F27                     u1370:
  7446  0F27                     l2217:
  7447  0F27  082B               	movf	___lmul@product+3,w
  7448  0F28  00A3               	movwf	?___lmul+3
  7449  0F29  082A               	movf	___lmul@product+2,w
  7450  0F2A  00A2               	movwf	?___lmul+2
  7451  0F2B  0829               	movf	___lmul@product+1,w
  7452  0F2C  00A1               	movwf	?___lmul+1
  7453  0F2D  0828               	movf	___lmul@product,w
  7454  0F2E  00A0               	movwf	?___lmul
  7455  0F2F                     l541:
  7456  0F2F  0008               	return
  7457  0F30                     __end_of___lmul:
  7458                           
  7459                           	psect	text16
  7460  0752                     __ptext16:	
  7461 ;; *************** function ___lldiv *****************
  7462 ;; Defined at:
  7463 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;  divisor         4   12[BANK0 ] unsigned long 
  7466 ;;  dividend        4   16[BANK0 ] unsigned long 
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;  quotient        4   21[BANK0 ] unsigned long 
  7469 ;;  counter         1   25[BANK0 ] unsigned char 
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  4   12[BANK0 ] unsigned long 
  7472 ;; Registers used:
  7473 ;;		wreg, status,2, status,0
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7479 ;;      Params:         0       8       0       0       0       0       0       0
  7480 ;;      Locals:         0       5       0       0       0       0       0       0
  7481 ;;      Temps:          0       1       0       0       0       0       0       0
  7482 ;;      Totals:         0      14       0       0       0       0       0       0
  7483 ;;Total ram usage:       14 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; Hardware stack levels required when called:    3
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		_main
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           
  7494                           ;psect for function ___lldiv
  7495  0752                     ___lldiv:
  7496  0752                     l2221:	
  7497                           ;incstack = 0
  7498                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7499                           
  7500  0752  3000               	movlw	0
  7501  0753  0020               	movlb	0	; select bank0
  7502  0754  00B8               	movwf	___lldiv@quotient+3
  7503  0755  3000               	movlw	0
  7504  0756  00B7               	movwf	___lldiv@quotient+2
  7505  0757  3000               	movlw	0
  7506  0758  00B6               	movwf	___lldiv@quotient+1
  7507  0759  3000               	movlw	0
  7508  075A  00B5               	movwf	___lldiv@quotient
  7509  075B  082F               	movf	___lldiv@divisor+3,w
  7510  075C  042E               	iorwf	___lldiv@divisor+2,w
  7511  075D  042D               	iorwf	___lldiv@divisor+1,w
  7512  075E  042C               	iorwf	___lldiv@divisor,w
  7513  075F  1903               	skipnz
  7514  0760  2F62               	goto	u1381
  7515  0761  2F63               	goto	u1380
  7516  0762                     u1381:
  7517  0762  2FA4               	goto	l2241
  7518  0763                     u1380:
  7519  0763                     l2223:
  7520  0763  01B9               	clrf	___lldiv@counter
  7521  0764  0AB9               	incf	___lldiv@counter,f
  7522  0765  2F71               	goto	l2227
  7523  0766                     l2225:
  7524  0766  3001               	movlw	1
  7525  0767                     u1395:
  7526  0767  35AC               	lslf	___lldiv@divisor,f
  7527  0768  0DAD               	rlf	___lldiv@divisor+1,f
  7528  0769  0DAE               	rlf	___lldiv@divisor+2,f
  7529  076A  0DAF               	rlf	___lldiv@divisor+3,f
  7530  076B  0B89               	decfsz	9,f
  7531  076C  2F67               	goto	u1395
  7532  076D  3001               	movlw	1
  7533  076E  00B4               	movwf	??___lldiv
  7534  076F  0834               	movf	??___lldiv,w
  7535  0770  07B9               	addwf	___lldiv@counter,f
  7536  0771                     l2227:
  7537  0771  1FAF               	btfss	___lldiv@divisor+3,7
  7538  0772  2F74               	goto	u1401
  7539  0773  2F75               	goto	u1400
  7540  0774                     u1401:
  7541  0774  2F66               	goto	l2225
  7542  0775                     u1400:
  7543  0775                     l2229:
  7544  0775  3001               	movlw	1
  7545  0776                     u1415:
  7546  0776  35B5               	lslf	___lldiv@quotient,f
  7547  0777  0DB6               	rlf	___lldiv@quotient+1,f
  7548  0778  0DB7               	rlf	___lldiv@quotient+2,f
  7549  0779  0DB8               	rlf	___lldiv@quotient+3,f
  7550  077A  0B89               	decfsz	9,f
  7551  077B  2F76               	goto	u1415
  7552  077C                     l2231:
  7553  077C  082F               	movf	___lldiv@divisor+3,w
  7554  077D  0233               	subwf	___lldiv@dividend+3,w
  7555  077E  1D03               	skipz
  7556  077F  2F8A               	goto	u1425
  7557  0780  082E               	movf	___lldiv@divisor+2,w
  7558  0781  0232               	subwf	___lldiv@dividend+2,w
  7559  0782  1D03               	skipz
  7560  0783  2F8A               	goto	u1425
  7561  0784  082D               	movf	___lldiv@divisor+1,w
  7562  0785  0231               	subwf	___lldiv@dividend+1,w
  7563  0786  1D03               	skipz
  7564  0787  2F8A               	goto	u1425
  7565  0788  082C               	movf	___lldiv@divisor,w
  7566  0789  0230               	subwf	___lldiv@dividend,w
  7567  078A                     u1425:
  7568  078A  1C03               	skipc
  7569  078B  2F8D               	goto	u1421
  7570  078C  2F8E               	goto	u1420
  7571  078D                     u1421:
  7572  078D  2F97               	goto	l2237
  7573  078E                     u1420:
  7574  078E                     l2233:
  7575  078E  082C               	movf	___lldiv@divisor,w
  7576  078F  02B0               	subwf	___lldiv@dividend,f
  7577  0790  082D               	movf	___lldiv@divisor+1,w
  7578  0791  3BB1               	subwfb	___lldiv@dividend+1,f
  7579  0792  082E               	movf	___lldiv@divisor+2,w
  7580  0793  3BB2               	subwfb	___lldiv@dividend+2,f
  7581  0794  082F               	movf	___lldiv@divisor+3,w
  7582  0795  3BB3               	subwfb	___lldiv@dividend+3,f
  7583  0796                     l2235:
  7584  0796  1435               	bsf	___lldiv@quotient,0
  7585  0797                     l2237:
  7586  0797  3001               	movlw	1
  7587  0798                     u1435:
  7588  0798  36AF               	lsrf	___lldiv@divisor+3,f
  7589  0799  0CAE               	rrf	___lldiv@divisor+2,f
  7590  079A  0CAD               	rrf	___lldiv@divisor+1,f
  7591  079B  0CAC               	rrf	___lldiv@divisor,f
  7592  079C  0B89               	decfsz	9,f
  7593  079D  2F98               	goto	u1435
  7594  079E                     l2239:
  7595  079E  3001               	movlw	1
  7596  079F  02B9               	subwf	___lldiv@counter,f
  7597  07A0  1D03               	btfss	3,2
  7598  07A1  2FA3               	goto	u1441
  7599  07A2  2FA4               	goto	u1440
  7600  07A3                     u1441:
  7601  07A3  2F75               	goto	l2229
  7602  07A4                     u1440:
  7603  07A4                     l2241:
  7604  07A4  0838               	movf	___lldiv@quotient+3,w
  7605  07A5  00AF               	movwf	?___lldiv+3
  7606  07A6  0837               	movf	___lldiv@quotient+2,w
  7607  07A7  00AE               	movwf	?___lldiv+2
  7608  07A8  0836               	movf	___lldiv@quotient+1,w
  7609  07A9  00AD               	movwf	?___lldiv+1
  7610  07AA  0835               	movf	___lldiv@quotient,w
  7611  07AB  00AC               	movwf	?___lldiv
  7612  07AC                     l563:
  7613  07AC  0008               	return
  7614  07AD                     __end_of___lldiv:
  7615                           
  7616                           	psect	text17
  7617  0E5E                     __ptext17:	
  7618 ;; *************** function _SYSTEM_Initialize *****************
  7619 ;; Defined at:
  7620 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;		None
  7623 ;; Auto vars:     Size  Location     Type
  7624 ;;		None
  7625 ;; Return value:  Size  Location     Type
  7626 ;;                  1    wreg      void 
  7627 ;; Registers used:
  7628 ;;		wreg, status,2, status,0, pclath, cstack
  7629 ;; Tracked objects:
  7630 ;;		On entry : 0/0
  7631 ;;		On exit  : 0/0
  7632 ;;		Unchanged: 0/0
  7633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7634 ;;      Params:         0       0       0       0       0       0       0       0
  7635 ;;      Locals:         0       0       0       0       0       0       0       0
  7636 ;;      Temps:          0       0       0       0       0       0       0       0
  7637 ;;      Totals:         0       0       0       0       0       0       0       0
  7638 ;;Total ram usage:        0 bytes
  7639 ;; Hardware stack levels used:    1
  7640 ;; Hardware stack levels required when called:    5
  7641 ;; This function calls:
  7642 ;;		_ADC_Initialize
  7643 ;;		_CCP1_Initialize
  7644 ;;		_CLC2_Initialize
  7645 ;;		_CMP2_Initialize
  7646 ;;		_EUSART_Initialize
  7647 ;;		_OPA2_Initialize
  7648 ;;		_OSCILLATOR_Initialize
  7649 ;;		_PIN_MANAGER_Initialize
  7650 ;;		_TMR1_Initialize
  7651 ;;		_TMR2_Initialize
  7652 ;;		_WDT_Initialize
  7653 ;; This function is called by:
  7654 ;;		_main
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           
  7659                           ;psect for function _SYSTEM_Initialize
  7660  0E5E                     _SYSTEM_Initialize:
  7661  0E5E                     l2177:	
  7662                           ;incstack = 0
  7663                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7664                           
  7665                           
  7666                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7667  0E5E  318E  26CD  318E   	fcall	_PIN_MANAGER_Initialize
  7668                           
  7669                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7670  0E61  318D  2576  318E   	fcall	_OSCILLATOR_Initialize
  7671                           
  7672                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  7673  0E64  318D  2559  318E   	fcall	_WDT_Initialize
  7674                           
  7675                           ;mcc_generated_files/mcc.c: 56:     CMP2_Initialize();
  7676  0E67  318D  255D  318E   	fcall	_CMP2_Initialize
  7677                           
  7678                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  7679  0E6A  318D  25B3  318E   	fcall	_ADC_Initialize
  7680                           
  7681                           ;mcc_generated_files/mcc.c: 58:     CCP1_Initialize();
  7682  0E6D  318D  25F4  318E   	fcall	_CCP1_Initialize
  7683                           
  7684                           ;mcc_generated_files/mcc.c: 59:     OPA2_Initialize();
  7685  0E70  318D  2555  318E   	fcall	_OPA2_Initialize
  7686                           
  7687                           ;mcc_generated_files/mcc.c: 60:     CLC2_Initialize();
  7688  0E73  318D  25E4  318E   	fcall	_CLC2_Initialize
  7689                           
  7690                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  7691  0E76  318D  257E  318E   	fcall	_TMR2_Initialize
  7692                           
  7693                           ;mcc_generated_files/mcc.c: 62:     TMR1_Initialize();
  7694  0E79  318E  2606  318E   	fcall	_TMR1_Initialize
  7695                           
  7696                           ;mcc_generated_files/mcc.c: 63:     EUSART_Initialize();
  7697  0E7C  318E  2680  318E   	fcall	_EUSART_Initialize
  7698  0E7F                     l163:
  7699  0E7F  0008               	return
  7700  0E80                     __end_of_SYSTEM_Initialize:
  7701                           
  7702                           	psect	text18
  7703  0D59                     __ptext18:	
  7704 ;; *************** function _WDT_Initialize *****************
  7705 ;; Defined at:
  7706 ;;		line 78 in file "mcc_generated_files/mcc.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;		None
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;		None
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1    wreg      void 
  7713 ;; Registers used:
  7714 ;;		wreg
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7720 ;;      Params:         0       0       0       0       0       0       0       0
  7721 ;;      Locals:         0       0       0       0       0       0       0       0
  7722 ;;      Temps:          0       0       0       0       0       0       0       0
  7723 ;;      Totals:         0       0       0       0       0       0       0       0
  7724 ;;Total ram usage:        0 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    3
  7727 ;; This function calls:
  7728 ;;		Nothing
  7729 ;; This function is called by:
  7730 ;;		_SYSTEM_Initialize
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           
  7735                           ;psect for function _WDT_Initialize
  7736  0D59                     _WDT_Initialize:
  7737  0D59                     l2087:	
  7738                           ;incstack = 0
  7739                           ; Regs used in _WDT_Initialize: [wreg]
  7740                           
  7741                           
  7742                           ;mcc_generated_files/mcc.c: 81:     WDTCON = 0x16;
  7743  0D59  3016               	movlw	22
  7744  0D5A  0021               	movlb	1	; select bank1
  7745  0D5B  0097               	movwf	23	;volatile
  7746  0D5C                     l169:
  7747  0D5C  0008               	return
  7748  0D5D                     __end_of_WDT_Initialize:
  7749                           
  7750                           	psect	text19
  7751  0D7E                     __ptext19:	
  7752 ;; *************** function _TMR2_Initialize *****************
  7753 ;; Defined at:
  7754 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;		None
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;		None
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  1    wreg      void 
  7761 ;; Registers used:
  7762 ;;		wreg, status,2
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7768 ;;      Params:         0       0       0       0       0       0       0       0
  7769 ;;      Locals:         0       0       0       0       0       0       0       0
  7770 ;;      Temps:          0       0       0       0       0       0       0       0
  7771 ;;      Totals:         0       0       0       0       0       0       0       0
  7772 ;;Total ram usage:        0 bytes
  7773 ;; Hardware stack levels used:    1
  7774 ;; Hardware stack levels required when called:    3
  7775 ;; This function calls:
  7776 ;;		Nothing
  7777 ;; This function is called by:
  7778 ;;		_SYSTEM_Initialize
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           
  7783                           ;psect for function _TMR2_Initialize
  7784  0D7E                     _TMR2_Initialize:
  7785  0D7E                     l2119:	
  7786                           ;incstack = 0
  7787                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  7788                           
  7789                           
  7790                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xF3;
  7791  0D7E  30F3               	movlw	243
  7792  0D7F  0020               	movlb	0	; select bank0
  7793  0D80  009B               	movwf	27	;volatile
  7794  0D81                     l2121:
  7795                           
  7796                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  7797  0D81  019A               	clrf	26	;volatile
  7798  0D82                     l2123:
  7799                           
  7800                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  7801  0D82  1091               	bcf	17,1	;volatile
  7802  0D83                     l2125:
  7803                           
  7804                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x07;
  7805  0D83  3007               	movlw	7
  7806  0D84  009C               	movwf	28	;volatile
  7807  0D85                     l331:
  7808  0D85  0008               	return
  7809  0D86                     __end_of_TMR2_Initialize:
  7810                           
  7811                           	psect	text20
  7812  0E06                     __ptext20:	
  7813 ;; *************** function _TMR1_Initialize *****************
  7814 ;; Defined at:
  7815 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;		None
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1    wreg      void 
  7822 ;; Registers used:
  7823 ;;		wreg, status,2
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7829 ;;      Params:         0       0       0       0       0       0       0       0
  7830 ;;      Locals:         0       0       0       0       0       0       0       0
  7831 ;;      Temps:          0       0       0       0       0       0       0       0
  7832 ;;      Totals:         0       0       0       0       0       0       0       0
  7833 ;;Total ram usage:        0 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:    3
  7836 ;; This function calls:
  7837 ;;		Nothing
  7838 ;; This function is called by:
  7839 ;;		_SYSTEM_Initialize
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           
  7844                           ;psect for function _TMR1_Initialize
  7845  0E06                     _TMR1_Initialize:
  7846  0E06                     l2127:	
  7847                           ;incstack = 0
  7848                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  7849                           
  7850                           
  7851                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  7852  0E06  0020               	movlb	0	; select bank0
  7853  0E07  0199               	clrf	25	;volatile
  7854  0E08                     l2129:
  7855                           
  7856                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x06;
  7857  0E08  3006               	movlw	6
  7858  0E09  0097               	movwf	23	;volatile
  7859  0E0A                     l2131:
  7860                           
  7861                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x40;
  7862  0E0A  3040               	movlw	64
  7863  0E0B  0096               	movwf	22	;volatile
  7864  0E0C                     l2133:
  7865                           
  7866                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  7867  0E0C  1011               	bcf	17,0	;volatile
  7868  0E0D                     l2135:
  7869                           
  7870                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7871  0E0D  0817               	movf	23,w	;volatile
  7872  0E0E  0022               	movlb	2	; select bank2
  7873  0E0F  00D9               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
  7874  0E10  0020               	movlb	0	; select bank0
  7875  0E11  0816               	movf	22,w	;volatile
  7876  0E12  0022               	movlb	2	; select bank2
  7877  0E13  00D8               	movwf	_timer1ReloadVal^(0+256)	;volatile
  7878  0E14                     l2137:
  7879                           
  7880                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x81;
  7881  0E14  3081               	movlw	129
  7882  0E15  0020               	movlb	0	; select bank0
  7883  0E16  0098               	movwf	24	;volatile
  7884  0E17                     l236:
  7885  0E17  0008               	return
  7886  0E18                     __end_of_TMR1_Initialize:
  7887                           
  7888                           	psect	text21
  7889  0ECD                     __ptext21:	
  7890 ;; *************** function _PIN_MANAGER_Initialize *****************
  7891 ;; Defined at:
  7892 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;		None
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;		None
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  1    wreg      void 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7906 ;;      Params:         0       0       0       0       0       0       0       0
  7907 ;;      Locals:         0       0       0       0       0       0       0       0
  7908 ;;      Temps:          0       0       0       0       0       0       0       0
  7909 ;;      Totals:         0       0       0       0       0       0       0       0
  7910 ;;Total ram usage:        0 bytes
  7911 ;; Hardware stack levels used:    1
  7912 ;; Hardware stack levels required when called:    3
  7913 ;; This function calls:
  7914 ;;		Nothing
  7915 ;; This function is called by:
  7916 ;;		_SYSTEM_Initialize
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           
  7921                           ;psect for function _PIN_MANAGER_Initialize
  7922  0ECD                     _PIN_MANAGER_Initialize:
  7923  0ECD                     l2063:	
  7924                           ;incstack = 0
  7925                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7926                           
  7927                           
  7928                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7929  0ECD  0022               	movlb	2	; select bank2
  7930  0ECE  018C               	clrf	12	;volatile
  7931                           
  7932                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  7933  0ECF  018E               	clrf	14	;volatile
  7934                           
  7935                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x00;
  7936  0ED0  0021               	movlb	1	; select bank1
  7937  0ED1  018C               	clrf	12	;volatile
  7938  0ED2                     l2065:
  7939                           
  7940                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x37;
  7941  0ED2  3037               	movlw	55
  7942  0ED3  008E               	movwf	14	;volatile
  7943  0ED4                     l2067:
  7944                           
  7945                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x3F;
  7946  0ED4  303F               	movlw	63
  7947  0ED5  0023               	movlb	3	; select bank3
  7948  0ED6  008E               	movwf	14	;volatile
  7949                           
  7950                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x00;
  7951  0ED7  018C               	clrf	12	;volatile
  7952  0ED8                     l2069:
  7953                           
  7954                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x09;
  7955  0ED8  3009               	movlw	9
  7956  0ED9  0024               	movlb	4	; select bank4
  7957  0EDA  008C               	movwf	12	;volatile
  7958  0EDB                     l2071:
  7959                           
  7960                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  7961  0EDB  018E               	clrf	14	;volatile
  7962  0EDC                     l2073:
  7963                           
  7964                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7965  0EDC  0021               	movlb	1	; select bank1
  7966  0EDD  1795               	bsf	21,7	;volatile
  7967  0EDE                     l2075:
  7968                           
  7969                           ;mcc_generated_files/pin_manager.c: 85:     ODCONA = 0x00;
  7970  0EDE  0025               	movlb	5	; select bank5
  7971  0EDF  018C               	clrf	12	;volatile
  7972  0EE0                     l2077:
  7973                           
  7974                           ;mcc_generated_files/pin_manager.c: 86:     ODCONC = 0x00;
  7975  0EE0  018E               	clrf	14	;volatile
  7976                           
  7977                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONA = 0x37;
  7978  0EE1  3037               	movlw	55
  7979  0EE2  0026               	movlb	6	; select bank6
  7980  0EE3  008C               	movwf	12	;volatile
  7981                           
  7982                           ;mcc_generated_files/pin_manager.c: 92:     SLRCONC = 0x3F;
  7983  0EE4  303F               	movlw	63
  7984  0EE5  008E               	movwf	14	;volatile
  7985                           
  7986                           ;mcc_generated_files/pin_manager.c: 97:     INLVLA = 0x3F;
  7987  0EE6  303F               	movlw	63
  7988  0EE7  0027               	movlb	7	; select bank7
  7989  0EE8  008C               	movwf	12	;volatile
  7990                           
  7991                           ;mcc_generated_files/pin_manager.c: 98:     INLVLC = 0x3F;
  7992  0EE9  303F               	movlw	63
  7993  0EEA  008E               	movwf	14	;volatile
  7994                           
  7995                           ;mcc_generated_files/pin_manager.c: 107:     T1CKIPPS = 0x02;
  7996  0EEB  3002               	movlw	2
  7997  0EEC  003C               	movlb	28	; select bank28
  7998  0EED  0092               	movwf	18	;volatile
  7999                           
  8000                           ;mcc_generated_files/pin_manager.c: 108:     RA4PPS = 0x14;
  8001  0EEE  3014               	movlw	20
  8002  0EEF  003D               	movlb	29	; select bank29
  8003  0EF0  0094               	movwf	20	;volatile
  8004                           
  8005                           ;mcc_generated_files/pin_manager.c: 109:     CLCIN0PPS = 0x13;
  8006  0EF1  3013               	movlw	19
  8007  0EF2  003C               	movlb	28	; select bank28
  8008  0EF3  00A8               	movwf	40	;volatile
  8009                           
  8010                           ;mcc_generated_files/pin_manager.c: 110:     CCP1PPS = 0x01;
  8011  0EF4  3001               	movlw	1
  8012  0EF5  0094               	movwf	20	;volatile
  8013                           
  8014                           ;mcc_generated_files/pin_manager.c: 111:     RA1PPS = 0x05;
  8015  0EF6  3005               	movlw	5
  8016  0EF7  003D               	movlb	29	; select bank29
  8017  0EF8  0091               	movwf	17	;volatile
  8018                           
  8019                           ;mcc_generated_files/pin_manager.c: 112:     RA2PPS = 0x17;
  8020  0EF9  3017               	movlw	23
  8021  0EFA  0092               	movwf	18	;volatile
  8022  0EFB                     l214:
  8023  0EFB  0008               	return
  8024  0EFC                     __end_of_PIN_MANAGER_Initialize:
  8025                           
  8026                           	psect	text22
  8027  0D76                     __ptext22:	
  8028 ;; *************** function _OSCILLATOR_Initialize *****************
  8029 ;; Defined at:
  8030 ;;		line 66 in file "mcc_generated_files/mcc.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;		None
  8033 ;; Auto vars:     Size  Location     Type
  8034 ;;		None
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  1    wreg      void 
  8037 ;; Registers used:
  8038 ;;		wreg, status,2
  8039 ;; Tracked objects:
  8040 ;;		On entry : 0/0
  8041 ;;		On exit  : 0/0
  8042 ;;		Unchanged: 0/0
  8043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8044 ;;      Params:         0       0       0       0       0       0       0       0
  8045 ;;      Locals:         0       0       0       0       0       0       0       0
  8046 ;;      Temps:          0       0       0       0       0       0       0       0
  8047 ;;      Totals:         0       0       0       0       0       0       0       0
  8048 ;;Total ram usage:        0 bytes
  8049 ;; Hardware stack levels used:    1
  8050 ;; Hardware stack levels required when called:    3
  8051 ;; This function calls:
  8052 ;;		Nothing
  8053 ;; This function is called by:
  8054 ;;		_SYSTEM_Initialize
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           
  8059                           ;psect for function _OSCILLATOR_Initialize
  8060  0D76                     _OSCILLATOR_Initialize:
  8061  0D76                     l2079:	
  8062                           ;incstack = 0
  8063                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8064                           
  8065                           
  8066                           ;mcc_generated_files/mcc.c: 69:     OSCCON = 0x78;
  8067  0D76  3078               	movlw	120
  8068  0D77  0021               	movlb	1	; select bank1
  8069  0D78  0099               	movwf	25	;volatile
  8070  0D79                     l2081:
  8071                           
  8072                           ;mcc_generated_files/mcc.c: 71:     OSCSTAT = 0x00;
  8073  0D79  019A               	clrf	26	;volatile
  8074  0D7A                     l2083:
  8075                           
  8076                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  8077  0D7A  0198               	clrf	24	;volatile
  8078  0D7B                     l2085:
  8079                           
  8080                           ;mcc_generated_files/mcc.c: 75:     BORCON = 0x00;
  8081  0D7B  0022               	movlb	2	; select bank2
  8082  0D7C  0196               	clrf	22	;volatile
  8083  0D7D                     l166:
  8084  0D7D  0008               	return
  8085  0D7E                     __end_of_OSCILLATOR_Initialize:
  8086                           
  8087                           	psect	text23
  8088  0D55                     __ptext23:	
  8089 ;; *************** function _OPA2_Initialize *****************
  8090 ;; Defined at:
  8091 ;;		line 58 in file "mcc_generated_files/opa2.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;		None
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;		None
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  1    wreg      void 
  8098 ;; Registers used:
  8099 ;;		wreg
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8105 ;;      Params:         0       0       0       0       0       0       0       0
  8106 ;;      Locals:         0       0       0       0       0       0       0       0
  8107 ;;      Temps:          0       0       0       0       0       0       0       0
  8108 ;;      Totals:         0       0       0       0       0       0       0       0
  8109 ;;Total ram usage:        0 bytes
  8110 ;; Hardware stack levels used:    1
  8111 ;; Hardware stack levels required when called:    3
  8112 ;; This function calls:
  8113 ;;		Nothing
  8114 ;; This function is called by:
  8115 ;;		_SYSTEM_Initialize
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           
  8120                           ;psect for function _OPA2_Initialize
  8121  0D55                     _OPA2_Initialize:
  8122  0D55                     l2061:	
  8123                           ;incstack = 0
  8124                           ; Regs used in _OPA2_Initialize: [wreg]
  8125                           
  8126                           
  8127                           ;mcc_generated_files/opa2.c: 61:     OPA2CON = 0xC0;
  8128  0D55  30C0               	movlw	192
  8129  0D56  002A               	movlb	10	; select bank10
  8130  0D57  0095               	movwf	21	;volatile
  8131  0D58                     l128:
  8132  0D58  0008               	return
  8133  0D59                     __end_of_OPA2_Initialize:
  8134                           
  8135                           	psect	text24
  8136  0E80                     __ptext24:	
  8137 ;; *************** function _EUSART_Initialize *****************
  8138 ;; Defined at:
  8139 ;;		line 66 in file "mcc_generated_files/eusart.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;		None
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;		None
  8144 ;; Return value:  Size  Location     Type
  8145 ;;                  1    wreg      void 
  8146 ;; Registers used:
  8147 ;;		wreg, status,2, status,0, pclath, cstack
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8153 ;;      Params:         0       0       0       0       0       0       0       0
  8154 ;;      Locals:         0       0       0       0       0       0       0       0
  8155 ;;      Temps:          0       0       0       0       0       0       0       0
  8156 ;;      Totals:         0       0       0       0       0       0       0       0
  8157 ;;Total ram usage:        0 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; Hardware stack levels required when called:    4
  8160 ;; This function calls:
  8161 ;;		_EUSART_SetErrorHandler
  8162 ;;		_EUSART_SetFramingErrorHandler
  8163 ;;		_EUSART_SetOverrunErrorHandler
  8164 ;; This function is called by:
  8165 ;;		_SYSTEM_Initialize
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           
  8170                           ;psect for function _EUSART_Initialize
  8171  0E80                     _EUSART_Initialize:
  8172  0E80                     l2047:	
  8173                           ;incstack = 0
  8174                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8175                           
  8176                           
  8177                           ;mcc_generated_files/eusart.c: 71:     BAUD1CON = 0x08;
  8178  0E80  3008               	movlw	8
  8179  0E81  0023               	movlb	3	; select bank3
  8180  0E82  009F               	movwf	31	;volatile
  8181                           
  8182                           ;mcc_generated_files/eusart.c: 74:     RC1STA = 0x80;
  8183  0E83  3080               	movlw	128
  8184  0E84  009D               	movwf	29	;volatile
  8185                           
  8186                           ;mcc_generated_files/eusart.c: 77:     TX1STA = 0x24;
  8187  0E85  3024               	movlw	36
  8188  0E86  009E               	movwf	30	;volatile
  8189                           
  8190                           ;mcc_generated_files/eusart.c: 80:     SP1BRGL = 0x22;
  8191  0E87  3022               	movlw	34
  8192  0E88  009B               	movwf	27	;volatile
  8193  0E89                     l2049:
  8194                           
  8195                           ;mcc_generated_files/eusart.c: 83:     SP1BRGH = 0x00;
  8196  0E89  019C               	clrf	28	;volatile
  8197  0E8A                     l2051:
  8198                           
  8199                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  8200  0E8A  3000               	movlw	0
  8201  0E8B  0020               	movlb	0	; select bank0
  8202  0E8C  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8203  0E8D  3000               	movlw	0
  8204  0E8E  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8205  0E8F  318D  25A1  318E   	fcall	_EUSART_SetFramingErrorHandler
  8206  0E92                     l2053:
  8207                           
  8208                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  8209  0E92  3000               	movlw	0
  8210  0E93  0020               	movlb	0	; select bank0
  8211  0E94  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8212  0E95  3000               	movlw	0
  8213  0E96  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8214  0E97  318D  25AA  318E   	fcall	_EUSART_SetOverrunErrorHandler
  8215  0E9A                     l2055:
  8216                           
  8217                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  8218  0E9A  3000               	movlw	0
  8219  0E9B  0020               	movlb	0	; select bank0
  8220  0E9C  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  8221  0E9D  3000               	movlw	0
  8222  0E9E  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8223  0E9F  318D  2598  318E   	fcall	_EUSART_SetErrorHandler
  8224  0EA2                     l2057:
  8225                           
  8226                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  8227  0EA2  01FA               	clrf	_eusartRxLastError	;volatile
  8228  0EA3                     l43:
  8229  0EA3  0008               	return
  8230  0EA4                     __end_of_EUSART_Initialize:
  8231                           
  8232                           	psect	text25
  8233  0DAA                     __ptext25:	
  8234 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8235 ;; Defined at:
  8236 ;;		line 170 in file "mcc_generated_files/eusart.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8239 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8240 ;; Auto vars:     Size  Location     Type
  8241 ;;		None
  8242 ;; Return value:  Size  Location     Type
  8243 ;;                  1    wreg      void 
  8244 ;; Registers used:
  8245 ;;		wreg
  8246 ;; Tracked objects:
  8247 ;;		On entry : 0/0
  8248 ;;		On exit  : 0/0
  8249 ;;		Unchanged: 0/0
  8250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8251 ;;      Params:         0       2       0       0       0       0       0       0
  8252 ;;      Locals:         0       0       0       0       0       0       0       0
  8253 ;;      Temps:          0       0       0       0       0       0       0       0
  8254 ;;      Totals:         0       2       0       0       0       0       0       0
  8255 ;;Total ram usage:        2 bytes
  8256 ;; Hardware stack levels used:    1
  8257 ;; Hardware stack levels required when called:    3
  8258 ;; This function calls:
  8259 ;;		Nothing
  8260 ;; This function is called by:
  8261 ;;		_EUSART_Initialize
  8262 ;; This function uses a non-reentrant model
  8263 ;;
  8264                           
  8265                           
  8266                           ;psect for function _EUSART_SetOverrunErrorHandler
  8267  0DAA                     _EUSART_SetOverrunErrorHandler:
  8268  0DAA                     l1979:	
  8269                           ;incstack = 0
  8270                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8271                           
  8272                           
  8273                           ;mcc_generated_files/eusart.c: 171:     EUSART_OverrunErrorHandler = interruptHandler;
  8274  0DAA  0020               	movlb	0	; select bank0
  8275  0DAB  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8276  0DAC  0022               	movlb	2	; select bank2
  8277  0DAD  00DD               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  8278  0DAE  0020               	movlb	0	; select bank0
  8279  0DAF  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8280  0DB0  0022               	movlb	2	; select bank2
  8281  0DB1  00DC               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  8282  0DB2                     l91:
  8283  0DB2  0008               	return
  8284  0DB3                     __end_of_EUSART_SetOverrunErrorHandler:
  8285                           
  8286                           	psect	text26
  8287  0DA1                     __ptext26:	
  8288 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8289 ;; Defined at:
  8290 ;;		line 166 in file "mcc_generated_files/eusart.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8293 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;		None
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  1    wreg      void 
  8298 ;; Registers used:
  8299 ;;		wreg
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8305 ;;      Params:         0       2       0       0       0       0       0       0
  8306 ;;      Locals:         0       0       0       0       0       0       0       0
  8307 ;;      Temps:          0       0       0       0       0       0       0       0
  8308 ;;      Totals:         0       2       0       0       0       0       0       0
  8309 ;;Total ram usage:        2 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:    3
  8312 ;; This function calls:
  8313 ;;		Nothing
  8314 ;; This function is called by:
  8315 ;;		_EUSART_Initialize
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           
  8320                           ;psect for function _EUSART_SetFramingErrorHandler
  8321  0DA1                     _EUSART_SetFramingErrorHandler:
  8322  0DA1                     l1977:	
  8323                           ;incstack = 0
  8324                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8325                           
  8326                           
  8327                           ;mcc_generated_files/eusart.c: 167:     EUSART_FramingErrorHandler = interruptHandler;
  8328  0DA1  0020               	movlb	0	; select bank0
  8329  0DA2  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8330  0DA3  0022               	movlb	2	; select bank2
  8331  0DA4  00DF               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  8332  0DA5  0020               	movlb	0	; select bank0
  8333  0DA6  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8334  0DA7  0022               	movlb	2	; select bank2
  8335  0DA8  00DE               	movwf	_EUSART_FramingErrorHandler^(0+256)
  8336  0DA9                     l88:
  8337  0DA9  0008               	return
  8338  0DAA                     __end_of_EUSART_SetFramingErrorHandler:
  8339                           
  8340                           	psect	text27
  8341  0D98                     __ptext27:	
  8342 ;; *************** function _EUSART_SetErrorHandler *****************
  8343 ;; Defined at:
  8344 ;;		line 174 in file "mcc_generated_files/eusart.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8347 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  1    wreg      void 
  8352 ;; Registers used:
  8353 ;;		wreg
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8359 ;;      Params:         0       2       0       0       0       0       0       0
  8360 ;;      Locals:         0       0       0       0       0       0       0       0
  8361 ;;      Temps:          0       0       0       0       0       0       0       0
  8362 ;;      Totals:         0       2       0       0       0       0       0       0
  8363 ;;Total ram usage:        2 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; Hardware stack levels required when called:    3
  8366 ;; This function calls:
  8367 ;;		Nothing
  8368 ;; This function is called by:
  8369 ;;		_EUSART_Initialize
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           
  8374                           ;psect for function _EUSART_SetErrorHandler
  8375  0D98                     _EUSART_SetErrorHandler:
  8376  0D98                     l1981:	
  8377                           ;incstack = 0
  8378                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8379                           
  8380                           
  8381                           ;mcc_generated_files/eusart.c: 175:     EUSART_ErrorHandler = interruptHandler;
  8382  0D98  0020               	movlb	0	; select bank0
  8383  0D99  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  8384  0D9A  0022               	movlb	2	; select bank2
  8385  0D9B  00DB               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  8386  0D9C  0020               	movlb	0	; select bank0
  8387  0D9D  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  8388  0D9E  0022               	movlb	2	; select bank2
  8389  0D9F  00DA               	movwf	_EUSART_ErrorHandler^(0+256)
  8390  0DA0                     l94:
  8391  0DA0  0008               	return
  8392  0DA1                     __end_of_EUSART_SetErrorHandler:
  8393                           
  8394                           	psect	text28
  8395  0D5D                     __ptext28:	
  8396 ;; *************** function _CMP2_Initialize *****************
  8397 ;; Defined at:
  8398 ;;		line 58 in file "mcc_generated_files/cmp2.c"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;		None
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;		None
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  1    wreg      void 
  8405 ;; Registers used:
  8406 ;;		wreg
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8412 ;;      Params:         0       0       0       0       0       0       0       0
  8413 ;;      Locals:         0       0       0       0       0       0       0       0
  8414 ;;      Temps:          0       0       0       0       0       0       0       0
  8415 ;;      Totals:         0       0       0       0       0       0       0       0
  8416 ;;Total ram usage:        0 bytes
  8417 ;; Hardware stack levels used:    1
  8418 ;; Hardware stack levels required when called:    3
  8419 ;; This function calls:
  8420 ;;		Nothing
  8421 ;; This function is called by:
  8422 ;;		_SYSTEM_Initialize
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426                           
  8427                           ;psect for function _CMP2_Initialize
  8428  0D5D                     _CMP2_Initialize:
  8429  0D5D                     l2059:	
  8430                           ;incstack = 0
  8431                           ; Regs used in _CMP2_Initialize: [wreg]
  8432                           
  8433                           
  8434                           ;mcc_generated_files/cmp2.c: 62:     CM2CON0 = 0x84;
  8435  0D5D  3084               	movlw	132
  8436  0D5E  0022               	movlb	2	; select bank2
  8437  0D5F  0093               	movwf	19	;volatile
  8438                           
  8439                           ;mcc_generated_files/cmp2.c: 65:     CM2CON1 = 0x01;
  8440  0D60  3001               	movlw	1
  8441  0D61  0094               	movwf	20	;volatile
  8442  0D62                     l103:
  8443  0D62  0008               	return
  8444  0D63                     __end_of_CMP2_Initialize:
  8445                           
  8446                           	psect	text29
  8447  0DE4                     __ptext29:	
  8448 ;; *************** function _CLC2_Initialize *****************
  8449 ;; Defined at:
  8450 ;;		line 58 in file "mcc_generated_files/clc2.c"
  8451 ;; Parameters:    Size  Location     Type
  8452 ;;		None
  8453 ;; Auto vars:     Size  Location     Type
  8454 ;;		None
  8455 ;; Return value:  Size  Location     Type
  8456 ;;                  1    wreg      void 
  8457 ;; Registers used:
  8458 ;;		wreg, status,2
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8464 ;;      Params:         0       0       0       0       0       0       0       0
  8465 ;;      Locals:         0       0       0       0       0       0       0       0
  8466 ;;      Temps:          0       0       0       0       0       0       0       0
  8467 ;;      Totals:         0       0       0       0       0       0       0       0
  8468 ;;Total ram usage:        0 bytes
  8469 ;; Hardware stack levels used:    1
  8470 ;; Hardware stack levels required when called:    3
  8471 ;; This function calls:
  8472 ;;		Nothing
  8473 ;; This function is called by:
  8474 ;;		_SYSTEM_Initialize
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           
  8479                           ;psect for function _CLC2_Initialize
  8480  0DE4                     _CLC2_Initialize:
  8481  0DE4                     l2107:	
  8482                           ;incstack = 0
  8483                           ; Regs used in _CLC2_Initialize: [wreg+status,2]
  8484                           
  8485                           
  8486                           ;mcc_generated_files/clc2.c: 63:     CLC2POL = 0x02;
  8487  0DE4  3002               	movlw	2
  8488  0DE5  003E               	movlb	30	; select bank30
  8489  0DE6  009B               	movwf	27	;volatile
  8490                           
  8491                           ;mcc_generated_files/clc2.c: 65:     CLC2SEL0 = 0x1A;
  8492  0DE7  301A               	movlw	26
  8493  0DE8  009C               	movwf	28	;volatile
  8494  0DE9                     l2109:
  8495                           
  8496                           ;mcc_generated_files/clc2.c: 67:     CLC2SEL1 = 0x00;
  8497  0DE9  019D               	clrf	29	;volatile
  8498  0DEA                     l2111:
  8499                           
  8500                           ;mcc_generated_files/clc2.c: 69:     CLC2SEL2 = 0x00;
  8501  0DEA  019E               	clrf	30	;volatile
  8502  0DEB                     l2113:
  8503                           
  8504                           ;mcc_generated_files/clc2.c: 71:     CLC2SEL3 = 0x00;
  8505  0DEB  019F               	clrf	31	;volatile
  8506  0DEC                     l2115:
  8507                           
  8508                           ;mcc_generated_files/clc2.c: 73:     CLC2GLS0 = 0x02;
  8509  0DEC  3002               	movlw	2
  8510  0DED  00A0               	movwf	32	;volatile
  8511                           
  8512                           ;mcc_generated_files/clc2.c: 75:     CLC2GLS1 = 0x00;
  8513  0DEE  01A1               	clrf	33	;volatile
  8514                           
  8515                           ;mcc_generated_files/clc2.c: 77:     CLC2GLS2 = 0x00;
  8516  0DEF  01A2               	clrf	34	;volatile
  8517                           
  8518                           ;mcc_generated_files/clc2.c: 79:     CLC2GLS3 = 0x00;
  8519  0DF0  01A3               	clrf	35	;volatile
  8520  0DF1                     l2117:
  8521                           
  8522                           ;mcc_generated_files/clc2.c: 81:     CLC2CON = 0x80;
  8523  0DF1  3080               	movlw	128
  8524  0DF2  009A               	movwf	26	;volatile
  8525  0DF3                     l315:
  8526  0DF3  0008               	return
  8527  0DF4                     __end_of_CLC2_Initialize:
  8528                           
  8529                           	psect	text30
  8530  0DF4                     __ptext30:	
  8531 ;; *************** function _CCP1_Initialize *****************
  8532 ;; Defined at:
  8533 ;;		line 65 in file "mcc_generated_files/ccp1.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;		None
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;		None
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  1    wreg      void 
  8540 ;; Registers used:
  8541 ;;		wreg, status,2, status,0, pclath, cstack
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8547 ;;      Params:         0       0       0       0       0       0       0       0
  8548 ;;      Locals:         0       0       0       0       0       0       0       0
  8549 ;;      Temps:          0       0       0       0       0       0       0       0
  8550 ;;      Totals:         0       0       0       0       0       0       0       0
  8551 ;;Total ram usage:        0 bytes
  8552 ;; Hardware stack levels used:    1
  8553 ;; Hardware stack levels required when called:    4
  8554 ;; This function calls:
  8555 ;;		_CCP1_SetCallBack
  8556 ;; This function is called by:
  8557 ;;		_SYSTEM_Initialize
  8558 ;; This function uses a non-reentrant model
  8559 ;;
  8560                           
  8561                           
  8562                           ;psect for function _CCP1_Initialize
  8563  0DF4                     _CCP1_Initialize:
  8564  0DF4                     l2095:	
  8565                           ;incstack = 0
  8566                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8567                           
  8568                           
  8569                           ;mcc_generated_files/ccp1.c: 70:  CCP1CON = 0x05;
  8570  0DF4  3005               	movlw	5
  8571  0DF5  0025               	movlb	5	; select bank5
  8572  0DF6  0093               	movwf	19	;volatile
  8573  0DF7                     l2097:
  8574                           
  8575                           ;mcc_generated_files/ccp1.c: 73:  CCPR1L = 0x00;
  8576  0DF7  0191               	clrf	17	;volatile
  8577  0DF8                     l2099:
  8578                           
  8579                           ;mcc_generated_files/ccp1.c: 76:  CCPR1H = 0x00;
  8580  0DF8  0192               	clrf	18	;volatile
  8581  0DF9                     l2101:
  8582                           
  8583                           ;mcc_generated_files/ccp1.c: 79:     CCP1_SetCallBack(CCP1_ISR_CallBack);
  8584  0DF9  30AD               	movlw	low _CCP1_ISR_CallBack
  8585  0DFA  0020               	movlb	0	; select bank0
  8586  0DFB  00A0               	movwf	CCP1_SetCallBack@customCallBack
  8587  0DFC  3007               	movlw	high _CCP1_ISR_CallBack
  8588  0DFD  00A1               	movwf	CCP1_SetCallBack@customCallBack+1
  8589  0DFE  318D  258F  318D   	fcall	_CCP1_SetCallBack
  8590  0E01                     l2103:
  8591                           
  8592                           ;mcc_generated_files/ccp1.c: 83:     PIR1bits.CCP1IF = 0;
  8593  0E01  0020               	movlb	0	; select bank0
  8594  0E02  1111               	bcf	17,2	;volatile
  8595  0E03                     l2105:
  8596                           
  8597                           ;mcc_generated_files/ccp1.c: 86:     PIE1bits.CCP1IE = 1;
  8598  0E03  0021               	movlb	1	; select bank1
  8599  0E04  1511               	bsf	17,2	;volatile
  8600  0E05                     l284:
  8601  0E05  0008               	return
  8602  0E06                     __end_of_CCP1_Initialize:
  8603                           
  8604                           	psect	text31
  8605  0D8F                     __ptext31:	
  8606 ;; *************** function _CCP1_SetCallBack *****************
  8607 ;; Defined at:
  8608 ;;		line 104 in file "mcc_generated_files/ccp1.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  8611 ;;		 -> CCP1_ISR_CallBack(1), 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;		None
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  1    wreg      void 
  8616 ;; Registers used:
  8617 ;;		wreg
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8623 ;;      Params:         0       2       0       0       0       0       0       0
  8624 ;;      Locals:         0       0       0       0       0       0       0       0
  8625 ;;      Temps:          0       0       0       0       0       0       0       0
  8626 ;;      Totals:         0       2       0       0       0       0       0       0
  8627 ;;Total ram usage:        2 bytes
  8628 ;; Hardware stack levels used:    1
  8629 ;; Hardware stack levels required when called:    3
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_CCP1_Initialize
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637                           
  8638                           ;psect for function _CCP1_SetCallBack
  8639  0D8F                     _CCP1_SetCallBack:
  8640  0D8F                     l1983:	
  8641                           ;incstack = 0
  8642                           ; Regs used in _CCP1_SetCallBack: [wreg]
  8643                           
  8644                           
  8645                           ;mcc_generated_files/ccp1.c: 105:     CCP1_CallBack = customCallBack;
  8646  0D8F  0020               	movlb	0	; select bank0
  8647  0D90  0821               	movf	CCP1_SetCallBack@customCallBack+1,w
  8648  0D91  0022               	movlb	2	; select bank2
  8649  0D92  00D7               	movwf	(_CCP1_CallBack+1)^(0+256)
  8650  0D93  0020               	movlb	0	; select bank0
  8651  0D94  0820               	movf	CCP1_SetCallBack@customCallBack,w
  8652  0D95  0022               	movlb	2	; select bank2
  8653  0D96  00D6               	movwf	_CCP1_CallBack^(0+256)
  8654  0D97                     l290:
  8655  0D97  0008               	return
  8656  0D98                     __end_of_CCP1_SetCallBack:
  8657                           
  8658                           	psect	text32
  8659  0DB3                     __ptext32:	
  8660 ;; *************** function _ADC_Initialize *****************
  8661 ;; Defined at:
  8662 ;;		line 67 in file "mcc_generated_files/adc.c"
  8663 ;; Parameters:    Size  Location     Type
  8664 ;;		None
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;		None
  8667 ;; Return value:  Size  Location     Type
  8668 ;;                  1    wreg      void 
  8669 ;; Registers used:
  8670 ;;		wreg, status,2
  8671 ;; Tracked objects:
  8672 ;;		On entry : 0/0
  8673 ;;		On exit  : 0/0
  8674 ;;		Unchanged: 0/0
  8675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8676 ;;      Params:         0       0       0       0       0       0       0       0
  8677 ;;      Locals:         0       0       0       0       0       0       0       0
  8678 ;;      Temps:          0       0       0       0       0       0       0       0
  8679 ;;      Totals:         0       0       0       0       0       0       0       0
  8680 ;;Total ram usage:        0 bytes
  8681 ;; Hardware stack levels used:    1
  8682 ;; Hardware stack levels required when called:    3
  8683 ;; This function calls:
  8684 ;;		Nothing
  8685 ;; This function is called by:
  8686 ;;		_SYSTEM_Initialize
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           
  8691                           ;psect for function _ADC_Initialize
  8692  0DB3                     _ADC_Initialize:
  8693  0DB3                     l2089:	
  8694                           ;incstack = 0
  8695                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  8696                           
  8697                           
  8698                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD0;
  8699  0DB3  30D0               	movlw	208
  8700  0DB4  0021               	movlb	1	; select bank1
  8701  0DB5  009E               	movwf	30	;volatile
  8702                           
  8703                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x90;
  8704  0DB6  3090               	movlw	144
  8705  0DB7  009F               	movwf	31	;volatile
  8706  0DB8                     l2091:
  8707                           
  8708                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  8709  0DB8  019B               	clrf	27	;volatile
  8710  0DB9                     l2093:
  8711                           
  8712                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  8713  0DB9  019C               	clrf	28	;volatile
  8714                           
  8715                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  8716  0DBA  3001               	movlw	1
  8717  0DBB  009D               	movwf	29	;volatile
  8718  0DBC                     l369:
  8719  0DBC  0008               	return
  8720  0DBD                     __end_of_ADC_Initialize:
  8721                           
  8722                           	psect	text33
  8723  0DD4                     __ptext33:	
  8724 ;; *************** function _ADC_SelectChannel *****************
  8725 ;; Defined at:
  8726 ;;		line 88 in file "mcc_generated_files/adc.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  channel         1    wreg     enum E4122
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;  channel         1    1[BANK0 ] enum E4122
  8731 ;; Return value:  Size  Location     Type
  8732 ;;                  1    wreg      void 
  8733 ;; Registers used:
  8734 ;;		wreg, status,2, status,0
  8735 ;; Tracked objects:
  8736 ;;		On entry : 0/0
  8737 ;;		On exit  : 0/0
  8738 ;;		Unchanged: 0/0
  8739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8740 ;;      Params:         0       0       0       0       0       0       0       0
  8741 ;;      Locals:         0       1       0       0       0       0       0       0
  8742 ;;      Temps:          0       1       0       0       0       0       0       0
  8743 ;;      Totals:         0       2       0       0       0       0       0       0
  8744 ;;Total ram usage:        2 bytes
  8745 ;; Hardware stack levels used:    1
  8746 ;; Hardware stack levels required when called:    3
  8747 ;; This function calls:
  8748 ;;		Nothing
  8749 ;; This function is called by:
  8750 ;;		_main
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           
  8755                           ;psect for function _ADC_SelectChannel
  8756  0DD4                     _ADC_SelectChannel:
  8757                           
  8758                           ;incstack = 0
  8759                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  8760                           ;ADC_SelectChannel@channel stored from wreg
  8761  0DD4  0020               	movlb	0	; select bank0
  8762  0DD5  00A1               	movwf	ADC_SelectChannel@channel
  8763  0DD6                     l2193:
  8764                           
  8765                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
  8766  0DD6  0821               	movf	ADC_SelectChannel@channel,w
  8767  0DD7  00A0               	movwf	??_ADC_SelectChannel
  8768  0DD8  0DA0               	rlf	??_ADC_SelectChannel,f
  8769  0DD9  0DA0               	rlf	??_ADC_SelectChannel,f
  8770  0DDA  0021               	movlb	1	; select bank1
  8771  0DDB  081D               	movf	29,w	;volatile
  8772  0DDC  0020               	movlb	0	; select bank0
  8773  0DDD  0620               	xorwf	??_ADC_SelectChannel,w
  8774  0DDE  3983               	andlw	-125
  8775  0DDF  0620               	xorwf	??_ADC_SelectChannel,w
  8776  0DE0  0021               	movlb	1	; select bank1
  8777  0DE1  009D               	movwf	29	;volatile
  8778  0DE2                     l2195:
  8779                           
  8780                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
  8781  0DE2  141D               	bsf	29,0	;volatile
  8782  0DE3                     l372:
  8783  0DE3  0008               	return
  8784  0DE4                     __end_of_ADC_SelectChannel:
  8785                           
  8786                           	psect	text34
  8787  0D86                     __ptext34:	
  8788 ;; *************** function _ADC_GetConversionResult *****************
  8789 ;; Defined at:
  8790 ;;		line 109 in file "mcc_generated_files/adc.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;		None
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;		None
  8795 ;; Return value:  Size  Location     Type
  8796 ;;                  2    0[BANK0 ] unsigned short 
  8797 ;; Registers used:
  8798 ;;		wreg
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8804 ;;      Params:         0       2       0       0       0       0       0       0
  8805 ;;      Locals:         0       0       0       0       0       0       0       0
  8806 ;;      Temps:          0       0       0       0       0       0       0       0
  8807 ;;      Totals:         0       2       0       0       0       0       0       0
  8808 ;;Total ram usage:        2 bytes
  8809 ;; Hardware stack levels used:    1
  8810 ;; Hardware stack levels required when called:    3
  8811 ;; This function calls:
  8812 ;;		Nothing
  8813 ;; This function is called by:
  8814 ;;		_main
  8815 ;; This function uses a non-reentrant model
  8816 ;;
  8817                           
  8818                           
  8819                           ;psect for function _ADC_GetConversionResult
  8820  0D86                     _ADC_GetConversionResult:
  8821  0D86                     l2197:	
  8822                           ;incstack = 0
  8823                           ; Regs used in _ADC_GetConversionResult: [wreg]
  8824                           
  8825                           
  8826                           ;mcc_generated_files/adc.c: 112:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8827  0D86  0021               	movlb	1	; select bank1
  8828  0D87  081C               	movf	28,w	;volatile
  8829  0D88  0020               	movlb	0	; select bank0
  8830  0D89  00A1               	movwf	?_ADC_GetConversionResult+1
  8831  0D8A  0021               	movlb	1	; select bank1
  8832  0D8B  081B               	movf	27,w	;volatile
  8833  0D8C  0020               	movlb	0	; select bank0
  8834  0D8D  00A0               	movwf	?_ADC_GetConversionResult
  8835  0D8E                     l381:
  8836  0D8E  0008               	return
  8837  0D8F                     __end_of_ADC_GetConversionResult:
  8838                           
  8839                           	psect	intentry
  8840  0004                     __pintentry:	
  8841 ;; *************** function _INTERRUPT_InterruptManager *****************
  8842 ;; Defined at:
  8843 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;		None
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;		None
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  1    wreg      void 
  8850 ;; Registers used:
  8851 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8857 ;;      Params:         0       0       0       0       0       0       0       0
  8858 ;;      Locals:         0       0       0       0       0       0       0       0
  8859 ;;      Temps:          0       0       0       0       0       0       0       0
  8860 ;;      Totals:         0       0       0       0       0       0       0       0
  8861 ;;Total ram usage:        0 bytes
  8862 ;; Hardware stack levels used:    1
  8863 ;; Hardware stack levels required when called:    2
  8864 ;; This function calls:
  8865 ;;		_CCP1_CaptureISR
  8866 ;; This function is called by:
  8867 ;;		Interrupt level 1
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871  0004                     _INTERRUPT_InterruptManager:
  8872                           
  8873                           ;incstack = 0
  8874  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8875                           
  8876                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8877  0005  3180               	pagesel	$
  8878  0006                     i1l2245:
  8879                           
  8880                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  8881  0006  1F0B               	btfss	11,6	;volatile
  8882  0007  2809               	goto	u145_21
  8883  0008  280A               	goto	u145_20
  8884  0009                     u145_21:
  8885  0009  2817               	goto	i1l123
  8886  000A                     u145_20:
  8887  000A                     i1l2247:
  8888                           
  8889                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.CCP1IE == 1 && PIR1bits.CCP1IF == 1)
  8890  000A  0021               	movlb	1	; select bank1
  8891  000B  1D11               	btfss	17,2	;volatile
  8892  000C  280E               	goto	u146_21
  8893  000D  280F               	goto	u146_20
  8894  000E                     u146_21:
  8895  000E  2817               	goto	i1l123
  8896  000F                     u146_20:
  8897  000F                     i1l2249:
  8898  000F  0020               	movlb	0	; select bank0
  8899  0010  1D11               	btfss	17,2	;volatile
  8900  0011  2813               	goto	u147_21
  8901  0012  2814               	goto	u147_20
  8902  0013                     u147_21:
  8903  0013  2817               	goto	i1l123
  8904  0014                     u147_20:
  8905  0014                     i1l2251:
  8906                           
  8907                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             CCP1_CaptureISR();
  8908  0014  318E  2618  3180   	fcall	_CCP1_CaptureISR
  8909  0017                     i1l123:	
  8910                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  8911                           
  8912  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8913  0018  0009               	retfie
  8914  0019                     __end_of_INTERRUPT_InterruptManager:
  8915                           
  8916                           	psect	text36
  8917  0E18                     __ptext36:	
  8918 ;; *************** function _CCP1_CaptureISR *****************
  8919 ;; Defined at:
  8920 ;;		line 89 in file "mcc_generated_files/ccp1.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;		None
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;  module          2    4[COMMON] struct CCPR1Reg_tag
  8925 ;; Return value:  Size  Location     Type
  8926 ;;                  1    wreg      void 
  8927 ;; Registers used:
  8928 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/0
  8931 ;;		On exit  : 0/0
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8934 ;;      Params:         0       0       0       0       0       0       0       0
  8935 ;;      Locals:         2       0       0       0       0       0       0       0
  8936 ;;      Temps:          1       0       0       0       0       0       0       0
  8937 ;;      Totals:         3       0       0       0       0       0       0       0
  8938 ;;Total ram usage:        3 bytes
  8939 ;; Hardware stack levels used:    1
  8940 ;; Hardware stack levels required when called:    1
  8941 ;; This function calls:
  8942 ;;		Absolute function
  8943 ;;		_CCP1_ISR_CallBack
  8944 ;; This function is called by:
  8945 ;;		_INTERRUPT_InterruptManager
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           
  8950                           ;psect for function _CCP1_CaptureISR
  8951  0E18                     _CCP1_CaptureISR:
  8952  0E18                     i1l2171:	
  8953                           ;incstack = 0
  8954                           ; Regs used in _CCP1_CaptureISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8955                           
  8956                           
  8957                           ;mcc_generated_files/ccp1.c: 91:     CCP1_PERIOD_REG_T module;;mcc_generated_files/ccp1.
      +                          c: 94:     PIR1bits.CCP1IF = 0;
  8958  0E18  0020               	movlb	0	; select bank0
  8959  0E19  1111               	bcf	17,2	;volatile
  8960  0E1A                     i1l2173:
  8961                           
  8962                           ;mcc_generated_files/ccp1.c: 97:     module.ccpr1l = CCPR1L;
  8963  0E1A  0025               	movlb	5	; select bank5
  8964  0E1B  0811               	movf	17,w	;volatile
  8965  0E1C  00F3               	movwf	??_CCP1_CaptureISR
  8966  0E1D  0873               	movf	??_CCP1_CaptureISR,w
  8967  0E1E  00F4               	movwf	CCP1_CaptureISR@module
  8968                           
  8969                           ;mcc_generated_files/ccp1.c: 98:     module.ccpr1h = CCPR1H;
  8970  0E1F  0812               	movf	18,w	;volatile
  8971  0E20  00F3               	movwf	??_CCP1_CaptureISR
  8972  0E21  0873               	movf	??_CCP1_CaptureISR,w
  8973  0E22  00F5               	movwf	CCP1_CaptureISR@module+1
  8974  0E23                     i1l2175:
  8975                           
  8976                           ;mcc_generated_files/ccp1.c: 101:     CCP1_CallBack(module.ccpr1_16Bit);
  8977  0E23  0875               	movf	CCP1_CaptureISR@module+1,w
  8978  0E24  00F1               	movwf	CCP1_ISR_CallBack@capturedValue+1
  8979  0E25  0874               	movf	CCP1_CaptureISR@module,w
  8980  0E26  00F0               	movwf	CCP1_ISR_CallBack@capturedValue
  8981  0E27  0022               	movlb	2	; select bank2
  8982  0E28  0857               	movf	(_CCP1_CallBack+1)^(0+256),w
  8983  0E29  008A               	movwf	10
  8984  0E2A  0856               	movf	_CCP1_CallBack^(0+256),w
  8985  0E2B  000A               	callw
  8986  0E2C  318E               	pagesel	$
  8987  0E2D                     i1l287:
  8988  0E2D  0008               	return
  8989  0E2E                     __end_of_CCP1_CaptureISR:
  8990                           
  8991                           	psect	text37
  8992  07AD                     __ptext37:	
  8993 ;; *************** function _CCP1_ISR_CallBack *****************
  8994 ;; Defined at:
  8995 ;;		line 6 in file "inductance.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;  capturedValu    2    0[COMMON] unsigned short 
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;		None
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  1    wreg      void 
  9002 ;; Registers used:
  9003 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9009 ;;      Params:         2       0       0       0       0       0       0       0
  9010 ;;      Locals:         0       0       0       0       0       0       0       0
  9011 ;;      Temps:          1       0       0       0       0       0       0       0
  9012 ;;      Totals:         3       0       0       0       0       0       0       0
  9013 ;;Total ram usage:        3 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; This function calls:
  9016 ;;		Nothing
  9017 ;; This function is called by:
  9018 ;;		_CCP1_Initialize
  9019 ;;		_CCP1_CaptureISR
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           
  9024                           ;psect for function _CCP1_ISR_CallBack
  9025  07AD                     _CCP1_ISR_CallBack:
  9026  07AD                     i1l2139:	
  9027                           ;incstack = 0
  9028                           ; Regs used in _CCP1_ISR_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
  9029                           
  9030                           
  9031                           ;inductance.c: 7:     if (LCMeas.cyclePrev < capturedValue) {
  9032  07AD  0871               	movf	CCP1_ISR_CallBack@capturedValue+1,w
  9033  07AE  0021               	movlb	1	; select bank1
  9034  07AF  0251               	subwf	((_LCMeas+1)^(0+128)+2),w
  9035  07B0  1D03               	skipz
  9036  07B1  2FB4               	goto	u130_25
  9037  07B2  0870               	movf	CCP1_ISR_CallBack@capturedValue,w
  9038  07B3  0250               	subwf	(_LCMeas^(0+128)+2),w
  9039  07B4                     u130_25:
  9040  07B4  1803               	skipnc
  9041  07B5  2FB7               	goto	u130_21
  9042  07B6  2FB8               	goto	u130_20
  9043  07B7                     u130_21:
  9044  07B7  2FC3               	goto	i1l2143
  9045  07B8                     u130_20:
  9046  07B8                     i1l2141:
  9047                           
  9048                           ;inductance.c: 8:         LCMeas.cycle = capturedValue - LCMeas.cyclePrev;
  9049  07B8  3002               	movlw	2
  9050  07B9  3ECE               	addlw	(low (_LCMeas| 0))& (0+255)
  9051  07BA  0086               	movwf	6
  9052  07BB  0187               	clrf	7
  9053  07BC  3F40               	moviw [0]fsr1
  9054  07BD  0270               	subwf	CCP1_ISR_CallBack@capturedValue,w
  9055  07BE  00CE               	movwf	_LCMeas^(0+128)
  9056  07BF  3F41               	moviw [1]fsr1
  9057  07C0  3B71               	subwfb	CCP1_ISR_CallBack@capturedValue+1,w
  9058  07C1  00CF               	movwf	(_LCMeas^(0+128)+1)
  9059                           
  9060                           ;inductance.c: 9:     } else {
  9061  07C2  2FCE               	goto	i1l457
  9062  07C3                     i1l2143:
  9063                           
  9064                           ;inductance.c: 10:         LCMeas.cycle = LCMeas.cyclePrev - capturedValue;
  9065  07C3  0870               	movf	CCP1_ISR_CallBack@capturedValue,w
  9066  07C4  0250               	subwf	(_LCMeas^(0+128)+2),w
  9067  07C5  00CE               	movwf	_LCMeas^(0+128)
  9068  07C6  0871               	movf	CCP1_ISR_CallBack@capturedValue+1,w
  9069  07C7  3B51               	subwfb	((_LCMeas+1)^(0+128)+2),w
  9070  07C8  00CF               	movwf	(_LCMeas+1)^(0+128)
  9071  07C9                     i1l2145:
  9072                           
  9073                           ;inductance.c: 11:         LCMeas.cycle = -LCMeas.cycle;
  9074  07C9  09CE               	comf	_LCMeas^(0+128),f
  9075  07CA  09CF               	comf	(_LCMeas+1)^(0+128),f
  9076  07CB  0ACE               	incf	_LCMeas^(0+128),f
  9077  07CC  1903               	skipnz
  9078  07CD  0ACF               	incf	(_LCMeas+1)^(0+128),f
  9079  07CE                     i1l457:	
  9080                           ;inductance.c: 12:     }
  9081                           
  9082                           
  9083                           ;inductance.c: 13:     LCMeas.cyclePrev = capturedValue;
  9084  07CE  0871               	movf	CCP1_ISR_CallBack@capturedValue+1,w
  9085  07CF  00D1               	movwf	((_LCMeas+1)^(0+128)+2)
  9086  07D0  0870               	movf	CCP1_ISR_CallBack@capturedValue,w
  9087  07D1  00D0               	movwf	(_LCMeas^(0+128)+2)
  9088                           
  9089                           ;inductance.c: 14:     LCMeas.accumulator += LCMeas.cycle;
  9090  07D2  084E               	movf	_LCMeas^(0+128),w
  9091  07D3  07D7               	addwf	(_LCMeas^(0+128)+9),f
  9092  07D4  084F               	movf	(_LCMeas+1)^(0+128),w
  9093  07D5  3DD8               	addwfc	((_LCMeas+1)^(0+128)+9),f
  9094  07D6  3000               	movlw	0
  9095  07D7  3DD9               	addwfc	((_LCMeas+2)^(0+128)+9),f
  9096  07D8  3DDA               	addwfc	((_LCMeas+3)^(0+128)+9),f
  9097  07D9                     i1l2147:
  9098                           
  9099                           ;inductance.c: 15:     LCMeas.count++;
  9100  07D9  3001               	movlw	1
  9101  07DA  00F2               	movwf	??_CCP1_ISR_CallBack
  9102  07DB  0872               	movf	??_CCP1_ISR_CallBack,w
  9103  07DC  07D2               	addwf	(_LCMeas^(0+128)+4),f
  9104  07DD                     i1l2149:
  9105                           
  9106                           ;inductance.c: 16:     LCMeas.sample = 1;
  9107  07DD  145B               	bsf	(_LCMeas^(0+128)+13),0
  9108  07DE                     i1l2151:
  9109                           
  9110                           ;inductance.c: 17:     if (LCMeas.count == 0) {
  9111  07DE  0852               	movf	(_LCMeas^(0+128)+4),w
  9112  07DF  1D03               	btfss	3,2
  9113  07E0  2FE2               	goto	u131_21
  9114  07E1  2FE3               	goto	u131_20
  9115  07E2                     u131_21:
  9116  07E2  2FF8               	goto	i1l459
  9117  07E3                     u131_20:
  9118  07E3                     i1l2153:
  9119                           
  9120                           ;inductance.c: 18:         LCMeas.frequency = LCMeas.accumulator;
  9121  07E3  3009               	movlw	9
  9122  07E4  3ECE               	addlw	(low (_LCMeas| 0))& (0+255)
  9123  07E5  0086               	movwf	6
  9124  07E6  0187               	clrf	7
  9125  07E7  3F40               	moviw [0]fsr1
  9126  07E8  00D3               	movwf	(_LCMeas^(0+128)+5)
  9127  07E9  3F41               	moviw [1]fsr1
  9128  07EA  00D4               	movwf	((_LCMeas+1)^(0+128)+5)
  9129  07EB  3F42               	moviw [2]fsr1
  9130  07EC  00D5               	movwf	((_LCMeas+2)^(0+128)+5)
  9131  07ED  3F43               	moviw [3]fsr1
  9132  07EE  00D6               	movwf	((_LCMeas+3)^(0+128)+5)
  9133  07EF                     i1l2155:
  9134                           
  9135                           ;inductance.c: 19:         LCMeas.accumulator = 0;
  9136  07EF  3000               	movlw	0
  9137  07F0  00DA               	movwf	((_LCMeas+3)^(0+128)+9)
  9138  07F1  3000               	movlw	0
  9139  07F2  00D9               	movwf	((_LCMeas+2)^(0+128)+9)
  9140  07F3  3000               	movlw	0
  9141  07F4  00D8               	movwf	((_LCMeas+1)^(0+128)+9)
  9142  07F5  3000               	movlw	0
  9143  07F6  00D7               	movwf	(_LCMeas^(0+128)+9)
  9144  07F7                     i1l2157:
  9145                           
  9146                           ;inductance.c: 20:         LCMeas.sample = 1;
  9147  07F7  145B               	bsf	(_LCMeas^(0+128)+13),0
  9148  07F8                     i1l459:
  9149  07F8  0008               	return
  9150  07F9                     __end_of_CCP1_ISR_CallBack:
  9151  007E                     btemp	set	126	;btemp
  9152  007E                     int$flags	set	126
  9153  007E                     wtemp0	set	126
  9154                           
  9155                           	psect	config
  9156                           
  9157                           ;Config register CONFIG1 @ 0x8007
  9158                           ;	Oscillator Selection Bits
  9159                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9160                           ;	Watchdog Timer Enable
  9161                           ;	WDTE = OFF, WDT disabled
  9162                           ;	Power-up Timer Enable
  9163                           ;	PWRTE = OFF, PWRT disabled
  9164                           ;	MCLR Pin Function Select
  9165                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  9166                           ;	Flash Program Memory Code Protection
  9167                           ;	CP = OFF, Program memory code protection is disabled
  9168                           ;	Brown-out Reset Enable
  9169                           ;	BOREN = ON, Brown-out Reset enabled
  9170                           ;	Clock Out Enable
  9171                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9172                           ;	Internal/External Switchover Mode
  9173                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  9174                           ;	Fail-Safe Clock Monitor Enable
  9175                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9176  8007                     	org	32775
  9177  8007  3FA4               	dw	16292
  9178                           
  9179                           ;Config register CONFIG2 @ 0x8008
  9180                           ;	Flash Memory Self-Write Protection
  9181                           ;	WRT = OFF, Write protection off
  9182                           ;	Peripheral Pin Select one-way control
  9183                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  9184                           ;	Zero-cross detect disable
  9185                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR
  9186                           ;	Phase Lock Loop enable
  9187                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  9188                           ;	Stack Overflow/Underflow Reset Enable
  9189                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9190                           ;	Brown-out Reset Voltage Selection
  9191                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9192                           ;	Low-Power Brown Out Reset
  9193                           ;	LPBOR = OFF, Low-Power BOR is disabled
  9194                           ;	Low-Voltage Programming Enable
  9195                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  9196  8008                     	org	32776
  9197  8008  1EFF               	dw	7935

Data Sizes:
    Strings     110
    Constant    0
    Data        13
    BSS         83
    Persistent  50
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     80      80
    BANK1            80     46      78
    BANK2            80      0      77
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 69
		 -> STR_3(CODE[69]), STR_1(CODE[26]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 69
		 -> STR_3(CODE[69]), STR_1(CODE[26]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), stoa@nuls(BANK0[7]), ?_printf(BANK1[2]), STR_2(CODE[12]), 
		 -> peakMax(BANK1[4]), freqMax(BANK1[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), stoa@nuls(BANK0[7]), ?_printf(BANK1[2]), STR_2(CODE[12]), 
		 -> peakMax(BANK1[4]), freqMax(BANK1[4]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1257_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 69
		 -> STR_3(CODE[69]), STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 69
		 -> STR_3(CODE[69]), STR_1(CODE[26]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 12
		 -> ?_printf(BANK1[2]), STR_2(CODE[12]), peakMax(BANK1[4]), freqMax(BANK1[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 12
		 -> ?_printf(BANK1[2]), STR_2(CODE[12]), peakMax(BANK1[4]), freqMax(BANK1[4]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 12
		 -> stoa@nuls(BANK0[7]), ?_printf(BANK1[2]), STR_2(CODE[12]), peakMax(BANK1[4]), 
		 -> freqMax(BANK1[4]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 69
		 -> STR_3(CODE[69]), STR_1(CODE[26]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_ISR_CallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP1_ISR_CallBack(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _CCP1_CaptureISR->_CCP1_ISR_CallBack

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _stoa->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    ___lldiv->___lmul
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP1_Initialize->_CCP1_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   11221
                                             34 BANK1     12    12      0
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                       _EUSART_Write
                  _SYSTEM_Initialize
                            ___lldiv
                             ___lmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              30     4     26    9665
                                             79 BANK0      1     1      0
                                              5 BANK1     29     3     26
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    9455
                                             76 BANK0      3     0      3
                                              0 BANK1      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           47    45      2    9122
                                             51 BANK0     25    23      2
                              _fputc
                               _stoa
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                24    16      8    4631
                                             27 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3481
                                             18 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1583
                                             10 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             18     2     16     311
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             26    10     16     314
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _stoa                                                23    21      2    2037
                                             10 BANK0     23    21      2
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     182
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3    1268
                                              2 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     396
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     466
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                     _ADC_Initialize
                    _CCP1_Initialize
                    _CLC2_Initialize
                    _CMP2_Initialize
                  _EUSART_Initialize
                    _OPA2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OPA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0      98
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP1_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0     188
                    _CCP1_CaptureISR
 ---------------------------------------------------------------------------------
 (11) _CCP1_CaptureISR                                     3     3      0     188
                                              3 COMMON     3     3      0
                   Absolute function *
                  _CCP1_ISR_CallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP1_ISR_CallBack                                   3     1      2     141
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_SelectChannel
   _EUSART_Write
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
       _CCP1_SetCallBack
     _CLC2_Initialize
     _CMP2_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OPA2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write
         _stoa
           _fputc
             _putch
               _EUSART_Write
           _strlen
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _CCP1_CaptureISR
     Absolute function(Fake) *
     _CCP1_ISR_CallBack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      F6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     2E      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4D      10       96.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      F6      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Sep 04 14:53:41 2020

                                           l43 0EA3                                             l70 0DC6  
                                           l91 0DB2                                             l67 0DBF  
                                           l76 0D75                                             l94 0DA0  
                                           l88 0DA9                        __end_of_CCP1_Initialize 0E06  
                                          l103 0D62                                            l214 0EFB  
                                          l128 0D58                                            l315 0DF3  
                                          l331 0D85                                            l163 0E7F  
                                          l236 0E17                                            l166 0D7D  
                                          l169 0D5C                                            l433 008D  
                                          l290 0D97                                            l372 0DE3  
                                          l284 0E05                                            l444 02E4  
                                          l381 0D8E                                            l541 0F2F  
                                          l447 02E6                                            l439 0122  
                                          l369 0DBC                                            l563 07AC  
                                          l760 0673                                            l770 06E4  
                                          l767 0683                                            l777 06F4  
                                          l990 0E43                                            _PR2 001B  
                                          u900 0E57                                            u901 0E56  
                                          u910 0608                                            u840 0DC3  
                                          u920 0617                                            u841 0DC2  
                                          u921 0616                                            u850 0F6C  
                                          u930 062A                                            u851 0F6B  
                                          u931 0629                                            u860 0F71  
                                          u940 0654                                            u861 0F70  
                                          u941 0653                                            u870 0F80  
                                          u950 0673                                            u871 0F7F  
                                          u951 0672                                            u880 0F9D  
                                          u960 0691                                            u881 0F9C  
                                          u945 0650                                            u961 0690  
                                          u970 06A4                                            u890 0ECC  
                                          u971 06A3                                            u891 0ECB  
                                          u980 06C6                                            u885 0F99  
                                          u981 06C5                                            u990 06E4  
                                          u991 06E3                                            u985 06C2  
                              _timer1ReloadVal 0158                                            _pad 0FA7  
               ?_EUSART_SetFramingErrorHandler 0020                                _TMR2_Initialize 0D7E  
                            ??_CLC2_Initialize 0020                                            wreg 0009  
                                         l1100 0E5D                                           l1020 0FE3  
                                         l1022 0FFF                                           l1031 0576  
                                         l1040 05D5                                           l1104 0751  
                                         l1017 0FC1                                           l2003 0343  
                                         l1060 052F                                           l1052 046A  
                                         l2101 0DF9                                           l1045 05FF  
                                         l2005 0354                                           l2013 0388  
                                         l2103 0E01                                           l2111 0DEA  
                                         l2015 03A1                                           l2023 03EF  
                                         l2007 035C                                           l1048 0452  
                                         l2105 0E03                                           l2113 0DEB  
                                         l2121 0D81                                           l2041 043D  
                                         l2025 0400                                           l2033 0419  
                                         l2017 03A9                                           l2009 036E  
                                         l1065 0447                                           l2201 0E2E  
                                         l1074 0F65                                           l2115 0DEC  
                                         l2107 0DE4                                           l2051 0E8A  
                                         l2131 0E0A                                           l2123 0D82  
                                         l2211 0F09                                           l2035 0421  
                                         l2027 0408                                           l2019 03D5  
                                         l2203 0E34                                           l2117 0DF1  
                                         l2109 0DE9                                           l2053 0E92  
                                         l2061 0D55                                           l2133 0E0C  
                                         l2125 0D83                                           l2221 0752  
                                         l2213 0F11                                           l2029 0413  
                                         l2301 0142                                           l1086 0FA6  
                                         l1094 0ECC                                           l2055 0E9A  
                                         l2047 0E80                                           l2071 0EDB  
                                         l2063 0ECD                                           l2135 0E0D  
                                         l2127 0E06                                           l2119 0D7E  
                                         l2231 077C                                           l2223 0763  
                                         l2215 0F18                                           l2207 0EFC  
                                         l2039 0424                                           l2311 01E3  
                                         l2303 014B                                           l2057 0EA2  
                                         l2049 0E89                                           l2081 0D79  
                                         l2073 0EDC                                           l2065 0ED2  
                                         l2137 0E14                                           l2129 0E08  
                                         l2233 078E                                           l2225 0766  
                                         l2241 07A4                                           l2217 0F27  
                                         l2209 0F05                                           l2161 0F3A  
                                         l2321 02C8                                           l2313 025F  
                                         l2305 0150                                           l2091 0DB8  
                                         l2059 0D5D                                           l2083 0D7A  
                                         l2075 0EDE                                           l2067 0ED4  
                                         l2235 0796                                           l2227 0771  
                                         l2163 0F3D                                           l2331 02DE  
                                         l2323 02D0                                           l2315 0264  
                                         l2307 0174                                           l2093 0DB9  
                                         l2085 0D7B                                           l2077 0EE0  
                                         l2069 0ED8                                           l2237 0797  
                                         l2229 0775                                           l2165 0F55  
                                         l2317 02C0                                           l2309 0190  
                                         l2261 0049                                           l2095 0DF4  
                                         l2079 0D76                                           l2087 0D59  
                                         l2239 079E                                           l2167 0F5E  
                                         l2159 0F32                                           l2327 02D1  
                                         l2319 02C4                                           l2271 0077  
                                         l2263 0052                                           l2255 0040  
                                         l2193 0DD6                                           l2089 0DB3  
                                         l2097 0DF7                                           l2177 0E5E  
                                         l1801 0E4A                                           l2329 02D9  
                                         l2281 00A4                                           l2273 0086  
                                         l2265 005A                                           l2257 0047  
                                         l2195 0DE2                                           l2099 0DF8  
                                         l1803 0E4E                                           l1811 060B  
                                         l2291 00DA                                           l2283 00AE  
                                         l2275 0087                                           l2267 0063  
                                         l2259 0048                                           l2197 0D86  
                                         l1805 0E57                                           l1901 05BE  
                                         l1821 062A                                           l1813 0617  
                                         l2293 00E6                                           l2285 00B2  
                                         l2277 0088                                           l2269 006C  
                                         l1911 05E6                                           l1903 05C3  
                                         l1823 0632                                           l1815 061A  
                                         l1831 0684                                           l2295 00F8  
                                         l2287 00BD                                           l2279 008F  
                                         l1913 05EB                                           l1905 05C7  
                                         l1825 0654                                           l1817 0622  
                                         l1809 0600                                           l1841 06A4  
                                         l1833 0691                                           l1921 044E  
                                         l2297 0104                                           l2289 00C8  
                                         l1771 0DBF                                           l1915 05FA  
                                         l1827 0664                                           l1819 0626  
                                         l1843 06C6                                           l1835 0694  
                                         l1851 0FB5                                           l1931 0489  
                                         l1923 045F                                           l2299 011C  
                                         l1773 0DC3                                           l1781 0F71  
                                         l1909 05DA                                           l1829 0665  
                                         l1845 06D6                                           l1837 069C  
                                         l1861 0FD5                                           l1853 0FBA  
                                         l1933 048E                                           l1941 04EA  
                                         l1925 0465                                           l1775 0D71  
                                         l1783 0F76                                           l1871 0540  
                                         l1839 06A0                                           l1791 0EA6  
                                         l1863 0FE7                                           l1855 0FBF  
                                         l1847 0FA9                                           l1943 04F1  
                                         l1951 051C                                           l1935 04B5  
                                         l1927 0472                                           l1919 044A  
                                         l1785 0F80                                           l1777 0F66  
                                         l1881 055E                                           l1873 0544  
                                         l1793 0EA9                                           l1865 0FF0  
                                         l1857 0FC4                                           l1849 0FAD  
                                         l1945 04FD                                           l1937 04B9  
                                         l1929 0486                                           l1787 0F9D  
                                         l1779 0F6C                                           l1891 0588  
                                         l1883 0562                                           l1875 054A  
                                         l1971 0731                                           l1963 070D  
                                         l1955 06F5                                           l1795 0EB7  
                                         l1859 0FD0                                           l1947 050A  
                                         l1939 04BD                                           l1981 0D98  
                                         l1893 0594                                           l1885 0571  
                                         l1877 054E                                           l1869 0532  
                                         l1973 0741                                           l1965 0719  
                                         l1957 06FE                                           l1797 0EBC  
                                         l1949 0518                                           ?_pad 0032  
                                         l1983 0D8F                                           l1799 0E44  
                                         l1895 0599                                           l1887 0583  
                                         l1879 055A                                           l1967 0722  
                                         l1959 070A                                           l1991 030B  
                                         l1977 0DA1                                           l1897 05A7  
                                         l1969 072B                                           l1993 030F  
                                         l1985 02ED                                           l1979 0DAA  
                                         l1899 05AB                                           l1995 0321  
                                         l1987 02FE                                           l1997 0329  
                                         l1989 0306                                           l1999 0335  
                                         STR_1 083E                                           STR_2 0858  
                                         STR_3 07F9                                           STR_4 0864  
                                         STR_6 0864                                           u1000 0FAD  
                                         u1001 0FAC                                           u1010 0FBA  
                                         u1011 0FB9                                           u1100 05D5  
                                         u1020 0FE3                                           u1101 05D4  
                                         u1021 0FE2                                           u1110 05D9  
                                         u1030 0FE7                                           u1111 05D8  
                                         u1031 0FE6                                           u1120 05FA  
                                         u1040 053C                                           u1200 070A  
                                         u1121 05F9                                           u1105 05D1  
                                         u1201 0709                                           u1025 0FDF  
                                         u1050 054A                                           u1210 0722  
                                         u1130 044E                                           u1051 0549  
                                         u1211 0721                                           u1131 044D  
                                         u1060 0562                                           u1220 072B  
                                         u1140 045F                                           u1125 05F6  
                                         u1061 0561                                           u1221 072A  
                                         u1141 045E                                           u1070 0570  
                                         u1230 0731                                           u1150 04F1  
                                         u1071 056F                                           u1231 0730  
                                         u1151 04F0                                           u1400 0775  
                                         u1080 0587                                           u1240 0741  
                                         u1160 04FD                                           u1320 0F5E  
                                         u1401 0774                                           u1081 0586  
                                         u1241 0740                                           u1161 04FC  
                                         u1145 045B                                           u1321 0F5D  
                                         u1090 05A7                                           u1170 050A  
                                         u1250 02FE                                           u1091 05A6  
                                         u1075 056C                                           u1171 0509  
                                         u1251 02FD                                           u1420 078E  
                                         u1340 0F09                                           u1180 0518  
                                         u1260 0321                                           u1500 0095  
                                         u1421 078D                                           u1341 0F08  
                                         u1181 0517                                           u1261 0320  
                                         u1501 0093                                           _LATA 010C  
                                         u1190 051C                                           u1270 0354  
                                         u1510 009D                                           u1502 0096  
                                         u1415 0776                                           u1095 05A3  
                                         u1191 051B                                           u1175 0506  
                                         u1271 0353                                           u1511 009B  
                                         _LATC 010E                                           u1440 07A4  
                                         u1280 03A1                                           u1600 02E4  
                                         u1520 00A4                                           u1512 009E  
                                         u1441 07A3                                           u1425 078A  
                                         u1185 0514                                           u1281 03A0  
                                         u1601 02E3                                           u1521 00A3  
                                         u1370 0F27                                           u1290 0400  
                                         u1530 00B2                                           u1435 0798  
                                         u1371 0F26                                           u1355 0F12  
                                         u1291 03FF                                           u1531 00B1  
                                         u1380 0763                                           u1540 00DA  
                                         u1381 0762                                           u1365 0F19  
                                         u1541 00D9                                           u1550 00F8  
                                         u1551 00F7                                           u1560 011C  
                                         u1480 0082                                           u1561 011B  
                                         u1545 00D6                                           u1570 0142  
                                         u1490 008D                                           u1395 0767  
                                         u1571 0141                                           u1555 00F4  
                                         u1491 008C                                           u1580 0150  
                                         u1581 014F                                           u1565 0118  
                                         u1590 0264                                           u1591 0263  
                                         u1575 013E                              ??_CMP2_Initialize 0020  
                                         _TMR2 001A                        __end_of_OPA2_Initialize 0D59  
                                         _WPUA 020C                                           _WPUC 020E  
                                         _dbuf 0132                                           _main 0040  
                                         _prec 0076                                           _nout 00DE  
                                         pad@i 0036                                           pad@p 0033  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 0038                                           _stoa 0530  
                                         btemp 007E                                           _utoa 0448  
                                         start 0019                       __end_of_CCP1_SetCallBack 0D98  
                             ?_CCP1_CaptureISR 0070                                          ??_pad 0035  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0008  
                __end_of_OSCILLATOR_Initialize 0D7E                                          ?_main 0070  
                                        ?_stoa 002A                                __end_of___lldiv 07AD  
                                        ?_utoa 003B                                __end_of___lodiv 0684  
                                        _T1CON 0018                                          _T2CON 001C  
                              __end_of___lomod 06F5                                          i1l123 0017  
                                        i1l287 0E2D                                          i1l457 07CE  
                                        i1l459 07F8                                   vfpfcnvrt@fmt 0053  
                                 vfpfcnvrt@llu 0063                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISC 008E               __size_of_ADC_GetConversionResult 0009  
                          ___lmul@multiplicand 0024                                          _flags 0078  
                               _WDT_Initialize 0D59                                          _fputc 0F66  
                                        _fputs 0EA4                                          pad@fp 003A  
                                        _width 00E0                                          _putch 0D6F  
                                        main@i 00CC                        __end_of_TMR1_Initialize 0E18  
                                        pclath 000A                                          stoa@i 0036  
                                        stoa@l 003F                                          stoa@p 003D  
                                        stoa@s 002A                                          stoa@w 0038  
                                        utoa@d 003B                                          utoa@i 0051  
                                        utoa@n 0049                                          utoa@p 0044  
                                        utoa@w 0046                                          status 0003  
                                        wtemp0 007E                                __end_of_strncmp 0752  
                             ___lodiv@dividend 0028                                __initialization 001B  
                                 __end_of_main 02EB                                   __end_of_stoa 0600  
                                 __end_of_utoa 0530                                 ??_EUSART_Write 0020  
                      __end_of_TMR2_Initialize 0D86                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00C2                               ?_CCP1_Initialize 0070  
                                       ??_stoa 002C                                         ??_utoa 0043  
                             ___lodiv@quotient 0031                         __end_of_WDT_Initialize 0D5D  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                                         _ADCON2 009F  
                   _EUSART_OverrunErrorHandler 015C                                         ?_fputc 0022  
                                       ?_fputs 002A                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR1H 0292  
                                       _CCPR1L 0291                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELC 018E  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       _RA1PPS 0E91                                         _RC1REG 0199  
                                       _RA2PPS 0E92                                         _RA4PPS 0E94  
                                       _RC1STA 019D                                         i1l2141 07B8  
                                       i1l2151 07DE                                         i1l2143 07C3  
                                       i1l2153 07E3                                         i1l2145 07C9  
                                       _ODCONA 028C                                         i1l2155 07EF  
                                       i1l2147 07D9                                         i1l2139 07AD  
                                       i1l2171 0E18                                         i1l2251 0014  
                                       _ODCONC 028E                                         i1l2157 07F7  
                                       i1l2149 07DD                                         i1l2173 0E1A  
                                       i1l2245 0006                                         i1l2175 0E23  
                                       i1l2247 000A                                         i1l2249 000F  
                                       u130_20 07B8                                         u130_21 07B7  
                                       u130_25 07B4                                         u131_20 07E3  
                                       u131_21 07E2                                         _INLVLA 038C  
                                       _INLVLC 038E                                         u145_20 000A  
                                       u145_21 0009                                         u146_20 000F  
                                       u146_21 000E                                         u147_20 0014  
                                       u147_21 0013                               ?_OPA2_Initialize 0070  
                                       _LCMeas 00CE                                         _OSCCON 0099  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                                  _CCP1_CallBack 0156  
                                 vfprintf@cfmt 00A3                                         ___lmul 0EFC  
                                    ??___lldiv 0034                                      ??___lodiv 0030  
                                    ??___lomod 0030                                         _printf 0E2E  
                                       pad@buf 0032                                         _strlen 0E44  
                                       fputc@c 0022                                         fputs@c 002E  
                                       fputs@i 002F                                         fputs@s 0031  
                              ?_WDT_Initialize 0070                                         stoa@cp 003A  
                                       stoa@fp 003C                               __end_of_vfprintf 0F66  
                                       utoa@fp 0048                                      ??_strncmp 0026  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 0E5E  
                      __end_of__initialization 003C                             ?_SYSTEM_Initialize 0070  
               CCP1_ISR_CallBack@capturedValue 0070                                 __pcstackCOMMON 0070  
                                 __pidataBANK2 0DC7                            ??_SYSTEM_Initialize 0022  
                              _CLC2_Initialize 0DE4                                  __end_of_fputc 0FA7  
                                __end_of_fputs 0ECD                                  __end_of_putch 0D76  
                             ?_TMR2_Initialize 0070                                _CMP2_Initialize 0D5D  
                      _ADC_GetConversionResult 0D86                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 0022                                        ??_fputc 0025  
                    __end_of_SYSTEM_Initialize 0E80                                        ??_fputs 002B  
                                      ??_putch 0021                                     __pbssBANK1 00CE  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 0DC7  
                            ?_CCP1_SetCallBack 0020                                     __pmaintext 0040  
                                      ?___lmul 0020                             ??_CCP1_SetCallBack 0022  
                                   __pintentry 0004                                        _CCP1CON 0293  
                                      _CM2CON0 0113                                        _CM2CON1 0114  
                                      _CCP1PPS 0E14                                        _CLC2CON 0F1A  
                                      _CLC2POL 0F1B                                 ___lmul@product 0028  
                                      ?_printf 00A5                        __size_of_ADC_Initialize 000A  
                                      ?_strlen 0020                                        _OPA2CON 0515  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                           __size_of_vfpfcnvrt 015D                                        _OSCSTAT 009A  
                                      _OSCTUNE 0098                                        _SLRCONA 030C  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 0022  
                             ___lomod@dividend 0028                        __end_of_CLC2_Initialize 0DF4  
                                    _CLCIN0PPS 0E28                           _ADC_InterruptHandler 0130  
                      __end_of_CMP2_Initialize 0D63                                __size_of___lmul 0034  
                                      ___lldiv 0752                                        ___lodiv 0600  
                                      ___lomod 0684                                      ?_vfprintf 006C  
                    ??_ADC_GetConversionResult 0022                                        __ptext1 0E2E  
                                      __ptext2 0F30                                        __ptext3 02EB  
                                      __ptext4 0448                                        __ptext5 0FA7  
                                      __ptext6 0EA4                                        __ptext7 0684  
                                      __ptext8 0600                                        __ptext9 06F5  
                              __size_of_printf 0016                       __size_of_CCP1_CaptureISR 0016  
                                      _freqMax 00E6                                        _freqMin 00EA  
                              __size_of_strlen 001A                                      _T1CONbits 0018  
                                      _peakMax 00E2                                        _peakMin 0152  
                        _OSCILLATOR_Initialize 0D76                                      _T2CONbits 001C  
                                 __size_of_pad 0059                                      _CMOUTbits 0115  
                     ??_PIN_MANAGER_Initialize 0020                     __size_of_SYSTEM_Initialize 0022  
                                      clrloop0 0D64                                        _strncmp 06F5  
                         end_of_initialization 003C          __end_of_EUSART_SetOverrunErrorHandler 0DB3  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 0DAA  
                                      fputc@fp 0024                                        init_ram 0D69  
                                      fputs@fp 002A                                        initloop 0D6A  
                            _EUSART_Initialize 0E80                                ___lldiv@divisor 002C  
                              ___lldiv@counter 0039                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 0448                                     ??_vfprintf 00A0  
                                      strlen@a 0023                                        strlen@s 0020  
                          ??_EUSART_Initialize 0022                               ??_WDT_Initialize 0020  
                                    _PORTAbits 000C                          __size_of_EUSART_Write 000A  
                     __size_of_CCP1_Initialize 0012                __size_of_EUSART_SetErrorHandler 0009  
                    __end_of_EUSART_Initialize 0EA4                             main@dataVisualizer 00C6  
                                   main@button 00CD                               ?_CLC2_Initialize 0070  
                     __size_of_OPA2_Initialize 0004                               ?_CMP2_Initialize 0070  
                                  _CLC2CONbits 0F1A                                 __end_of___lmul 0F30  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 0054  
                                  vfpfcnvrt@cp 0061                                    vfpfcnvrt@fp 006B  
                                 _EUSART_Write 0DBD                                 _ADC_Initialize 0DB3  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_printf 0E44  
                               __end_of_strlen 0E5E                            start_initialization 001B  
                              ___lodiv@divisor 0020                                ___lodiv@counter 0039  
              __size_of_PIN_MANAGER_Initialize 002F                                    __end_of_pad 1000  
                            ??_CCP1_CaptureISR 0073                                    putch@txData 0021  
               ?_EUSART_SetOverrunErrorHandler 0020                       __size_of_TMR1_Initialize 0012  
                                  vfprintf@fmt 006C                     _EUSART_FramingErrorHandler 015E  
                                     ??___lmul 0028                         _EUSART_SetErrorHandler 0D98  
                       __end_of_ADC_Initialize 0DBD                                    __pdataBANK2 0160  
                                     ??_printf 006F                                       ??_strlen 0022  
                        CCP1_CaptureISR@module 0074                                    __pbssCOMMON 0076  
                    __size_of_CCP1_SetCallBack 0009                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                     __size_of_TMR2_Initialize 0008                     __size_of_EUSART_Initialize 0024  
                            ??_CCP1_Initialize 0022                                      __pnvBANK1 00EA  
                                    __pnvBANK2 0152                         _PIN_MANAGER_Initialize 0ECD  
                            _ADC_SelectChannel 0DD4                                       ?___lldiv 002C  
                                     ?___lodiv 0020                                       ?___lomod 0020  
                              ?_ADC_Initialize 0070                             ?_ADC_SelectChannel 0070  
                 ??_INTERRUPT_InterruptManager 0076                              ??_OPA2_Initialize 0020  
                            __size_of_vfprintf 0036                                ___lomod@divisor 0020  
                                     _BAUD1CON 019F                                ___lomod@counter 0031  
                                     _CLC2GLS0 0F20                                       _CLC2GLS1 0F21  
                                     _CLC2GLS2 0F22                                       _CLC2GLS3 0F23  
                                     _CLC2SEL0 0F1C                                       _CLC2SEL1 0F1D  
                                     _CLC2SEL2 0F1E                                       _CLC2SEL3 0F1F  
                          ??_ADC_SelectChannel 0020                                       _T1CKIPPS 0E12  
                               __size_of_fputc 0041                                 __size_of_fputs 0029  
                                     ?_strncmp 0020                                 __size_of_putch 0007  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0020  
                                    clear_ram0 0D63                                       _PIE1bits 0091  
                            _eusartRxLastError 007A                      __end_of_ADC_SelectChannel 0DE4  
          __size_of_INTERRUPT_InterruptManager 0015                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0022                                      main@F4566 0167  
            _EUSART_DefaultOverrunErrorHandler 0000                                      _vfpfcnvrt 02EB  
                            ??_TMR1_Initialize 0020                                     _ADCON0bits 009D  
                     ADC_SelectChannel@channel 0021                                    _freqPercent 0128  
                            ___lmul@multiplier 0020                              _CCP1_ISR_CallBack 07AD  
                            ??_TMR2_Initialize 0020                             ?_CCP1_ISR_CallBack 0070  
                                  _peakPercent 0120                                     vfprintf@ap 006E  
                                   vfprintf@fp 00A2                       ?_ADC_GetConversionResult 0020  
                          ??_CCP1_ISR_CallBack 0072                        ??_OSCILLATOR_Initialize 0020  
                          _EUSART_ErrorHandler 015A                               __size_of___lldiv 005B  
                             __size_of___lodiv 0084                               __size_of___lomod 0071  
                                   ?_vfpfcnvrt 0053                                _CCP1_CaptureISR 0E18  
                             _CCP1_SetCallBack 0D8F                 CCP1_SetCallBack@customCallBack 0020  
                    __end_of_CCP1_ISR_CallBack 07F9                                       __ptext10 0530  
                                     __ptext11 0E44                                       __ptext20 0E06  
                                     __ptext12 0F66                                       __ptext21 0ECD  
                                     __ptext13 0D6F                                     _T1GCONbits 0019  
                                     __ptext30 0DF4                                       __ptext22 0D76  
                                     __ptext14 0DBD                                       __ptext31 0D8F  
                                     __ptext23 0D55                                       __ptext15 0EFC  
                                     __ptext32 0DB3                                       __ptext24 0E80  
                                     __ptext16 0752                                       __ptext33 0DD4  
                                     __ptext25 0DAA                                       __ptext17 0E5E  
                                     __ptext34 0D86                                       __ptext26 0DA1  
                                     __ptext18 0D59                                       __ptext27 0D98  
                                     __ptext19 0D7E                                       __ptext36 0E18  
                                     __ptext28 0D5D                                       __ptext37 07AD  
                                     __ptext29 0DE4                                       _freqDiff 012C  
                             __size_of_strncmp 005D                                       _peakDiff 0124  
                                __size_of_main 02AB                                  __size_of_stoa 00D0  
                                __size_of_utoa 00E8                        ?_EUSART_SetErrorHandler 0020  
                   __size_of_ADC_SelectChannel 0010                                     _RC1STAbits 019D  
                                    stoa@F1131 0160  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
                                     int$flags 007E                                       _vfprintf 0F30  
           __end_of_INTERRUPT_InterruptManager 0019                     _INTERRUPT_InterruptManager 0004  
                     __size_of_CLC2_Initialize 0010                                      printf@fmt 00A5  
        __end_of_EUSART_SetFramingErrorHandler 0DAA         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 0DA1                                     _INTCONbits 000B  
                     __size_of_CMP2_Initialize 0006                                _CCP1_Initialize 0DF4  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                             ___lldiv@dividend 0030                        ?_PIN_MANAGER_Initialize 0070  
              __end_of_ADC_GetConversionResult 0D8F                 __end_of_EUSART_SetErrorHandler 0DA1  
                                    strncmp@_l 0020                                      strncmp@_r 0022  
                             ??_ADC_Initialize 0020                                _OPA2_Initialize 0D55  
                      __end_of_CCP1_CaptureISR 0E2E                                       printf@ap 00C1  
EUSART_SetFramingErrorHandler@interruptHandler 0020                                    ??_vfpfcnvrt 0055  
                                     stoa@nuls 002F                                  __pstringtext1 07F9  
                                __pstringtext2 083E                                  __pstringtext3 0858  
                                __pstringtext4 0864                                  __pstringtext5 0000  
                             ___lldiv@quotient 0035                                       strncmp@l 0027  
                                     strncmp@n 0024                                       strncmp@r 0029  
                   __size_of_CCP1_ISR_CallBack 004C                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0020                 __end_of_PIN_MANAGER_Initialize 0EFC  
                              _TMR1_Initialize 0E06  
